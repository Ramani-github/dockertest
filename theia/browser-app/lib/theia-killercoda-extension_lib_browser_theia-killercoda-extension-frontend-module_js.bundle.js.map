{"version":3,"file":"theia-killercoda-extension_lib_browser_theia-killercoda-extension-frontend-module_js.bundle.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACgH;AACjB;AAC/F,8BAA8B,mFAA2B,CAAC,4FAAqC;AAC/F;AACA,qEAAqE,gIAAgI,yCAAyC,mCAAmC,6BAA6B,GAAG,SAAS,sHAAsH,YAAY,aAAa,aAAa,aAAa,qDAAqD,gIAAgI,yCAAyC,mCAAmC,6BAA6B,GAAG,qBAAqB;AACzxB;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;ACPvC;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;AAElF,uIAAkC;AAClC,yIAAmC;AACnC,yJAA2C;AAC3C,+JAA8C;;;;;;;;;;;;;ACnB9C;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;AAElF,qIAA0D;AAC1D,6KAA2F;AAI3F,yIAAkE;AAClE,yJAA0D;AAC1D,gIAAiE;AACjE,kHAA+C;AAC/C,qHAAiD;AAEpC,iCAAyB,GAAG,cAAc,CAAC;AAExD;;GAEG;AACH,IAAiB,mBAAmB,CASnC;AATD,WAAiB,mBAAmB;IAChC;;;OAGG;IACU,gCAAY,GAAY;QACjC,EAAE,EAAE,0BAA0B;QAC9B,SAAS,EAAE,iBAAO,CAAC,cAAc,CAAC;KACrC,CAAC;AACN,CAAC,EATgB,mBAAmB,GAAnB,2BAAmB,KAAnB,2BAAmB,QASnC;AAGD,IAAa,uBAAuB,GAApC,MAAa,uBAAwB,SAAQ,4CAA2C;IAEpF;QACI,KAAK,CAAC;YACF,QAAQ,EAAE,iCAAyB;YACnC,UAAU,EAAE,uCAAiB,CAAC,KAAK;YACnC,oBAAoB,EAAE;gBAClB,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE,GAAG;aACZ;YACD,eAAe,EAAE,oBAAoB;YACrC,gBAAgB,EAAE,OAAE,CAAC,IAAI,EAAE,KAAK,OAAE,CAAC,IAAI,CAAC,KAAK;gBACzC,CAAC,CAAC,iBAAiB;gBACnB,CAAC,CAAC,SAAS;SAClB,CAAC,CAAC;IACP,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,GAAwB;QAC3C,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;IAC1B,CAAC;IAED,gBAAgB,CAAC,QAAyB;QACtC,KAAK,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QACjC,QAAQ,CAAC,eAAe,CAAC,mBAAmB,CAAC,YAAY,EAAE;YACvD,SAAS,EAAE,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC;YACxD,SAAS,EAAE,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC;YACxD,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,EAAE;SACzC,CAAC,CAAC;IACP,CAAC;IAED,oBAAoB,CAAC,OAA8B;QAC/C,OAAO,CAAC,YAAY,CAAC;YACjB,EAAE,EAAE,mBAAmB,CAAC,YAAY,CAAC,EAAE;YACvC,OAAO,EAAE,mBAAmB,CAAC,YAAY,CAAC,EAAE;YAC5C,OAAO,EAAE,SAAG,CAAC,iBAAiB,CAAC,cAAc,CAAC;YAC9C,QAAQ,EAAE,CAAC;SACd,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACO,KAAK,CAAC,gBAAgB;QAC5B,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC;QACpC,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACxB,IAAI,wBAAiB,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;YAC5B,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SAC3B;IACL,CAAC;IAED;;OAEG;IACO,UAAU,CAAI,SAA6B,IAAI,CAAC,YAAY,EAAE,EAAE,EAAoC;QAC1G,IAAI,MAAM,YAAY,uCAAiB,IAAI,MAAM,CAAC,EAAE,KAAK,iCAAyB,EAAE;YAChF,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC;SACrB;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;CACJ;AA3DY,uBAAuB;IADnC,sBAAU,EAAE;;GACA,uBAAuB,CA2DnC;AA3DY,0DAAuB;;;;;;;;;;;;;;;ACzBpC;;GAEG;AACU,uBAAe,GAAG,MAAM,CAAC,iBAAiB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBzD,qIAAgE;AAChE,yHAKiC;AACjC,4LAAqG;AACrG,sHAOgC;AAChC,0LAA8F;AAC9F,gLAAoF;AACpF,yMAAkG;AAClG,mIAIsC;AACtC,gMAA4F;AAE5F,4DAA4D;AAC5D,iDAAiD;AACpC,sCAA8B,GAAY;IACnD,EAAE,EAAE,iCAAiC;IACrC,KAAK,EAAE,WAAW;CACrB,CAAC;AAEF,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;IAEhC,YAC6C,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IACvE,CAAC;IAIL,gBAAgB,CAAC,QAAyB;QACtC,QAAQ,CAAC,eAAe,CAAC,sCAA8B,EAAE;YACrD,OAAO,EAAE,KAAK,IAAI,EAAE;gBAChB,+DAA+D;gBAC/D,oBAAoB;gBACpB,uCAAuC;gBACvC,IAAI,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;gBACpD,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC;gBACvE,yDAAyD;gBACzD,IAAI,QAAQ,EAAE;oBACV,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;oBAC1B,0BAA0B;oBAC1B,8BAA8B;oBAC9B,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;iBAC9B;gBACD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAC/C,CAAC;SACJ,CAAC,CAAC;IACP,CAAC;CACJ;AArB4B;IAAxB,sBAAM,EAAC,kCAAe,CAAC;;gEAAmD;AANlE,uBAAuB;IADnC,0BAAU,GAAE;IAIJ,iCAAM,EAAC,uBAAc,CAAC;qCAAkC,uBAAc;GAHlE,uBAAuB,CA2BnC;AA3BY,0DAAuB;AA6BpC,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAE7B,aAAa,CAAC,KAAwB;QAClC,KAAK,CAAC,kBAAkB,CAAC,qBAAW,CAAC,IAAI,EAAE;YACvC,SAAS,EAAE,sCAA8B,CAAC,EAAE;YAC5C,KAAK,EAAE,sCAA8B,CAAC,KAAK;SAC9C,CAAC,CAAC;IACP,CAAC;CACJ;AARY,oBAAoB;IADhC,0BAAU,GAAE;GACA,oBAAoB,CAQhC;AARY,oDAAoB;AAYjC,IAAa,6BAA6B,GAA1C,MAAa,6BAA6B;IAStC,KAAK,CAAC,gBAAgB;QAClB,oDAAoD;QACpD,MAAM,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;IAC/E,CAAC;IAED,KAAK,CAAC,OAAO;QACT,sCAAsC;QACtC,MAAM,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QAE3E,sCAAsC;QACtC,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC5D,iEAAiE;QACjE,MAAM,QAAQ,CAAC,KAAK,EAAE,CAAC;QACvB,sDAAsD;QACtD,8BAA8B;QAC9B,0DAA0D;QAC1D,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACxC,CAAC;CACJ;AAxBG;IADC,sBAAM,EAAC,kDAAyB,CAAC;8BACQ,kDAAyB;4EAAC;AAI3C;IAAxB,sBAAM,EAAC,kCAAe,CAAC;;sEAAmD;AAPlE,6BAA6B;IADzC,0BAAU,GAAE;GACA,6BAA6B,CA2BzC;AA3BY,sEAA6B;AA+B1C,IAAa,yBAAyB,GAAtC,MAAa,yBAA0B,SAAQ,0CAAmB;IAE9D,KAAK,CAAC,gBAAgB,CAAC,GAAwB;QAC3C,wBAAwB;IAC5B,CAAC;CAEJ;AANY,yBAAyB;IADrC,0BAAU,GAAE;GACA,yBAAyB,CAMrC;AANY,8DAAyB;AAWtC,IAAa,4BAA4B,GAAzC,MAAa,4BAA6B,SAAQ,gCAAsB;IAEpE,2EAA2E;IAE3E,KAAK,CAAC,YAAY;QACd,uCAAuC;QAEvC,MAAM,aAAa,GAAG,IAAI,CAAC,oBAAoB,CAAC;YAC5C,EAAE,EAAE,oCAA0B;YAC9B,kBAAkB,EAAE,UAAU;SACjC,CAAC,CAAC;QACH,aAAa,CAAC,eAAe,CAAC,+CAAqC,CAAC,CAAC;QACrE,6FAA6F;QAC7F,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,2BAAiB,CAAC,CAAC;QACtF,6EAA6E;QAC7E,aAAa,CAAC,SAAS,CAAC,eAAe,EAAE,IAAI,CAAC,0BAA0B,CAAC,CAAC;QAC1E,OAAO,aAAa,CAAC;IACzB,CAAC;CACJ;AAlBY,4BAA4B;IADxC,0BAAU,GAAE;GACA,4BAA4B,CAkBxC;AAlBY,oEAA4B;AAwBzC,IAAa,6BAA6B,GAA1C,MAAa,6BAA8B,SAAQ,mDAAuB;IAGtE,2EAA2E;IAE3E,KAAK,CAAC,gBAAgB,CAAC,GAAwB;QAC3C,yBAAyB;QAEzB,IAAI,MAAM,CAAC,gBAAgB,EAAE;YACzB,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;SAC5E;IACL,CAAC;IAED,aAAa,CAAC,KAAU;QACpB,gDAAgD;QAChD,IAAI,KAAK,CAAC,IAAI,EAAE;YACZ,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,EAAE;gBACpC,oCAAoC;gBACpC,6CAA6C;gBAC7C,IAAI,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;aAC7B;SACJ;IACL,CAAC;IAED,WAAW,CAAC,OAAY;QACpB,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAClC,IAAI,QAAQ,EAAE;YACV,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;SAC9B;IACL,CAAC;IAED,WAAW;QACP,IAAI,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;QACpD,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC;QACvE,IAAI,QAAQ,EAAE;YACV,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE;gBACtB,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;gBAChC,OAAO,IAAI,CAAC;aACf;SACJ;aAAM;YACH,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;SACnC;QACD,OAAO,QAAQ,CAAC;IACpB,CAAC;CACJ;AA3C4B;IAAxB,sBAAM,EAAC,kCAAe,CAAC;;sEAAmD;AAFlE,6BAA6B;IADzC,0BAAU,GAAE;GACA,6BAA6B,CA6CzC;AA7CY,sEAA6B;AAkD1C,IAAa,cAAc,GAA3B,MAAa,cAAc;IAKhB,KAAK,CAAC,qBAAqB;QAC9B,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;IAC/C,CAAC;IAED,qBAAqB;QACjB,IAAI,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;QACpD,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC;QACvE,IAAI,QAAQ,EAAE;YACV,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE;gBAC3B,gDAAgD;gBAChD,MAAM,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;gBACjC,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,0BAA0B,CAAC,CAAC;YAC1D,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IAED,UAAU;QACN,IAAI,IAAI,CAAC,+BAA+B,CAAC,KAAK,KAAK,OAAO,EAAE;YACxD,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAChC;aAAM;YACH,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;SAC/C;QAED,sFAAsF;QACtF,oDAAoD;QACpD,wCAAwC;QACxC,6DAA6D;QAC7D,WAAW;QACX,mDAAmD;QACnD,IAAI;IACR,CAAC;CACJ;AAlC4B;IAAxB,sBAAM,EAAC,kCAAe,CAAC;;uDAAmD;AAClC;IAAxC,sBAAM,EAAC,4DAA+B,CAAC;8BAAmD,4DAA+B;uEAAC;AAHlH,cAAc;IAD1B,0BAAU,GAAE;GACA,cAAc,CAoC1B;AApCY,wCAAc;;;;;;;;;;;;;;AC9L3B,+MAImD;AACnD,qIAA+D;AAC/D,yHAAwE;AACxE,yMAAkG;AAClG,mIAAoE;AACpE,gMAA4F;AAC5F,8GAAqC;AACrC,6GAA6G;AAC7G,kFAAkF;AAElF,qBAAe,IAAI,2BAAe,CAAC,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE;IACjE,MAAM,CAAC,mDAAuB,CAAC,CAAC,EAAE,CAAC,uEAA6B,CAAC,CAAC,gBAAgB,EAAE,CAAC;IACrF,MAAM,CAAC,gCAAsB,CAAC,CAAC,EAAE,CAAC,sEAA4B,CAAC,CAAC,gBAAgB,EAAE,CAAC;IACnF,MAAM,CAAC,0CAAmB,CAAC,CAAC,EAAE,CAAC,mEAAyB,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAC7E,IAAI,CAAC,yCAA+B,CAAC,CAAC,EAAE,CAAC,uEAA6B,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAC3F,IAAI,CAAC,yCAA+B,CAAC,CAAC,EAAE,CAAC,wDAAc,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAC5E,yDAAyD;IACzD,mDAAmD;AACvD,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;;;ACtB4F;AAC/F,YAA6F;;AAE7F;;AAEA;AACA;;AAEA,aAAa,0GAAG,CAAC,sFAAO;;;;AAIxB,iEAAe,6FAAc,MAAM;;;;;;;;;;ACZnC","sources":["webpack:///../theia-killercoda-extension/src/browser/index.css?../node_modules/css-loader/dist/cjs.js","webpack:///../node_modules/@theia/navigator/src/browser/index.ts?","webpack:///../node_modules/@theia/outline-view/src/browser/outline-view-contribution.ts?","webpack:///../node_modules/@theia/terminal/src/browser/base/terminal-service.ts?","webpack:///../theia-killercoda-extension/src/browser/theia-killercoda-extension-contribution.ts?","webpack:///../theia-killercoda-extension/src/browser/theia-killercoda-extension-frontend-module.ts?","webpack:///../theia-killercoda-extension/src/browser/index.css?","webpack:///ignored|/Users/kim/Wuestkamp/Projects/killercoda/components/theia/node_modules/minimatch|path?"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"#theia-main-content-panel {\\n    background-image: linear-gradient(rgb(30 30 30), rgb(30 30 30 / 40%)), url(https://killercoda.com/kc_logo.svg) !important;\\n    background-position: center center;\\n    background-repeat: no-repeat;\\n    background-size: 150px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./../theia-killercoda-extension/src/browser/index.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,yHAAyH;IACzH,kCAAkC;IAClC,4BAA4B;IAC5B,sBAAsB;AAC1B\",\"sourcesContent\":[\"#theia-main-content-panel {\\n    background-image: linear-gradient(rgb(30 30 30), rgb(30 30 30 / 40%)), url(https://killercoda.com/kc_logo.svg) !important;\\n    background-position: center center;\\n    background-repeat: no-repeat;\\n    background-size: 150px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './navigator-model';\nexport * from './navigator-widget';\nexport * from './navigator-widget-factory';\nexport * from './navigator-decorator-service';\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { AbstractViewContribution } from '@theia/core/lib/browser/shell/view-contribution';\nimport { FrontendApplicationContribution, FrontendApplication } from '@theia/core/lib/browser/frontend-application';\nimport { Command, CommandRegistry } from '@theia/core/lib/common/command';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { codicon, Widget } from '@theia/core/lib/browser/widgets';\nimport { OutlineViewWidget } from './outline-view-widget';\nimport { CompositeTreeNode } from '@theia/core/lib/browser/tree';\nimport { OS } from '@theia/core/lib/common/os';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport const OUTLINE_WIDGET_FACTORY_ID = 'outline-view';\n\n/**\n * Collection of `outline-view` commands.\n */\nexport namespace OutlineViewCommands {\n    /**\n     * Command which collapses all nodes\n     * from the `outline-view` tree.\n     */\n    export const COLLAPSE_ALL: Command = {\n        id: 'outlineView.collapse.all',\n        iconClass: codicon('collapse-all')\n    };\n}\n\n@injectable()\nexport class OutlineViewContribution extends AbstractViewContribution<OutlineViewWidget> implements FrontendApplicationContribution, TabBarToolbarContribution {\n\n    constructor() {\n        super({\n            widgetId: OUTLINE_WIDGET_FACTORY_ID,\n            widgetName: OutlineViewWidget.LABEL,\n            defaultWidgetOptions: {\n                area: 'right',\n                rank: 500\n            },\n            toggleCommandId: 'outlineView:toggle',\n            toggleKeybinding: OS.type() !== OS.Type.Linux\n                ? 'ctrlcmd+shift+i'\n                : undefined\n        });\n    }\n\n    async initializeLayout(app: FrontendApplication): Promise<void> {\n        await this.openView();\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        super.registerCommands(commands);\n        commands.registerCommand(OutlineViewCommands.COLLAPSE_ALL, {\n            isEnabled: widget => this.withWidget(widget, () => true),\n            isVisible: widget => this.withWidget(widget, () => true),\n            execute: () => this.collapseAllItems()\n        });\n    }\n\n    registerToolbarItems(toolbar: TabBarToolbarRegistry): void {\n        toolbar.registerItem({\n            id: OutlineViewCommands.COLLAPSE_ALL.id,\n            command: OutlineViewCommands.COLLAPSE_ALL.id,\n            tooltip: nls.localizeByDefault('Collapse All'),\n            priority: 0\n        });\n    }\n\n    /**\n     * Collapse all nodes in the outline view tree.\n     */\n    protected async collapseAllItems(): Promise<void> {\n        const { model } = await this.widget;\n        const root = model.root;\n        if (CompositeTreeNode.is(root)) {\n            model.collapseAll(root);\n        }\n    }\n\n    /**\n     * Determine if the current widget is the `outline-view`.\n     */\n    protected withWidget<T>(widget: Widget | undefined = this.tryGetWidget(), cb: (widget: OutlineViewWidget) => T): T | false {\n        if (widget instanceof OutlineViewWidget && widget.id === OUTLINE_WIDGET_FACTORY_ID) {\n            return cb(widget);\n        }\n        return false;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { Event } from '@theia/core/lib/common/event';\nimport { WidgetOpenerOptions } from '@theia/core/lib/browser';\nimport { TerminalWidgetOptions, TerminalWidget } from './terminal-widget';\n\n/**\n * Service manipulating terminal widgets.\n */\nexport const TerminalService = Symbol('TerminalService');\nexport interface TerminalService {\n\n    /**\n     * Create new terminal with predefined options.\n     * @param options - terminal options.\n     */\n    newTerminal(options: TerminalWidgetOptions): Promise<TerminalWidget>;\n\n    open(terminal: TerminalWidget, options?: WidgetOpenerOptions): void;\n\n    readonly all: TerminalWidget[];\n\n    /**\n     * @param id - the widget id (NOT the terminal id!)\n     * @return the widget\n     */\n    getById(id: string): TerminalWidget | undefined;\n\n    /**\n     * @param id - the terminal id (NOT the terminal widget id!)\n     * @return the widget\n     */\n    getByTerminalId(terminalId: number): TerminalWidget | undefined;\n\n    /**\n     * Returns detected default shell.\n     */\n    getDefaultShell(): Promise<string>;\n\n    readonly onDidCreateTerminal: Event<TerminalWidget>;\n\n    readonly currentTerminal: TerminalWidget | undefined;\n\n    readonly onDidChangeCurrentTerminal: Event<TerminalWidget | undefined>;\n\n    readonly lastUsedTerminal: TerminalWidget | undefined;\n}\n","import {injectable, inject} from '@theia/core/shared/inversify';\nimport {\n    FrontendApplication,\n    FrontendApplicationContribution,\n    ViewContainer,\n    CommonMenus,\n} from '@theia/core/lib/browser';\nimport { FrontendApplicationStateService } from '@theia/core/lib/browser/frontend-application-state';\nimport {\n    MessageService,\n    MenuContribution,\n    MenuModelRegistry,\n    Command,\n    CommandContribution,\n    CommandRegistry\n} from '@theia/core/lib/common';\nimport {FileNavigatorContribution} from \"@theia/navigator/lib/browser/navigator-contribution\";\nimport { TerminalService } from \"@theia/terminal/lib/browser/base/terminal-service\";\nimport {OutlineViewContribution} from \"@theia/outline-view/lib/browser/outline-view-contribution\";\nimport {\n    EXPLORER_VIEW_CONTAINER_ID,\n    EXPLORER_VIEW_CONTAINER_TITLE_OPTIONS, FILE_NAVIGATOR_ID,\n    NavigatorWidgetFactory\n} from \"@theia/navigator/lib/browser\";\nimport {ProblemContribution} from \"@theia/markers/lib/browser/problem/problem-contribution\";\n\n// ### code to add a menu item to exec test code for example\n// ### needs to be enabled in the frontend-module\nexport const TestCommandContributionCommand: Command = {\n    id: 'TestCommandContribution.command',\n    label: 'Say Hello'\n};\n@injectable()\nexport class TestCommandContribution implements CommandContribution {\n\n    constructor(\n        @inject(MessageService) private readonly messageService: MessageService,\n    ) { }\n\n    @inject(TerminalService) private readonly terminalService: TerminalService;\n\n    registerCommands(registry: CommandRegistry): void {\n        registry.registerCommand(TestCommandContributionCommand, {\n            execute: async () => {\n                // const terminal = await this.terminalService.newTerminal({});\n                // terminal.start();\n                // this.terminalService.open(terminal);\n                let terminal = this.terminalService.currentTerminal;\n                terminal = terminal ? terminal : this.terminalService.lastUsedTerminal;\n                // const terminal = this.terminalService.currentTerminal;\n                if (terminal) {\n                    terminal.sendText('\\x03');\n                    // terminal.clearOutput();\n                    // terminal.writeLine(\"ls\\n\");\n                    terminal.sendText('pwd\\n');\n                }\n                this.messageService.info('Hello World 11');\n            }\n        });\n    }\n}\n@injectable()\nexport class TestMenuContribution implements MenuContribution {\n\n    registerMenus(menus: MenuModelRegistry): void {\n        menus.registerMenuAction(CommonMenus.HELP, {\n            commandId: TestCommandContributionCommand.id,\n            label: TestCommandContributionCommand.label\n        });\n    }\n}\n\n\n@injectable()\nexport class OpenFileNavigatorContribution implements FrontendApplicationContribution {\n\n    @inject(FileNavigatorContribution)\n    protected readonly navigatorContribution: FileNavigatorContribution;\n\n    // @inject(MessageService) private readonly messageService: MessageService;\n\n    @inject(TerminalService) private readonly terminalService: TerminalService;\n\n    async initializeLayout(): Promise<void> {\n        // this.messageService.info('DDD TTTTTTTTTTTTTTTTT')\n        await this.navigatorContribution.openView({ activate: true, reveal: true })\n    }\n\n    async onStart(): Promise<void> {\n        // this.messageService.info('DDD 888')\n        await this.navigatorContribution.openView({ activate: true, reveal: true })\n\n        // Open a terminal in the bottom panel\n        const terminal = await this.terminalService.newTerminal({});\n        // console.log('killercoda', 'terminalService.newTerminal DONE');\n        await terminal.start();\n        // console.log('killercoda', 'terminal.start() DONE');\n        // await terminal.processInfo;\n        // console.log('killercoda', 'terminal.processInfo DONE');\n        this.terminalService.open(terminal);\n    }\n}\n\n\n@injectable()\nexport class CustomProblemContribution extends ProblemContribution {\n\n    async initializeLayout(app: FrontendApplication): Promise<void> {\n        //await this.openView();\n    }\n\n}\n\n\n\n@injectable()\nexport class CustomNavigatorWidgetFactory extends NavigatorWidgetFactory {\n\n    // @inject(MessageService) private readonly messageService: MessageService;\n\n    async createWidget(): Promise<ViewContainer> {\n        // this.messageService.info('DDD here')\n\n        const viewContainer = this.viewContainerFactory({\n            id: EXPLORER_VIEW_CONTAINER_ID,\n            progressLocationId: 'explorer'\n        });\n        viewContainer.setTitleOptions(EXPLORER_VIEW_CONTAINER_TITLE_OPTIONS);\n        //const openEditorsWidget = await this.widgetManager.getOrCreateWidget(OpenEditorsWidget.ID);\n        const navigatorWidget = await this.widgetManager.getOrCreateWidget(FILE_NAVIGATOR_ID);\n        // viewContainer.addWidget(openEditorsWidget, this.openEditorsWidgetOptions);\n        viewContainer.addWidget(navigatorWidget, this.fileNavigatorWidgetOptions);\n        return viewContainer;\n    }\n}\n\n\n\n\n@injectable()\nexport class CustomOutlineViewContribution extends OutlineViewContribution {\n\n    @inject(TerminalService) private readonly terminalService: TerminalService;\n    // @inject(MessageService) private readonly messageService: MessageService;\n\n    async initializeLayout(app: FrontendApplication): Promise<void> {\n        // await this.openView();\n\n        if (window.addEventListener) {\n            window.addEventListener(\"message\", this.handleMessage.bind(this), false);\n        }\n    }\n\n    handleMessage(event: any) {\n        // window.postMessage(\"kc-exec: ls -lh\\n\", \"*\");\n        if (event.data) {\n            if (event.data.startsWith('kc-exec: ')) {\n                // console.log('killercoda', event);\n                // to interrupt simply send \"\\x03\" as command\n                let command = event.data.substr(9);\n                this.execCommand(command);\n            }\n        }\n    }\n\n    execCommand(command: any) {\n        let terminal = this.getTerminal();\n        if (terminal) {\n            terminal.sendText(command);\n        }\n    }\n\n    getTerminal() {\n        let terminal = this.terminalService.currentTerminal;\n        terminal = terminal ? terminal : this.terminalService.lastUsedTerminal;\n        if (terminal) {\n            if (!terminal.isAttached) {\n                console.log('killercoda', this);\n                return null;\n            }\n        } else {\n            console.log('killercoda', this);\n        }\n        return terminal;\n    }\n}\n\n\n\n@injectable()\nexport class UiReadyChecker implements FrontendApplicationContribution {\n\n    @inject(TerminalService) private readonly terminalService: TerminalService;\n    @inject(FrontendApplicationStateService) private readonly frontendApplicationStateService: FrontendApplicationStateService;\n\n    public async onDidInitializeLayout(): Promise<void> {\n        setTimeout(this.checkReady.bind(this), 10);\n    }\n\n    waitTillTerminalReady() {\n        let terminal = this.terminalService.currentTerminal;\n        terminal = terminal ? terminal : this.terminalService.lastUsedTerminal;\n        if (terminal) {\n            terminal.processInfo.then(() => {\n                // window.postMessage(\"kc-exec: ls -lh\\n\", \"*\");\n                parent.postMessage(\"ready\", \"*\");\n                console.log('killercoda', 'killercoda: ready: READY');\n            });\n        }\n    }\n\n    checkReady() {\n        if (this.frontendApplicationStateService.state === 'ready') {\n            this.waitTillTerminalReady();\n        } else {\n            setTimeout(this.checkReady.bind(this), 100);\n        }\n\n        // if (this.frontendApplicationStateService.state === 'ready' && this.getTerminal()) {\n        //     window.postMessage(\"kc-exec: ls -lh\\n\", \"*\");\n        //     parent.postMessage(\"ready\", \"*\");\n        //     console.log('killercoda', 'killercoda: ready: READY');\n        // } else {\n        //     setTimeout(this.checkReady.bind(this), 100);\n        // }\n    }\n}\n","import {\n    CustomNavigatorWidgetFactory,\n    CustomOutlineViewContribution, CustomProblemContribution,\n    OpenFileNavigatorContribution, UiReadyChecker\n} from './theia-killercoda-extension-contribution';\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport {FrontendApplicationContribution} from \"@theia/core/lib/browser\";\nimport {OutlineViewContribution} from \"@theia/outline-view/lib/browser/outline-view-contribution\";\nimport {NavigatorWidgetFactory} from \"@theia/navigator/lib/browser\";\nimport {ProblemContribution} from \"@theia/markers/lib/browser/problem/problem-contribution\";\nimport '../../src/browser/index.css';\n// import { TestCommandContribution, TestMenuContribution } from './theia-killercoda-extension-contribution';\n// import { CommandContribution, MenuContribution } from '@theia/core/lib/common';\n\nexport default new ContainerModule((bind, unbind, isBound, rebind) => {\n    rebind(OutlineViewContribution).to(CustomOutlineViewContribution).inSingletonScope();\n    rebind(NavigatorWidgetFactory).to(CustomNavigatorWidgetFactory).inSingletonScope();\n    rebind(ProblemContribution).to(CustomProblemContribution).inSingletonScope();\n    bind(FrontendApplicationContribution).to(OpenFileNavigatorContribution).inSingletonScope();\n    bind(FrontendApplicationContribution).to(UiReadyChecker).inSingletonScope();\n    // bind(CommandContribution).to(TestCommandContribution);\n    // bind(MenuContribution).to(TestMenuContribution);\n});\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","/* (ignored) */"],"names":[],"sourceRoot":""}