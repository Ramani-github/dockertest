{"version":3,"file":"vendors-node_modules_theia_navigator_lib_browser_index_js-node_modules_theia_scm_lib_browser_-415112.bundle.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACyG;AACjB;AACxF,8BAA8B,sEAA2B,CAAC,+EAAqC;AAC/F;AACA,i5BAAi5B,oBAAoB,6BAA6B,qEAAqE,kBAAkB,uBAAuB,GAAG,sCAAsC,oBAAoB,6BAA6B,kBAAkB,qBAAqB,GAAG,kCAAkC,oBAAoB,0BAA0B,uBAAuB,kBAAkB,GAAG,uCAAuC,oBAAoB,0BAA0B,uBAAuB,kBAAkB,uBAAuB,GAAG,2CAA2C,kBAAkB,GAAG,+BAA+B,oBAAoB,6BAA6B,0BAA0B,uBAAuB,8BAA8B,kBAAkB,GAAG,sCAAsC,wBAAwB,GAAG,uCAAuC,0BAA0B,uBAAuB,8BAA8B,GAAG,oCAAoC,0BAA0B,uBAAuB,8BAA8B,gDAAgD,yBAAyB,GAAG,sCAAsC,oBAAoB,0BAA0B,GAAG,oCAAoC,yBAAyB,kBAAkB,uBAAuB,sBAAsB,uBAAuB,qBAAqB,wBAAwB,oBAAoB,uBAAuB,GAAG,SAAS,oJAAoJ,QAAQ,MAAM,UAAU,YAAY,aAAa,WAAW,YAAY,OAAO,KAAK,UAAU,YAAY,WAAW,UAAU,OAAO,KAAK,UAAU,YAAY,aAAa,WAAW,MAAM,KAAK,UAAU,YAAY,aAAa,WAAW,YAAY,OAAO,KAAK,UAAU,MAAM,KAAK,UAAU,YAAY,aAAa,aAAa,aAAa,WAAW,MAAM,KAAK,YAAY,OAAO,KAAK,YAAY,aAAa,aAAa,OAAO,KAAK,YAAY,aAAa,aAAa,aAAa,aAAa,OAAO,KAAK,UAAU,YAAY,OAAO,KAAK,YAAY,WAAW,aAAa,WAAW,YAAY,WAAW,YAAY,WAAW,YAAY,i4BAAi4B,oBAAoB,6BAA6B,qEAAqE,kBAAkB,uBAAuB,GAAG,sCAAsC,oBAAoB,6BAA6B,kBAAkB,qBAAqB,GAAG,kCAAkC,oBAAoB,0BAA0B,uBAAuB,kBAAkB,GAAG,uCAAuC,oBAAoB,0BAA0B,uBAAuB,kBAAkB,uBAAuB,GAAG,2CAA2C,kBAAkB,GAAG,+BAA+B,oBAAoB,6BAA6B,0BAA0B,uBAAuB,8BAA8B,kBAAkB,GAAG,sCAAsC,wBAAwB,GAAG,uCAAuC,0BAA0B,uBAAuB,8BAA8B,GAAG,oCAAoC,0BAA0B,uBAAuB,8BAA8B,gDAAgD,yBAAyB,GAAG,sCAAsC,oBAAoB,0BAA0B,GAAG,oCAAoC,yBAAyB,kBAAkB,uBAAuB,sBAAsB,uBAAuB,qBAAqB,wBAAwB,oBAAoB,uBAAuB,GAAG,qBAAqB;AACziL;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;ACPvC;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;AAElF,uIAAkC;AAClC,yIAAmC;AACnC,yJAA2C;AAC3C,+JAA8C;;;;;;;;;;;;;ACnB9C;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;AAElF,qIAAyE;AACzE,2KAAoF;AACpF,kKAA0G;AAE1G;;GAEG;AACU,8BAAsB,GAAG,MAAM,CAAC,wBAAwB,CAAC,CAAC;AAEvE;;GAEG;AAEH,IAAa,yBAAyB,GAAtC,MAAa,yBAA0B,SAAQ,6CAA4B;IAEvE,YAA4F,aAAkD;QAC1I,KAAK,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC,CAAC;QADgD,kBAAa,GAAb,aAAa,CAAqC;IAE9I,CAAC;CAEJ;AANY,yBAAyB;IADrC,sBAAU,EAAE;IAGI,6BAAM,CAAC,4CAAoB,CAAC,GAAE,4BAAK,CAAC,8BAAsB,CAAC;;GAF/D,yBAAyB,CAMrC;AANY,8DAAyB;;;;;;;;;;;;;AC7BtC;;;;;;;;;;;;;;kFAckF;;;AAElF,mJAAyD;AAEzD,uHAAkD;AAElD,yHAAkE;AAClE,yGAA+D;AAI/D,qHAAiD;AA+BjD,MAAM,kBAAkB,GAAG,GAAG,CAAC;AAC/B,MAAM,sBAAsB,GAAG,eAAe,CAAC;AAE/C,MAAa,iBAAkB,SAAQ,KAAK,CAAC,SAAyD;IAelG,YAAY,KAA6B;QACrC,KAAK,CAAC,KAAK,CAAC,CAAC;QAdjB;;;WAGG;QACO,mBAAc,GAAiC,MAAM,CAAC;QAEtD,qBAAgB,GAAW,CAAC,CAAC;QACvC,wBAAmB,GAAG,CAAC,QAAwB,EAAE,EAAE;YAC/C,IAAI,QAAQ,IAAI,IAAI,CAAC,gBAAgB,KAAK,CAAC,EAAE;gBACzC,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,qBAAqB,EAAE,CAAC,MAAM,CAAC;aACnE;QACL,CAAC,CAAC;QAmBiB,uBAAkB,GAAG,IAAI,2BAAoB,EAAE,CAAC;QA4InE;;;;;WAKG;QACO,UAAK,GAAG,KAAK,IAAmB,EAAE;YACxC,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,KAAK,MAAM,IAAI,IAAI,CAAC,cAAc,KAAK,MAAM,EAAE;gBAC1E,OAAO;aACV;YAED,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;YAC9B,MAAM,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QACnD,CAAC,CAAC;QAEQ,YAAO,GAAG,KAAK,IAAmB,EAAE;YAC1C,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,KAAK,MAAM,IAAI,IAAI,CAAC,cAAc,KAAK,MAAM,EAAE;gBAC1E,OAAO;aACV;YAED,MAAM,eAAe,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,IAAI,CAAC,CAAC;gBAC5D,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC;gBACnE,CAAC,CAAC,SAAS,CAAC;YAChB,MAAM,iBAAiB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,IAAI,CAAC,CAAC;gBAC9D,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC;gBACnE,CAAC,CAAC,SAAS,CAAC;YAEhB,IAAI,eAAe,EAAE;gBACjB,MAAM,qBAAqB,GAAG,iBAAiB;oBAC3C,CAAC,CAAC,iBAAiB,CAAC,MAAM,CAAC,EAAE;oBAC7B,CAAC,CAAC,SAAS,CAAC;gBAChB,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;gBAChC,MAAM,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,EAAE,qBAAqB,CAAC,CAAC;aACnF;QACL,CAAC,CAAC;QAiTO,eAAU,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;QAQvC,kBAAa,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;QArflD,IAAI,CAAC,KAAK,GAAG;YACT,UAAU,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE;YAC7B,eAAe,EAAE,EAAE;YACnB,UAAU,EAAE,SAAS;SACxB,CAAC;QAEF,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,EAAE;YACvB,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE;gBACnC,QAAQ,CAAC,QAAQ,CAAC,CAAC;aACtB;QACL,CAAC,CAAC;IACN,CAAC;IAID,KAAK,CAAC,iBAAiB;QACnB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,iBAAU,CAAC,MAAM,CAAC,GAAG,EAAE,GAAyB,CAAC,CAAC,CAAC,CAAC;QAEjF,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,aAAa,EAAE,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAC,EAAE,eAAe,EAAE,MAAM,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;QAEzH,IAAI,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE;YAClC,OAAO;SACV;QACD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CACxB,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAClF,CAAC;IACN,CAAC;IAED,oBAAoB;QAChB,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;IACtC,CAAC;IAED,KAAK,CAAC,sBAAsB;QACxB,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QAExC,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,aAAa,EAAE,CAAC;QAC9C,IAAI,UAAU,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,UAAU,CAAC,MAAM,CAAC,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,EAAE;YACjG,iBAAiB;SACpB;aAAM,IAAI,UAAU,KAAK,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,KAAK,SAAS,EAAE;YACxE,iBAAiB;SACpB;aAAM,IAAI,IAAI,CAAC,cAAc,KAAK,MAAM,EAAE;YACvC,oEAAoE;YACpE,wEAAwE;YACxE,uEAAuE;YACvE,yEAAyE;YACzE,2BAA2B;YAE3B,yEAAyE;YACzE,yEAAyE;YACzE,iEAAiE;YACjE,MAAM,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAElC,kEAAkE;YAClE,4CAA4C;YAC5C,IAAI,CAAC,QAAQ,CAAC,EAAE,eAAe,EAAE,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC;SAClE;aAAM;YACH,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,iBAAiB;YAEhF,MAAM,SAAS,GAAkB,IAAI,CAAC,cAAc,KAAK,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC;YACjF,QAAQ,IAAI,CAAC,cAAc,EAAE;gBACzB,KAAK,OAAO;oBACR,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;wBACvB,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;wBAE5C,MAAM,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC;4BACnC,qBAAqB,EAAE,eAAe,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE;4BACnD,eAAe,EAAE,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS;yBACjE,CAAC,CAAC;wBACH,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAqB,UAAU,EAAE,eAAe,CAAC,CAAC;qBACtF;oBACD,MAAM;gBACV,KAAK,SAAS;oBACV,eAAe,CAAC,GAAG,EAAE,CAAC;oBACtB,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;wBAC9B,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAqB,UAAU,EAAE,SAAS,CAAC,CAAC;qBAChF;yBAAM;wBACH,MAAM,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC;4BACnC,qBAAqB,EAAE,eAAe,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE;4BACnD,eAAe,EAAE,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS;yBACjE,CAAC,CAAC;wBACH,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAqB,UAAU,EAAE,eAAe,CAAC,CAAC;qBACtF;oBACD,MAAM;aACb;YAED,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,UAAU,EAAE;gBACrC,MAAM,cAAc,GAAG,EAAE,SAAS,EAAE,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;gBAChF,IAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,eAAe,EAAE,UAAU,kCAAO,cAAc,KAAE,KAAK,EAAE,OAAO,GAAE,EAAE,CAAC,CAAC;gBAC9G,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE;oBAClB,IAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,kCAAO,cAAc,KAAE,KAAK,EAAE,eAAe,GAAE,EAAE,CAAC,CAAC;gBACjF,CAAC,CAAC,CAAC;gBAEH,UAAU,CACN,GAAG,EAAE;oBACD,IAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;gBACrD,CAAC,EACD,kBAAkB,CAAC,CAAC;aAC3B;iBAAM;gBACH,2CAA2C;gBAC3C,IAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,eAAe,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC;aAC7F;SACJ;QAED,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;IACjC,CAAC;IAEO,KAAK,CAAC,oBAAoB;QAC9B,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACxC,MAAM,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAqB,UAAU,EAAE,SAAS,CAAC,CAAC;IACvF,CAAC;IAEO,KAAK,CAAC,iBAAiB,CAAC,UAAiC;QAC7D,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACxC,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAqB,UAAU,EAAE,SAAS,CAAC,CAAC;QAEvG,uFAAuF;QACvF,kGAAkG;QAClG,wDAAwD;QACxD,IAAI,WAAW,EAAE;YACb,MAAM,EAAE,qBAAqB,EAAE,eAAe,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YAC3E,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,eAAe,CAAC,EAAE;gBACpD,yFAAyF;gBACzF,sCAAsC;gBACtC,OAAO,EAAE,CAAC;aACb;YACD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,yBAAyB,CAAC,qBAAqB,EAAE,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YAE1I,MAAM,sBAAsB,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,EAAC,MAAM,EAAC,EAAE;gBACtD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;gBAC5E,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;YAC9B,CAAC,CAAC,CAAC;YACH,OAAO,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;SAC9C;aAAM;YACH,OAAO,EAAE,CAAC;SACb;IACL,CAAC;IAEO,aAAa;QACjB,OAAO,sBAAsB,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC;IACjF,CAAC;IAED;;;;OAIG;IACK,eAAe,CAAC,UAAiC,EAAE,iBAAqC;QAC5F,OAAO,UAAU;YACb,CAAC,CAAC,UAAU,CAAC,EAAE,KAAK,iBAAiB;YACrC,CAAC,CAAC,iBAAiB,KAAK,SAAS,CAAC;IAC1C,CAAC;IAsCO,KAAK,CAAC,kBAAkB,CAAC,eAAuB,EAAE,qBAAyC;QAC/F,MAAM,OAAO,GAAG,qBAAqB;YACjC,CAAC,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,UAAU,CAAC,qBAAqB,CAAC;YACpE,CAAC,CAAC,EAAE,CAAC;QACT,MAAM,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;QACxD,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;IACzC,CAAC;IAED,MAAM;QACF,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,IAAI,CAAC,CAAC;QAE3D,MAAM,KAAK,GAAwB,WAAW;YAC1C,CAAC,iCACM,IAAI,CAAC,KAAK,CAAC,KAAK,KACnB,UAAU,EAAE,CAAC,IAEjB,CAAC,iCACM,IAAI,CAAC,KAAK,CAAC,KAAK,KACnB,UAAU,EAAE,CAAC,EACb,SAAS,EAAE,GAAG,CAAG,4BAA4B;WAChD,CAAC;QAEN,OAAO,CACH,6BAAK,SAAS,EAAE,iBAAiB,CAAC,MAAM,CAAC,gBAAgB,GAAG,YAAY,EAAE,KAAK,EAAE,KAAK;YAE9E,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,KAAK,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,KAAK,MAAM,CAAC;gBACpJ,CAAC,CAAC,IAAI,CAAC,qBAAqB,EAAE;gBAC9B,CAAC,CAAC,EAAE;YAGR,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;gBACnB;oBACI,6BAAK,EAAE,EAAC,YAAY,EAAC,SAAS,EAAC,iBAAiB;wBAC5C,6BAAK,SAAS,EAAC,+BAA+B,IACzC,SAAG,CAAC,QAAQ,CAAC,2BAA2B,EAAE,aAAa,CAAC,CACvD;wBACL,IAAI,CAAC,gBAAgB,EAAE,CACtB,CACJ;gBACN,CAAC,CAAC,EAAE,CAEV,CACT,CAAC;IACN,CAAC;IAES,KAAK,CAAC,aAAa;QACzB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,aAAa,EAAE,CAAC;QAChE,IAAI,MAAM,EAAE;YACR,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;YAC5E,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;SAC7B;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IAES,qBAAqB;QAC3B,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,IAAI,CAAC,CAAC;QAE3D,MAAM,KAAK,GAAwB,WAAW;YAC1C,CAAC,CAAC;gBACE,UAAU,EAAE,CAAC;aAChB;YACD,CAAC,CAAC;gBACE,UAAU,EAAE,CAAC;gBACb,wEAAwE;gBACxE,+DAA+D;gBAC/D,SAAS,EAAE,CAAC;aACf,CAAC;QAEN,OAAO,6BAAK,EAAE,EAAC,gBAAgB,EAAC,SAAS,EAAC,iCAAiC,EAAC,KAAK,EAAE,KAAK;YACpF,6BAAK,SAAS,EAAC,+BAA+B;gBAC1C,6BAAK,SAAS,EAAC,YAAY,4BAA4B;gBACtD,IAAI,CAAC,4BAA4B,EAAE;gBACnC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,CACxD;YACN,6BAAK,KAAK,EAAE,IAAI,CAAC,mBAAmB,EAAE;gBACjC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CACzD,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,KAAK,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CACxE;gBAEG,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,KAAK,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,KAAK,MAAM;oBACzG,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC;oBAC7D,CAAC,CAAC,EAAE,CAEV,CACJ,CAAC;IACX,CAAC;IAES,4BAA4B;QAClC,OAAO,6BAAK,SAAS,EAAC,oCAAoC;YACtD,6BAAK,SAAS,EAAC,0BAA0B;gBACrC,6BAAK,SAAS,EAAC,yBAAyB;oBACpC,2BAAG,SAAS,EAAE,iBAAO,CAAC,MAAM,CAAC,EAAE,KAAK,EAAC,qBAAqB,EAAC,OAAO,EAAE,IAAI,CAAC,UAAU,GAAI,CACrF;gBACN,6BAAK,SAAS,EAAC,yBAAyB;oBACpC,2BAAG,SAAS,EAAE,iBAAO,CAAC,OAAO,CAAC,EAAE,KAAK,EAAC,wBAAwB,EAAC,OAAO,EAAE,IAAI,CAAC,aAAa,GAAI,CAC5F,CACJ,CACJ,CAAC;IACX,CAAC;IAES,gBAAgB;QACtB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;YACxB,OAAO,EAAE,CAAC;SACb;QAED,MAAM,QAAQ,GAAY,IAAI,CAAC;QAC/B,OAAO,6BAAK,SAAS,EAAE,iBAAiB,CAAC,MAAM,CAAC,iBAAiB,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACzI,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;YAEjD,QAAQ;gBACJ,CAAC,CAAC,6BAAK,SAAS,EAAE,iBAAiB,CAAC,MAAM,CAAC,WAAW;oBAClD,gCAAQ,SAAS,EAAC,cAAc,EAAC,KAAK,EAAE,SAAG,CAAC,QAAQ,CAAC,2BAA2B,EAAE,mBAAmB,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,IACtH,SAAG,CAAC,QAAQ,CAAC,iBAAiB,EAAE,OAAO,CAAC,CACpC,CACP;gBACN,CAAC,CAAC,EAAE,CAEV,CAAC;IACX,CAAC;IAES,wBAAwB,CAAC,UAAiD;QAChF,QAAQ,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,EAAE;YACjC,KAAK,MAAM;gBACP,OAAO,6BAAK,GAAG,EAAE,IAAI,CAAC,mBAAmB,EAAE,SAAS,EAAC,+BAA+B,IAC/E,IAAI,CAAC,2BAA2B,CAAC,UAAU,CAAC,CAC3C,CAAC;YAEX,KAAK,OAAO,CAAC;YACb,KAAK,eAAe;gBAChB,QAAQ,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,EAAE;oBACrC,KAAK,IAAI;wBACL,OAAO,6BAAK,KAAK,EAAE,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC;4BACvE,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,kBAAkB,CAAC;4BAC1E,IAAI,CAAC,2BAA2B,CAAC,UAAU,CAAC,CAC3C,CAAC;oBACX,KAAK,MAAM;wBACP,OAAO,6BAAK,KAAK,EAAE,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC;4BACzE,IAAI,CAAC,2BAA2B,CAAC,UAAU,CAAC;4BAC5C,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,kBAAkB,CAAC,CACzE,CAAC;iBACd;SACR;IACL,CAAC;IAED;;;;OAIG;IACO,WAAW,CAAC,QAA8B;QAChD,UAAU,CACN,GAAG,EAAE,CAAC,MAAM,CAAC,qBAAqB,CAAC,QAAQ,CAAC,EAC5C,CAAC,CAAC,CAAC;IACX,CAAC;IAES,2BAA2B,CAAC,UAAiD;QACnF,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,UAAU,CAAC;QACtC,OAAO,6BAAK,SAAS,EAAE,iBAAiB,CAAC,MAAM,CAAC,sBAAsB,EAAE,GAAG,EAAE,MAAM,CAAC,EAAE;YAClF,6BAAK,SAAS,EAAE,iBAAiB,CAAC,MAAM,CAAC,qBAAqB;gBAC1D,6BAAK,GAAG,EAAE,MAAM,GAAI,CAClB;YACN,6BAAK,SAAS,EAAE,iBAAiB,CAAC,MAAM,CAAC,cAAc;gBACnD,6BAAK,SAAS,EAAE,iBAAiB,CAAC,MAAM,CAAC,sBAAsB,IAAG,MAAM,CAAC,OAAO,CAAO;gBACvF,6BAAK,SAAS,EAAE,iBAAiB,CAAC,MAAM,CAAC,wBAAwB,IAAG,GAAG,MAAM,CAAC,kBAAkB,OAAO,MAAM,CAAC,UAAU,EAAE,CAAO,CAC/H,CACJ,CAAC;IACX,CAAC;IAES,iBAAiB,CAAC,OAAe;QACvC,OAAO,6BAAK,SAAS,EAAC,+CAA+C;YACjE,8BAAM,SAAS,EAAC,oBAAoB,IAAE,OAAO,CAAQ,CACnD,CAAC;IACX,CAAC;IAES,wBAAwB,CAAC,UAAiD,EAAE,mBAA4B;QAC9G,IAAI,mBAAmB,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,KAAK,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,KAAK,IAAI,EAAE;YAC3G,OAAO,6BAAK,SAAS,EAAE,iBAAiB,CAAC,MAAM,CAAC,sBAAsB,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,UAAU,CAAC,MAAM,CAAC,EAAE;gBACpI,6BAAK,SAAS,EAAC,+BAA+B,IACzC,IAAI,CAAC,2BAA2B,CAAC,UAAU,CAAC,CAC3C,CACJ,CAAC;SACV;aAAM;YACH,OAAO,6BAAK,SAAS,EAAE,iBAAiB,CAAC,MAAM,CAAC,sBAAsB,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,UAAU,CAAC,MAAM,CAAC,EAAE;gBACnI,IAAI,CAAC,2BAA2B,CAAC,UAAU,CAAC;gBAEzC,mBAAmB;oBACf,CAAC,CAAC,6BAAK,SAAS,EAAE,iBAAiB,CAAC,MAAM,CAAC,WAAW;wBAClD,gCAAQ,SAAS,EAAC,cAAc,EAAC,KAAK,EAAE,SAAG,CAAC,QAAQ,CAAC,yBAAyB,EAAE,gBAAgB,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,IACnH,SAAG,CAAC,QAAQ,CAAC,mBAAmB,EAAE,SAAS,CAAC,CACxC,CACP;oBACN,CAAC,CAAC,EAAE,CAEV,CAAC;SACV;IACL,CAAC;IAED;;;OAGG;IACO,mBAAmB;QACzB,MAAM,IAAI,GAAG;YACT,OAAO,EAAE,MAAM;YACf,UAAU,EAAE,QAAQ;YACpB,KAAK,EAAE,MAAM;YACb,SAAS,EAAE,CAAC;YACZ,UAAU,EAAE,CAAC;YACb,UAAU,EAAE,KAAK;SACpB,CAAC;QAEF,QAAQ,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,EAAE;YACjC,KAAK,MAAM;gBACP,uCACO,IAAI,KACP,aAAa,EAAE,QAAQ,EACvB,SAAS,EAAE,MAAM,EACjB,YAAY,EAAE,GAAG,IACnB;YACN,KAAK,OAAO,CAAC;YACb,KAAK,eAAe;gBAChB,IAAI,cAAc,GAAW,CAAC,CAAC;gBAC/B,IAAI,YAAY,GAAW,CAAC,CAAC;gBAC7B,QAAQ,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,EAAE;oBACrC,KAAK,MAAM;wBACP,cAAc,GAAG,CAAC,CAAC;wBACnB,YAAY,GAAG,CAAC,EAAE,CAAC;wBACnB,MAAM;oBACV,KAAK,IAAI;wBACL,cAAc,GAAG,CAAC,EAAE,CAAC;wBACrB,YAAY,GAAG,CAAC,CAAC;wBACjB,MAAM;iBACb;gBAED,QAAQ,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,EAAE;oBACjC,KAAK,OAAO;wBACR,uCACO,IAAI,KACP,aAAa,EAAE,QAAQ,EACvB,SAAS,EAAE,QAAQ,EACnB,YAAY,EAAE,GAAG,cAAc,IAAI,IACrC;oBACN,KAAK,eAAe;wBAChB,uCACO,IAAI,KACP,aAAa,EAAE,QAAQ,EACvB,SAAS,EAAE,QAAQ,EACnB,YAAY,EAAE,GAAG,YAAY,IAAI,EACjC,kBAAkB,EAAE,eAAe,EACnC,kBAAkB,EAAE,GAAG,kBAAkB,IAAI,EAC7C,wBAAwB,EAAE,QAAQ,IACpC;iBACT;SACR;IACL,CAAC;IAES,uBAAuB,CAAC,eAA0C;QACxE,OAAO,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACzD,CAAC;IAES,yBAAyB,CAAC,eAA0C;QAC1E,OAAO,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACzD,CAAC;IAES,eAAe,CAAC,eAA0C,EAAE,iBAAyB,EAAE,oBAA4B;QACzH,MAAM,IAAI,GAAG;YACT,OAAO,EAAE,MAAM;YACf,KAAK,EAAE,MAAM;YACb,QAAQ,EAAE,QAAQ;YAClB,UAAU,EAAE,CAAC;YACb,aAAa,EAAE,CAAC;YAChB,SAAS,EAAE,CAAC;YACZ,YAAY,EAAE,CAAC;YACf,MAAM,EAAE,IAAI,CAAC,gBAAgB,GAAG,CAAC;SACpC,CAAC;QAEF,8CAA8C;QAC9C,MAAM,eAAe,GAAG,oBAAoB,CAAC;QAC7C,MAAM,kBAAkB,GAAG,iBAAiB,CAAC;QAE7C,QAAQ,eAAe,EAAE;YACrB,KAAK,OAAO;gBACR,uCACO,IAAI,KACP,QAAQ,EAAE,UAAU,EACpB,aAAa,EAAE,QAAQ,EACvB,SAAS,EAAE,iBAAiB,EAC5B,YAAY,EAAE,oBAAoB,IACpC;YACN,KAAK,eAAe;gBAChB,uCACO,IAAI,KACP,QAAQ,EAAE,UAAU,EACpB,aAAa,EAAE,QAAQ,EACvB,SAAS,EAAE,eAAe,EAC1B,YAAY,EAAE,kBAAkB,EAChC,kBAAkB,EAAE,0BAA0B,EAC9C,kBAAkB,EAAE,GAAG,kBAAkB,IAAI,EAC7C,wBAAwB,EAAE,QAAQ,IACpC;SACT;IACL,CAAC;IAGS,KAAK,CAAC,YAAY;QACxB,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;YAC1C,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,kBAAkB,CAAC,CAAC,CAAC;SACzE;IACL,CAAC;IAGS,KAAK,CAAC,eAAe;QAC3B,MAAM,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAClC,IAAI,CAAC,QAAQ,CAAC,EAAE,eAAe,EAAE,EAAE,EAAE,CAAC,CAAC;IAC3C,CAAC;CACJ;AA5gBD,8CA4gBC;AAED,WAAiB,iBAAiB;IAE9B,IAAiB,MAAM,CAUtB;IAVD,WAAiB,MAAM;QACN,uBAAgB,GAAG,4BAA4B,CAAC;QAChD,wBAAiB,GAAG,6BAA6B,CAAC;QAClD,6BAAsB,GAAG,kCAAkC,CAAC;QAC5D,qBAAc,GAAG,0BAA0B,CAAC;QAC5C,4BAAqB,GAAG,iCAAiC,CAAC;QAC1D,6BAAsB,GAAG,kCAAkC,CAAC;QAC5D,+BAAwB,GAAG,+BAA+B,CAAC;QAE3D,kBAAW,GAAG,iCAAiC,CAAC;IACjE,CAAC,EAVgB,MAAM,GAAN,wBAAM,KAAN,wBAAM,QAUtB;AAEL,CAAC,EAdgB,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAcjC;;;;;;;;;;;;;ACvlBD;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;AAElF,qIAAkE;AAClE,sHAA0D;AAC1D,uHAAkD;AAClD,yHAEiC;AACjC,wHAA2C;AAC3C,6IAAwD;AACxD,gJAA0D;AAG1D,IAAa,cAAc,sBAA3B,MAAa,cAAe,SAAQ,qBAAW;IAa3C,YACoD,mBAAwC;QAExF,KAAK,EAAE,CAAC;QAFwC,wBAAmB,GAAnB,mBAAmB,CAAqB;QAHlF,sBAAiB,GAAG,IAAI,CAAC;QAgCzB,kBAAa,GAAG,CAAC,KAA6F,EAAE,EAAE;YACxH,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC;YACtD,IAAI,UAAU,EAAE;gBACZ,UAAU,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC;aAC1F;QACL,CAAC,CAAC;QA/BE,IAAI,CAAC,aAAa,GAAG;YACjB,eAAe,EAAE,IAAI;YACrB,kBAAkB,EAAE,EAAE;SACzB,CAAC;QACF,IAAI,CAAC,QAAQ,CAAC,4BAA4B,CAAC,CAAC;QAC5C,IAAI,CAAC,EAAE,GAAG,gBAAc,CAAC,EAAE,CAAC;IAChC,CAAC;IAES,MAAM;QACZ,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC;QACtD,IAAI,UAAU,IAAI,UAAU,CAAC,QAAQ,CAAC,YAAY,EAAE;YAChD,OAAO,KAAK,CAAC,aAAa,CACtB,uCAAiB,EACjB;gBACI,GAAG,EAAE,SAAS,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE;gBAC3C,KAAK,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE;gBACtB,UAAU,EAAE,UAAU;gBACtB,eAAe,EAAE,UAAU,CAAC,QAAQ,CAAC,YAAY;gBACjD,gBAAgB,EAAE,IAAI,CAAC,aAAa;gBACpC,aAAa,EAAE,IAAI,CAAC,aAAa;gBACjC,cAAc,EAAE,IAAI,CAAC,cAAc;aACtC,CACJ,CAAC;SACL;IACL,CAAC;CASJ;AAhDU,iBAAE,GAAG,kBAAkB,CAAC;AAEX;IAAnB,kBAAM,CAAC,wBAAU,CAAC;8BAAgC,wBAAU;kDAAC;AACpC;IAAzB,kBAAM,CAAC,qCAAgB,CAAC;8BAAmC,qCAAgB;qDAAC;AACrD;IAAvB,kBAAM,CAAC,wBAAc,CAAC;;sDAAmD;AAChD;IAAzB,kBAAM,CAAC,yBAAgB,CAAC;8BAAsC,yBAAgB;wDAAC;AACzD;IAAtB,kBAAM,CAAC,uBAAa,CAAC;8BAAmC,uBAAa;qDAAC;AAC3C;IAA3B,kBAAM,CAAC,4BAAkB,CAAC;8BAAiC,4BAAkB;mDAAC;AATtE,cAAc;IAD1B,sBAAU,EAAE;IAeJ,6BAAM,CAAC,6BAAmB,CAAC;qCAAyC,6BAAmB;GAdnF,cAAc,CAkD1B;AAlDY,wCAAc;;;;;;;;;;;;;AC3B3B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;AAElF,qIAAkE;AAClE,yGAAmD;AAEnD,uHAAkD;AAClD,6IAAuD;AACvD,kHAA0D;AAC1D,yHAEiC;AACjC,wHAA2C;AAG3C,IAAa,eAAe,uBAA5B,MAAa,eAAgB,SAAQ,qBAAW;IAiB5C,YACoD,mBAAwC;QAExF,KAAK,EAAE,CAAC;QAFwC,wBAAmB,GAAnB,mBAAmB,CAAqB;QAXzE,gCAA2B,GAAG,IAAI,2BAAoB,EAAE,CAAC;QAElE,sBAAiB,GAAG,IAAI,CAAC;QAEnC;;;WAGG;QACgB,aAAQ,GAAG,KAAK,CAAC,SAAS,EAAuB,CAAC;QAiH3D,kBAAa,GAAG,CAAC,KAA6F,EAAE,EAAE;YACxH,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC;YACtD,IAAI,UAAU,EAAE;gBACZ,UAAU,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC;aAC1F;QACL,CAAC,CAAC;QAhHE,IAAI,CAAC,aAAa,GAAG;YACjB,eAAe,EAAE,IAAI;YACrB,kBAAkB,EAAE,EAAE;SACzB,CAAC;QACF,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;QAClC,IAAI,CAAC,EAAE,GAAG,iBAAe,CAAC,EAAE,CAAC;IACjC,CAAC;IAES,aAAa,CAAC,GAAY;QAChC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACjC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,6BAA6B,CAAC,GAAG,EAAE;YAC3E,IAAI,CAAC,yBAAyB,EAAE,CAAC;YACjC,IAAI,CAAC,MAAM,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAES,yBAAyB;QAC/B,IAAI,CAAC,2BAA2B,CAAC,OAAO,EAAE,CAAC;QAC3C,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC;QACtD,IAAI,UAAU,EAAE;YACZ,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE;gBAC7E,IAAI,CAAC,MAAM,EAAE,CAAC;YAClB,CAAC,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,yBAAyB,CAAC,CAAC,CAAC,EAAE;gBACpF,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC,CAAC;SACP;IACL,CAAC;IAES,iBAAiB,CAAC,GAAY;QACpC,KAAK,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;IAEM,KAAK;QACR,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;IACjD,CAAC;IAES,MAAM;QACZ,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC;QACtD,IAAI,UAAU,EAAE;YACZ,OAAO,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,yBAAyB,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;SAC3G;IACL,CAAC;IAED;;OAEG;IACO,yBAAyB;QAC/B,OAAO;YACH,KAAK,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE;SACzB,CAAC;IACN,CAAC;IAES,WAAW,CAAC,KAAe;QACjC,IAAI,gBAAgB,GAAG,MAAM,CAAC;QAC9B,IAAI,KAAK,CAAC,KAAK,EAAE;YACb,QAAQ,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE;gBACtB,KAAK,6BAAiB,CAAC,KAAK;oBACxB,gBAAgB,GAAG,OAAO,CAAC;oBAC3B,MAAM;gBACV,KAAK,6BAAiB,CAAC,WAAW;oBAC9B,gBAAgB,GAAG,MAAM,CAAC;oBAC1B,MAAM;gBACV,KAAK,6BAAiB,CAAC,OAAO;oBAC1B,gBAAgB,GAAG,SAAS,CAAC;oBAC7B,MAAM;aACb;SACJ;QACD,MAAM,iBAAiB,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;QACjE,MAAM,MAAM,GAAG,CAAC,KAAa,EAAE,GAAG,IAAc,EAAU,EAAE;YACxD,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;gBACnB,OAAO,KAAK,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;oBAC1C,MAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACtB,OAAO,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACnE,CAAC,CAAC,CAAC;aACN;YACD,OAAO,KAAK,CAAC;QACjB,CAAC,CAAC;QAEF,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC9H,MAAM,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,WAAW,IAAI,EAAE,EAAE,UAAU,CAAC,CAAC;QAC5D,OAAO,6BAAK,SAAS,EAAE,iBAAe,CAAC,MAAM,CAAC,uBAAuB;YACjE,oBAAC,iCAAgB,IACb,SAAS,EAAE,GAAG,iBAAe,CAAC,MAAM,CAAC,aAAa,wCAAwC,gBAAgB,EAAE,EAC5G,EAAE,EAAE,iBAAe,CAAC,MAAM,CAAC,aAAa,EACxC,WAAW,EAAE,OAAO,EACpB,UAAU,EAAE,KAAK,EACjB,SAAS,EAAE,IAAI,EACf,KAAK,EAAE,KAAK,CAAC,KAAK,EAClB,QAAQ,EAAE,IAAI,CAAC,aAAa,EAC5B,GAAG,EAAE,IAAI,CAAC,QAAQ,EAClB,IAAI,EAAE,CAAC,EACP,OAAO,EAAE,CAAC,GACK;YACnB,6BACI,SAAS,EACL,GAAG,iBAAe,CAAC,MAAM,CAAC,kBAAkB,IAAI,iBAAe,CAAC,MAAM,CAAC,SAAS;mDACjD,gBAAgB,4BAA4B,gBAAgB,EAAE,EAEjG,KAAK,EAAE;oBACH,OAAO,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM;iBAC5C,IAAG,iBAAiB,CAAO,CAC9B,CAAC;IACX,CAAC;IASD;;OAEG;IACH,UAAU;;QACN,MAAM,OAAO,SAAG,IAAI,CAAC,UAAU,CAAC,kBAAkB,0CAAE,KAAK,CAAC,KAAK,CAAC;QAChE,OAAO,EAAE,OAAO,EAAE,CAAC;IACvB,CAAC;IAED;;;OAGG;IACH,YAAY,CAAC,QAA+B;QACxC,MAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC;QAC/B,IAAI,CAAC,KAAK,EAAE;YACR,OAAO;SACV;QACD,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC;QACpD,IAAI,UAAU,EAAE;YACZ,UAAU,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;SAClC;aAAM;YACH,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,6BAA6B,CAAC,GAAG,EAAE;gBAChE,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC;gBAChD,IAAI,UAAU,EAAE;oBACZ,QAAQ,CAAC,OAAO,EAAE,CAAC;oBACnB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,EAAE;wBACzB,UAAU,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;qBAClC;iBACJ;YACL,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACjC;IACL,CAAC;CAEJ;AAvKU,kBAAE,GAAG,mBAAmB,CAAC;AAEZ;IAAnB,kBAAM,CAAC,wBAAU,CAAC;8BAAgC,wBAAU;mDAAC;AAClC;IAA3B,kBAAM,CAAC,4BAAkB,CAAC;8BAAiC,4BAAkB;oDAAC;AALtE,eAAe;IAD3B,sBAAU,EAAE;IAmBJ,6BAAM,CAAC,6BAAmB,CAAC;qCAAyC,6BAAmB;GAlBnF,eAAe,CAyK3B;AAzKY,0CAAe;AA2K5B,WAAiB,eAAe;IAE5B,IAAiB,MAAM,CAKtB;IALD,WAAiB,MAAM;QACN,8BAAuB,GAAG,mCAAmC,CAAC;QAC9D,oBAAa,GAAG,yBAAyB,CAAC;QAC1C,yBAAkB,GAAG,oCAAoC,CAAC;QAC1D,gBAAS,GAAG,WAAW,CAAC;IACzC,CAAC,EALgB,MAAM,GAAN,sBAAM,KAAN,sBAAM,QAKtB;AAKL,CAAC,EAZgB,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAY/B;AAvLY,0CAAe;;;;;;;;;;;;;AC5B5B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;AAElF,qIAA0D;AAC1D,uHAAkD;AAClD,yHAAsD;AACtD,qKAA6E;AAC7E,qHAAiD;AAGjD,IAAa,qBAAqB,6BAAlC,MAAa,qBAAsB,SAAQ,qBAAW;IAIlD;QACI,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,QAAQ,CAAC,yBAAyB,CAAC,CAAC;QACzC,IAAI,CAAC,EAAE,GAAG,uBAAqB,CAAC,EAAE,CAAC;IACvC,CAAC;IAES,MAAM;QACZ,OAAO,oBAAC,4BAAY,IAChB,IAAI,EAAC,SAAS,EACd,MAAM,EAAE,SAAG,CAAC,QAAQ,CAAC,6BAA6B,EAAE,qBAAqB,CAAC,GAC5E,CAAC;IACP,CAAC;CAEJ;AAfU,wBAAE,GAAG,0BAA0B,CAAC;AAF9B,qBAAqB;IADjC,sBAAU,EAAE;;GACA,qBAAqB,CAiBjC;AAjBY,sDAAqB;;;;;;;;;;;;;ACvBlC;;;;;;;;;;;;;;kFAckF;;;AAGlF,qJAM6C;AAC7C,qHAAiD;AAEpC,2BAAmB,GAAqB;IACjD,IAAI,EAAE,QAAQ;IACd,UAAU,EAAE;QACR,qBAAqB,EAAE;YACnB,IAAI,EAAE,QAAQ;YACd,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;YACtB,gBAAgB,EAAE;gBACd,SAAG,CAAC,iBAAiB,CAAC,wCAAwC,CAAC;gBAC/D,SAAG,CAAC,iBAAiB,CAAC,wCAAwC,CAAC;aAClE;YACD,WAAW,EAAE,SAAG,CAAC,iBAAiB,CAAC,2DAA2D,CAAC;YAC/F,OAAO,EAAE,MAAM;SAClB;KACJ;CACJ,CAAC;AAMW,iCAAyB,GAAG,MAAM,CAAC,2BAA2B,CAAC,CAAC;AAChE,sBAAc,GAAG,MAAM,CAAC,gBAAgB,CAAC,CAAC;AAGvD,SAAgB,oBAAoB,CAAC,WAA8B,EAAE,SAA2B,2BAAmB;IAC/G,OAAO,mCAAqB,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;AACtD,CAAC;AAFD,oDAEC;AAED,SAAgB,kBAAkB,CAAC,IAAqB;IACpD,IAAI,CAAC,sBAAc,CAAC,CAAC,cAAc,CAAC,CAAC,GAAuB,EAAE,EAAE;QAC5D,MAAM,WAAW,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAoB,+BAAiB,CAAC,CAAC;QAC5E,MAAM,YAAY,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAyB,iCAAyB,CAAC,CAAC;QAC1F,OAAO,oBAAoB,CAAC,WAAW,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC;IACtB,IAAI,CAAC,iCAAyB,CAAC,CAAC,eAAe,CAAC,EAAE,MAAM,EAAE,2BAAmB,EAAE,CAAC,CAAC;IACjF,IAAI,CAAC,oCAAsB,CAAC,CAAC,SAAS,CAAC,iCAAyB,CAAC,CAAC;AACtE,CAAC;AARD,gDAQC;;;;;;;;;;;;;AC9DD;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;AAElF,qIAAkE;AAClE,gIAA6I;AAC7I,qHAA6C;AAE7C,4JAAiE;AAEpD,yBAAiB,GAAG,MAAM,CAAC,mBAAmB,CAAC,CAAC;AAiB7D,IAAiB,sBAAsB,CAKtC;AALD,WAAiB,sBAAsB;IACnC,SAAgB,EAAE,CAAC,IAAc;QAC7B,OAAO,SAAS,IAAI,IAAI,IAAI,UAAU,IAAI,IAAI;eACvC,CAAC,uBAAuB,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IAC7C,CAAC;IAHe,yBAAE,KAGjB;AACL,CAAC,EALgB,sBAAsB,GAAtB,8BAAsB,KAAtB,8BAAsB,QAKtC;AASD,IAAiB,uBAAuB,CAIvC;AAJD,WAAiB,uBAAuB;IACpC,SAAgB,EAAE,CAAC,IAAc;QAC7B,OAAO,SAAS,IAAI,IAAI,IAAI,WAAW,IAAI,IAAI,IAAI,MAAM,IAAI,IAAI,IAAI,UAAU,IAAI,IAAI,CAAC;IAC5F,CAAC;IAFe,0BAAE,KAEjB;AACL,CAAC,EAJgB,uBAAuB,GAAvB,+BAAuB,KAAvB,+BAAuB,QAIvC;AAOD,IAAiB,iBAAiB,CAajC;AAbD,WAAiB,iBAAiB;IAC9B,SAAgB,EAAE,CAAC,IAAc;QAC7B,OAAO,WAAW,IAAI,IAAI;eACnB,CAAC,uBAAuB,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IAC7C,CAAC;IAHe,oBAAE,KAGjB;IACD,SAAgB,UAAU,CAAC,IAAuB;QAC9C,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;QAC/B,IAAI,CAAC,CAAC,UAAU,IAAI,CAAC,uBAAuB,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,sBAAsB,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;YACpG,MAAM,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC;SAC/B;QACD,OAAO,UAAU,CAAC,OAAO,CAAC;IAC9B,CAAC;IANe,4BAAU,aAMzB;AAEL,CAAC,EAbgB,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAajC;AAGD,IAAsB,YAAY,GAAlC,MAAsB,YAAa,SAAQ,oBAAa;IAAxD;;QAgBc,cAAS,GAAoB,MAAM,CAAC;QA0HpC,iBAAY,GAAG,CAAC,CAA8C,EAAE,CAA8C,EAAE,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IA0L3J,CAAC;IA1TG,IAAI,UAAU;QACV,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAKD,IAAI,QAAQ,CAAC,EAAmB;QAC5B,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC;QACxC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;YAE9B,KAAK,MAAM,eAAe,IAAI,YAAY,EAAE;gBACxC,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;gBACjD,IAAI,yBAAkB,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE;oBAChC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAE,mCAAmC;iBACjE;aACJ;SACJ;IACL,CAAC;IACD,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAKS,UAAU;QAChB,MAAM,IAAI,GAAG;YACT,EAAE,EAAE,uBAAuB;YAC3B,MAAM,EAAE,SAAS;YACjB,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,QAAQ,EAAE,EAAE;SACU,CAAC;QAE3B,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM;aACzB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;aACjE,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;QACjD,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;QAE3B,OAAO,IAAI,CAAC;IAChB,CAAC;IAES,WAAW,CAAC,KAAuB,EAAE,MAAyB;QACpE,MAAM,SAAS,GAA2B;YACtC,EAAE,EAAE,GAAG,KAAK,CAAC,EAAE,EAAE;YACjB,OAAO,EAAE,KAAK,CAAC,EAAE;YACjB,UAAU,EAAE,KAAK,CAAC,KAAK;YACvB,MAAM;YACN,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,IAAI;SACjB,CAAC;QAEF,MAAM,eAAe,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CACpD,EAAE,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CACjE,CAAC;QAEF,QAAQ,IAAI,CAAC,SAAS,EAAE;YACpB,KAAK,MAAM;gBACP,SAAS,CAAC,QAAQ,GAAG,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC;gBACjG,MAAM;YACV,KAAK,MAAM;gBACP,MAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC;gBACvC,IAAI,OAAO,EAAE;oBACT,MAAM,aAAa,GAAG,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;wBACjD,MAAM,YAAY,GAAG,IAAI,aAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;wBACnE,MAAM,SAAS,GAAG,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;wBACzE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC;oBACnC,CAAC,CAAC,CAAC;oBACH,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,aAAa,EAAE,CAAC,EAAE,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC;iBACzG;gBACD,MAAM;SACb;QAED,OAAO,SAAS,CAAC;IACrB,CAAC;IAES,mBAAmB,CACzB,eAAiE,EACjE,KAAa,EACb,GAAW,EACX,KAAa,EACb,MAA0D;QAE1D,MAAM,MAAM,GAAoD,EAAE,CAAC;QAEnE,IAAI,WAAW,GAAG,KAAK,CAAC;QACxB,OAAO,WAAW,GAAG,GAAG,EAAE;YACtB,MAAM,eAAe,GAAG,eAAe,CAAC,WAAW,CAAC,CAAC;YACrD,IAAI,KAAK,KAAK,eAAe,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;gBAChD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;gBACrE,WAAW,EAAE,CAAC;aACjB;iBAAM;gBACH,IAAI,KAAK,GAAG,WAAW,GAAG,CAAC,CAAC;gBAC5B,OAAO,KAAK,GAAG,GAAG,EAAE;oBAChB,IAAI,eAAe,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;wBAC9E,MAAM;qBACT;oBACD,KAAK,EAAE,CAAC;iBACX;gBACD,MAAM,SAAS,GAAG,KAAK,CAAC;gBAExB,MAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,IAAI,CAAC,CAAC;gBAC1D,IAAI,SAAS,GAAG,WAAW,GAAG,gBAAgB,EAAE;oBAC5C,8DAA8D;oBAC9D,KAAK,IAAI,CAAC,GAAG,WAAW,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;wBAC1C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;qBAC3E;iBACJ;qBAAM;oBACH,MAAM,cAAc,GAAG,eAAe,CAAC,SAAS,CAAC;oBACjD,MAAM,aAAa,GAAG,eAAe,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC;oBAC/D,oCAAoC;oBACpC,2DAA2D;oBAC3D,IAAI,SAAS,GAAG,KAAK,GAAG,CAAC,CAAC;oBAC1B,OAAO,SAAS,GAAG,cAAc,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,GAAG,aAAa,CAAC,MAAM,GAAG,CAAC,IAAI,cAAc,CAAC,SAAS,CAAC,KAAK,aAAa,CAAC,SAAS,CAAC,EAAE;wBAC5I,SAAS,EAAE,CAAC;qBACf;oBACD,MAAM,gBAAgB,GAAG,cAAc,CAAC,KAAK,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAC1E,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,eAAe,EAAE,WAAW,EAAE,SAAS,EAAE,SAAS,EAAE,gBAAgB,EAAE,MAAM,CAAC,CAAC,CAAC;iBAC1H;gBACD,WAAW,GAAG,SAAS,CAAC;aAC3B;SACJ;QAAA,CAAC;QACF,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC1C,CAAC;IAGS,cAAc,CAAC,CAA8C,EAAE,CAA8C;QACnH,MAAM,SAAS,GAAG,uBAAuB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAChD,MAAM,SAAS,GAAG,uBAAuB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAChD,IAAI,SAAS,IAAI,CAAC,SAAS,EAAE;YACzB,OAAO,CAAC,CAAC,CAAC;SACb;QACD,IAAI,SAAS,IAAI,CAAC,SAAS,EAAE;YACzB,OAAO,CAAC,CAAC;SACZ;QACD,OAAO,CAAC,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IAClD,CAAC;IAES,sBAAsB,CAC5B,SAA2D,EAC3D,KAAa,EACb,GAAW,EACX,KAAa,EACb,gBAAwB,EACxB,MAA0D;QAE1D,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC;QAC7C,IAAI,UAAU,GAAW,OAAO,CAAC;QACjC,IAAI,uBAAuB,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE;YACpC,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC;SACjC;QACD,MAAM,SAAS,GAAG,IAAI,aAAG,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;QAEhE,MAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC3G,MAAM,EAAE,GAAG,GAAG,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC;QACpD,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,UAAU,GAA4B;YACxC,EAAE;YACF,OAAO,EAAE,MAAM,CAAC,OAAO;YACvB,IAAI,EAAE,gBAAgB;YACtB,SAAS,EAAE,MAAM,CAAC,SAAS,CAAC;YAC5B,QAAQ,EAAE,EAAE;YACZ,MAAM;YACN,QAAQ,EAAE,yBAAkB,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,gBAAgB;YAC9E,QAAQ,EAAE,yBAAkB,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,QAAQ;SAC/D,CAAC;QACF,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,SAAS,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;QACzF,OAAO,UAAU,CAAC;IACtB,CAAC;IAES,OAAO,CAAC,IAAsD;QACpE,IAAI,MAAM,GAAG,IAAI,CAAC,MAAO,CAAC;QAC1B,OAAO,sBAAsB,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,uBAAuB,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE;YAC5E,MAAM,GAAG,MAAM,CAAC,MAAO,CAAC;SAC3B;QACD,OAAO,MAA+B,CAAC;IAC3C,CAAC;IAES,gBAAgB,CAAC,QAAqB,EAAE,MAAyB;QACvE,MAAM,EAAE,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,EAAE,IAAI,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC;QAChE,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,IAAI,GAAG;YACT,EAAE;YACF,SAAS,EAAE,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC;YACrC,WAAW,EAAE,QAAQ,CAAC,WAAW;YACjC,MAAM;YACN,QAAQ,EAAE,yBAAkB,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,QAAQ;SAC/D,CAAC;QACF,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;SAC5C;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAES,KAAK,CAAC,UAAU,CAAC,IAAc;QACrC,IAAI,uBAAuB,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;YAChE,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;YAC/B,IAAI,yBAAkB,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE;gBACnC,MAAM,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;gBAClC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE;oBACtB,MAAM,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;iBACrC;aACJ;SACJ;IACL,CAAC;IAED,mBAAmB,CAAC,IAAuB;QACvC,MAAM,OAAO,GAAG,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACnD,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACtC,IAAI,KAAK,EAAE;YACP,OAAO,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,SAAS,CAAE,CAAC;SAC7E;IACL,CAAC;IAED,wBAAwB,CAAC,IAA4B;QACjD,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACxC,CAAC;IAED,0BAA0B,CAAC,IAA6B;QACpD,MAAM,SAAS,GAAkB,EAAE,CAAC;QACpC,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC3C,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;SACjD;QACD,OAAO,SAAS,CAAC;IAErB,CAAC;IACD,gBAAgB,CAAC,aAA6C;QAC1D,MAAM,SAAS,GAAkB,EAAE,CAAC;QACpC,KAAK,MAAM,IAAI,IAAI,aAAa,EAAE;YAC9B,IAAI,iBAAiB,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;gBAC5B,MAAM,OAAO,GAAG,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBACnD,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;gBACtC,IAAI,KAAK,EAAE;oBACP,MAAM,gBAAgB,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,CAAC;oBAC3F,IAAI,gBAAgB,EAAE;wBAClB,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;qBACpC;iBACJ;aACJ;YACD,IAAI,uBAAuB,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;gBAClC,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC3C,IAAI,KAAK,EAAE;oBACP,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;iBACjD;aACJ;SACJ;QACD,8EAA8E;QAC9E,OAAO,SAAS,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,KAAK,KAAK,CAAC,SAAS,CAAC,KAAK,KAAK,CAAC,CAAC;IAC3H,CAAC;IAES,gBAAgB,CAAC,SAAwB,EAAE,IAAc,EAAE,KAAuB;QACxF,IAAI,uBAAuB,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;YAClC,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAC/B,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;aAClD;SACJ;aAAM,IAAI,iBAAiB,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;YACnC,MAAM,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,SAAS,CAAE,CAAC;YACpF,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC5B;IACL,CAAC;IAED,iBAAiB,CAAC,IAAc,EAAE,QAAoB;QAClD,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAChB,OAAO;SACV;QAED,IAAI,OAAe,CAAC;QACpB,IAAI,sBAAsB,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,uBAAuB,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;YACrE,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;SAC1B;aAAM,IAAI,iBAAiB,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;YACnC,OAAO,GAAG,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SAChD;aAAM;YACH,OAAO;SACV;QAED,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAC/C,IAAI;YACA,QAAQ,EAAE,CAAC;SACd;gBAAS;SACT;IACL,CAAC;IAED;;;;;;;;OAQG;IACH,SAAS,CAAC,OAAe;QACrB,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,OAAO,CAAC,CAAC;IACnD,CAAC;IAED,8DAA8D;IAC9D,UAAU;QACN,uCACO,KAAK,CAAC,UAAU,EAAE,KACrB,IAAI,EAAE,IAAI,CAAC,QAAQ,IACrB;IACN,CAAC;IAED,8DAA8D;IAC9D,YAAY,CAAC,QAAa;QACtB,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;IAC/D,CAAC;CAEJ;AA9TsB;IAAlB,kBAAM,CAAC,gBAAS,CAAC;;2CAA6C;AAEjC;IAA7B,kBAAM,CAAC,8CAAoB,CAAC;8BAAiC,8CAAoB;iDAAC;AARjE,YAAY;IADjC,sBAAU,EAAE;GACS,YAAY,CAoUjC;AApUqB,oCAAY;;;;;;;;;;;;;AChFlC;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;AAElF,wEAAwE;AAExE,uHAAkD;AAClD,qIAAkE;AAClE,qHAA6C;AAC7C,kHAAkD;AAClD,0IAAqF;AACrF,gIAAgL;AAChL,iIAA2I;AAC3I,wHAA6G;AAE7G,iIAAiE;AACjE,yHAAqH;AACrH,4JAAiE;AACjE,6HAA+F;AAE/F,oKAA8E;AAC9E,wJAAuE;AACvE,uKAA6F;AAG7F,IAAa,aAAa,qBAA1B,MAAa,aAAc,SAAQ,iBAAU;IAyBzC,YACgC,KAAgB,EAChB,SAAoB,EACA,mBAAwC;QAExF,KAAK,CAAC,KAAK,EAAE,SAAS,EAAE,mBAAmB,CAAC,CAAC;QAJjB,UAAK,GAAL,KAAK,CAAW;QAChB,cAAS,GAAT,SAAS,CAAW;QACA,wBAAmB,GAAnB,mBAAmB,CAAqB;QAGxF,IAAI,CAAC,EAAE,GAAG,eAAa,CAAC,EAAE,CAAC;QAC3B,IAAI,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC;QACxC,IAAI,CAAC,KAAK,GAAG,SAAyB,CAAC;IAC3C,CAAC;IAED,IAAI,QAAQ,CAAC,EAAmB;QAC5B,kFAAkF;QAClF,8CAA8C;QAC9C,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;IAC7B,CAAC;IACD,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;IAC/B,CAAC;IAED;;;;OAIG;IACO,UAAU,CAAC,IAAc,EAAE,KAAgB;;QACjD,IAAI,CAAC,eAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC3B,OAAO,SAAS,CAAC;SACpB;QAED,MAAM,UAAU,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAC1D,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC/C,MAAM,gBAAgB,SAAG,IAAI,CAAC,gBAAgB,0CAAE,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC7D,yDAAyD;QACzD,MAAM,OAAO,GAAG,CAAC,gBAAgB,IAAI,CAAC,uCAAsB,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAE3H,IAAI,uCAAsB,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;YACjC,MAAM,OAAO,GAAG,oBAAC,uBAAuB,IACpC,GAAG,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,EACtB,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,QAAQ,EAAE,IAAI,EACd,qBAAqB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,KAAK,CAAC,EACpE,mBAAmB,EAAE,IAAI,CAAC,mBAAmB,EAC7C,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,aAAa,EAAE,IAAI,CAAC,aAAa,EACjC,eAAe,EAAE,IAAI,CAAC,eAAe,EACrC,OAAO,EAAE,OAAO,GAClB,CAAC;YAEH,OAAO,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;SAE1D;QACD,IAAI,wCAAuB,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;YAClC,MAAM,OAAO,GAAG,oBAAC,wBAAwB,IACrC,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,EAC3B,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,QAAQ,EAAE,IAAI,EACd,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,qBAAqB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,KAAK,CAAC,EACpE,mBAAmB,EAAE,IAAI,CAAC,mBAAmB,EAC7C,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,aAAa,EAAE,IAAI,CAAC,aAAa,EACjC,eAAe,EAAE,IAAI,CAAC,eAAe,EACrC,OAAO,EAAE,OAAO,GAClB,CAAC;YAEH,OAAO,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;SAC1D;QACD,IAAI,kCAAiB,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;YAC5B,MAAM,UAAU,GACZ,CAAC,IAAI,CAAC,MAAM,IAAI,wCAAuB,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACpD,CAAC,CAAC,IAAI,aAAG,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,aAAG,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAEvE,MAAM,OAAO,GAAG,oBAAC,oBAAoB,kBACjC,GAAG,EAAE,IAAI,CAAC,SAAS,EACnB,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,QAAQ,EAAE,IAAI,EACd,mBAAmB,EAAE,IAAI,CAAC,mBAAmB,EAC7C,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,aAAa,EAAE,IAAI,CAAC,aAAa,EACjC,eAAe,EAAE,IAAI,CAAC,eAAe,EACrC,OAAO,EAAE,OAAO,oCAET,IAAI,CAAC,KAAK,KACb,UAAU,EACV,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,UAAU,EAAE,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,IAAI,aAAG,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EACnF,MAAM,EAAE,IAAI,CAAC,MAAM,EACnB,qBAAqB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,KAAK,CAAC,KAE1E,CAAC;YACH,OAAO,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;SAC1D;QACD,OAAO,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACzC,CAAC;IAES,yBAAyB;QAC/B,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAAE;YAC7B,uCACO,KAAK,CAAC,yBAAyB,EAAE,KACpC,QAAQ,EAAE,CAAC,IACb;SACL;QACD,OAAO,KAAK,CAAC,yBAAyB,EAAE,CAAC;IAC7C,CAAC;IAED;;;;;;;;;;;;;;;;;;OAkBG;IACO,KAAK,CAAC,UAAU,CAAC,KAAoB;QAC3C,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YACvC,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YACjD,IAAI,kCAAiB,CAAC,EAAE,CAAC,YAAY,CAAC,EAAE;gBACpC,MAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;gBACtE,IAAI,CAAC,gBAAgB,EAAE;oBACnB,OAAO,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;iBAClC;gBACD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;gBAEzD,IAAI,MAAM,EAAE;oBACR,MAAM,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;oBAChE,IAAI,aAAa,CAAC,WAAW,EAAE,IAAI,aAAa,CAAC,WAAW,EAAE,EAAE;wBAC5D,aAAa,CAAC,QAAQ,EAAE,CAAC;qBAC5B;yBAAM;wBACH,MAAM,YAAY,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;wBACnD,IAAI,YAAY,EAAE;4BACd,MAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;4BACtE,IAAI,gBAAgB,EAAE;gCAClB,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;6BACvC;yBACJ;qBACJ;oBACD,OAAO;iBACV;aACJ;SACJ;QACD,OAAO,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAED;;;;;;;;;;;;;OAaG;IACO,KAAK,CAAC,WAAW,CAAC,KAAoB;QAC5C,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YACvC,MAAM,SAAS,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAChD,2DAA2D;YAC3D,IAAI,CAAC,SAAS,EAAE;gBACZ,OAAO;aACV;YACD,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;YACjC,OAAO;SACV;QACD,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YACvC,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YACjD,IAAI,kCAAiB,CAAC,EAAE,CAAC,YAAY,CAAC,EAAE;gBACpC,MAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;gBACtE,IAAI,CAAC,gBAAgB,EAAE;oBACnB,OAAO,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;iBACnC;gBACD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;gBAEzD,IAAI,MAAM,EAAE;oBACR,MAAM,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;oBAChE,IAAI,aAAa,CAAC,WAAW,EAAE,IAAI,aAAa,CAAC,OAAO,EAAE,EAAE;wBACxD,aAAa,CAAC,IAAI,EAAE,CAAC;qBACxB;yBAAM;wBACH,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC3C,IAAI,QAAQ,EAAE;4BACV,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;4BAC9D,IAAI,YAAY,EAAE;gCACd,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;6BACnC;yBACJ;qBACJ;iBACJ;gBACD,OAAO;aACV;SACJ;QACD,OAAO,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IAES,WAAW,CAAC,KAAoB;QACtC,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YACvC,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YACjD,IAAI,kCAAiB,CAAC,EAAE,CAAC,YAAY,CAAC,EAAE;gBACpC,MAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;gBACtE,IAAI,gBAAgB,EAAE;oBAClB,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;iBACvC;gBACD,OAAO;aACV;SACJ;QACD,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC;IAED,KAAK,CAAC,kBAAkB;QACpB,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YACvC,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YACjD,IAAI,kCAAiB,CAAC,EAAE,CAAC,YAAY,CAAC,EAAE;gBACpC,IAAI,kCAAiB,CAAC,EAAE,CAAC,YAAY,CAAC,EAAE;oBACpC,MAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;oBACtE,IAAI,CAAC,gBAAgB,EAAE;wBACnB,OAAO;qBACV;oBACD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;oBAEzD,IAAI,MAAM,EAAE;wBACR,MAAM,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;wBAChE,IAAI,aAAa,CAAC,WAAW,EAAE,IAAI,aAAa,CAAC,WAAW,EAAE,EAAE;4BAC5D,aAAa,CAAC,QAAQ,EAAE,CAAC;yBAC5B;6BAAM;4BACH,MAAM,YAAY,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;4BACnD,IAAI,YAAY,EAAE;gCACd,MAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;gCACtE,IAAI,gBAAgB,EAAE;oCAClB,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;iCACvC;6BACJ;yBACJ;qBACJ;iBACJ;aACJ;SACJ;IACL,CAAC;IAED,KAAK,CAAC,cAAc;QAChB,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YACvC,MAAM,SAAS,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAChD,2DAA2D;YAC3D,IAAI,CAAC,SAAS,EAAE;gBACZ,OAAO;aACV;YACD,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;YACjC,OAAO;SACV;QACD,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YACvC,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YACjD,IAAI,kCAAiB,CAAC,EAAE,CAAC,YAAY,CAAC,EAAE;gBACpC,MAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;gBACtE,IAAI,CAAC,gBAAgB,EAAE;oBACnB,OAAO;iBACV;gBACD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;gBAEzD,IAAI,MAAM,EAAE;oBACR,MAAM,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;oBAChE,IAAI,aAAa,CAAC,WAAW,EAAE,IAAI,aAAa,CAAC,OAAO,EAAE,EAAE;wBACxD,aAAa,CAAC,IAAI,EAAE,CAAC;qBACxB;yBAAM;wBACH,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC3C,IAAI,QAAQ,EAAE;4BACV,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;4BAC9D,IAAI,YAAY,EAAE;gCACd,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;6BACnC;yBACJ;qBACJ;iBACJ;aACJ;SACJ;IACL,CAAC;IAES,sBAAsB;QAC5B,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;YACjB,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAA6B,CAAC;YACtD,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACnC,OAAO,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SAChC;IACL,CAAC;IAES,sBAAsB;QAC5B,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,qBAAqB,EAAE,CAAC;QACtD,OAAO,YAAY,EAAE;YACjB,IAAI,kCAAiB,CAAC,EAAE,CAAC,YAAY,CAAC,EAAE;gBACpC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;gBACpC,OAAO,YAAY,CAAC;aACvB;YACD,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,YAAY,CAAC,CAAC;SACjE;QAAA,CAAC;IACN,CAAC;IAES,kBAAkB;QACxB,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,qBAAqB,EAAE,CAAC;QAClD,OAAO,QAAQ,EAAE;YACb,IAAI,kCAAiB,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE;gBAChC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gBAChC,OAAO,QAAQ,CAAC;aACnB;YACD,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;SACzD;QAAA,CAAC;IACN,CAAC;IAES,KAAK,CAAC,YAAY,CAAC,QAAqB;QAC9C,IAAI;YACA,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;SACzB;QAAC,OAAO,CAAC,EAAE;YACR,OAAO,CAAC,KAAK,CAAC,+BAA+B,EAAE,CAAC,CAAC,CAAC;YAClD,OAAO,SAAS,CAAC;SACpB;QAED,IAAI,gBAA0C,CAAC;QAC/C,MAAM,YAAY,GAAG,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAExD,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE;YACzC,MAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC;YAC/C,MAAM,kBAAkB,GAAG,IAAI,aAAG,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChE,IAAI,YAAY,KAAK,kBAAkB,EAAE;gBACrC,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,KAAK,kBAAQ,CAAC,WAAW,EAAE;oBACnD,qBAAqB;oBACrB,OAAO,MAAM,CAAC;iBACjB;qBAAM;oBACH,gBAAgB,GAAG,MAAM,CAAC;iBAC7B;aACJ;YACD,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,KAAK,kBAAQ,CAAC,WAAW;mBAC9C,WAAW,KAAK,QAAQ,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE;gBAClD,OAAO,MAAM,CAAC;aACjB;SACJ;QACD,gCAAgC;QAChC,OAAO,gBAAgB,CAAC;IAC5B,CAAC;IAES,cAAc,CAAC,IAAc,EAAE,KAAgB;QACrD,IAAI,IAAI,CAAC,QAAQ,KAAK,MAAM,EAAE;YAC1B,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC;aAC5C;SACJ;QACD,OAAO,KAAK,CAAC,cAAc,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC7C,CAAC;IAES,2BAA2B,CAAC,IAAc;QAChD,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;QACjF,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,mBAAmB,IAAI,CAAC,KAAK,CAAC,YAAY,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,EAAE;YACvF,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,KAAK,CAAC,2BAA2B,CAAC,IAAI,CAAC,CAAC;IACnD,CAAC;CAEJ;AA7YU,gBAAE,GAAG,qBAAqB,CAAC;AAE3B,yCAA2B,GAAG,CAAC,6BAA6B,CAAC,CAAC;AAC9D,wCAA0B,GAAG,CAAC,4BAA4B,CAAC,CAAC;AAE5D,0CAA4B,GAAG,CAAC,8BAA8B,CAAC,CAAC;AAChE,yCAA2B,GAAG,CAAC,6BAA6B,CAAC,CAAC;AAE9D,kCAAoB,GAAG,CAAC,sBAAsB,CAAC,CAAC;AAChD,mCAAqB,GAAG,CAAC,uBAAuB,CAAC,CAAC;AAE9B;IAA1B,kBAAM,CAAC,wBAAiB,CAAC;8BAA2B,wBAAiB;4CAAC;AAC9C;IAAxB,kBAAM,CAAC,yBAAe,CAAC;8BAA8B,yBAAe;+CAAC;AAC7C;IAAxB,kBAAM,CAAC,yBAAe,CAAC;;sDAAqD;AAC/C;IAA7B,kBAAM,CAAC,8CAAoB,CAAC;8BAAiC,8CAAoB;kDAAC;AAC5D;IAAtB,kBAAM,CAAC,uBAAa,CAAC;8BAAmC,uBAAa;oDAAC;AACxC;IAA9B,kBAAM,CAAC,+BAAqB,CAAC;;4DAAiE;AACrE;IAAzB,kBAAM,CAAC,qCAAgB,CAAC;8BAAsC,qCAAgB;uDAAC;AACpD;IAA3B,kBAAM,CAAC,wCAAkB,CAAC;;yDAA2D;AAC/D;IAAtB,kBAAM,CAAC,8BAAa,CAAC;8BAA4B,8BAAa;6CAAC;AArBvD,aAAa;IADzB,sBAAU,EAAE;IA2BJ,6BAAM,CAAC,gBAAS,CAAC;IACjB,6BAAM,CAAC,gBAAS,CAAC;IACjB,6BAAM,CAAC,6BAAmB,CAAC;qDAAyC,6BAAmB;GA5BnF,aAAa,CA+YzB;AA/YY,sCAAa;AAiZ1B,WAAiB,aAAa;IAC1B,IAAiB,MAAM,CAEtB;IAFD,WAAiB,MAAM;QACN,gBAAS,GAAG,WAAW,CAAC;IACzC,CAAC,EAFgB,MAAM,GAAN,oBAAM,KAAN,oBAAM,QAEtB;AAaL,CAAC,EAhBgB,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAgB7B;AAjaY,sCAAa;AAma1B,MAAsB,UAA0D,SAAQ,KAAK,CAAC,SAA8B;IAExH,YAAY,KAAQ;QAChB,KAAK,CAAC,KAAK,CAAC,CAAC;QAaE,uBAAkB,GAAG,IAAI,iCAAoB,EAAE,CAAC;QAQzD,gBAAW,GAAG,CAAC,OAA2B,EAAE,EAAE;YACpD,IAAI,OAAO,EAAE;gBACT,MAAM,CAAC,qBAAqB,CAAC,GAAG,EAAE;oBAC9B,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;oBACxC,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;gBAC7B,CAAC,CAAC,CAAC;aACN;QACL,CAAC,CAAC;QACQ,cAAS,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;QACjD,cAAS,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;QAElD,sBAAiB,GAAG,CAAC,KAAoC,EAAE,EAAE;YACnE,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,mBAAmB,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;YAC3D,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,GAAG,EAAE;gBAC1C,mBAAmB,CAAC,MAAM,CAAC;oBACvB,QAAQ,EAAE,IAAI,CAAC,eAAe;oBAC9B,MAAM,EAAE,KAAK,CAAC,WAAW;oBACzB,IAAI,EAAE,IAAI,CAAC,eAAe;iBAC7B,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC;QAzCE,IAAI,CAAC,KAAK,GAAG;YACT,KAAK,EAAE,KAAK;SACf,CAAC;QAEF,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,EAAE;YACvB,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE;gBACnC,QAAQ,CAAC,QAAQ,CAAC,CAAC;aACtB;QACL,CAAC,CAAC;IACN,CAAC;IAGD,iBAAiB;QACb,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,uBAAU,CAAC,MAAM,CAAC,GAAG,EAAE,GAAyB,CAAC,CAAC,CAAC,CAAC;IACrF,CAAC;IACD,oBAAoB;QAChB,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;IACtC,CAAC;CA4BJ;AAlDD,gCAkDC;AAUD,MAAa,oBAAqB,SAAQ,UAAsC;IAAhF;;QAgDc,SAAI,GAAG,GAAG,EAAE;YAClB,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC3E,IAAI,QAAQ,EAAE;gBACV,QAAQ,CAAC,IAAI,EAAE,CAAC;aACnB;QACL,CAAC,CAAC;QAEiB,oBAAe,GAAG,aAAa,CAAC,qBAAqB,CAAC;QAwBzE;;WAEG;QACO,gBAAW,GAAG,CAAC,KAAuB,EAAE,EAAE;YAChD,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,EAAE;gBACpC,wDAAwD;gBACxD,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,IAAI,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,yBAAyB,CAAC,KAAK,aAAa,CAAC;gBACvH,IAAI,QAAQ,EAAE;oBACV,IAAI,CAAC,IAAI,EAAE,CAAC;iBACf;aACJ;QACL,CAAC,CAAC;QAEF;;WAEG;QACO,sBAAiB,GAAG,GAAG,EAAE;YAC/B,wDAAwD;YACxD,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,IAAI,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,yBAAyB,CAAC,KAAK,aAAa,CAAC;YACvH,wFAAwF;YACxF,IAAI,QAAQ,EAAE;gBACV,IAAI,CAAC,IAAI,EAAE,CAAC;aACf;QACL,CAAC,CAAC;IACN,CAAC;IArGG,MAAM;QACF,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC7B,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,WAAW,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACxI,MAAM,WAAW,GAAG,IAAI,aAAG,CAAC,SAAS,CAAC,CAAC;QAEvC,MAAM,IAAI,GAAG,aAAa,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAChD,MAAM,KAAK,GAAG,UAAU,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,MAAM,CAAC,iBAAiB,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;QAC7G,MAAM,MAAM,GAAG,UAAU,IAAI,UAAU,CAAC,MAAM,IAAI,EAAE,CAAC;QACrD,MAAM,OAAO,GAAG,UAAU,IAAI,UAAU,CAAC,OAAO,IAAI,EAAE,CAAC;QACvD,MAAM,YAAY,GAAG,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC7D,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACpG,MAAM,KAAK,GAAG,OAAO,CAAC,MAAM,KAAK,CAAC;YAC9B,CAAC,CAAC,GAAG,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,OAAO,EAAE;YAC/C,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAElC,OAAO,6BAAK,GAAG,EAAE,SAAS,EACtB,SAAS,EAAE,WAAW,8BAAuB,IAAI,mCAA4B,EAAE,EAC/E,aAAa,EAAE,IAAI,CAAC,iBAAiB,EACrC,YAAY,EAAE,IAAI,CAAC,SAAS,EAC5B,YAAY,EAAE,IAAI,CAAC,SAAS,EAC5B,GAAG,EAAE,IAAI,CAAC,WAAW,EACrB,KAAK,EAAE,KAAK,EACZ,OAAO,EAAE,IAAI,CAAC,WAAW,EACzB,aAAa,EAAE,IAAI,CAAC,iBAAiB;YACrC,8BAAM,SAAS,EAAE,IAAI,GAAG,YAAY,GAAI;YACvC,IAAI,CAAC,KAAK,CAAC,qBAAqB,EAAE;YACnC,6BAAK,SAAS,EAAE,cAAc,mCAA4B,EAAE;gBACxD,8BAAM,SAAS,EAAC,MAAM,IAAE,OAAO,CAAQ;gBACvC,8BAAM,SAAS,EAAC,MAAM,IAAE,IAAI,CAAQ,CAClC;YACN,oBAAC,gBAAgB,oBAAK;gBAClB,KAAK;gBACL,IAAI,EAAE,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,oBAAoB,CAAC;gBACvD,IAAI,EAAE,IAAI,CAAC,eAAe;gBAC1B,QAAQ;gBACR,WAAW;gBACX,KAAK;gBACL,QAAQ;aACX;gBACG,6BAAK,KAAK,EAAE,OAAO,EAAE,SAAS,EAAC,QAAQ,EAAC,KAAK,EAAE,EAAE,KAAK,EAAE,IACnD,MAAM,CACL,CACS,CAChB,CAAC;IACZ,CAAC;IAUD,IAAc,eAAe;QACzB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,kCAAiB,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;YACrH,wFAAwF;YACxF,OAAO,IAAI,CAAC,cAAc,CAAC;SAC9B;aAAM;YACH,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;SAC5E;IACL,CAAC;IACD,IAAc,cAAc;QACxB,MAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACnF,IAAI,gBAAgB,EAAE;YAClB,OAAO,CAAC,gBAAgB,CAAC,CAAC;SAC7B;aAAM;YACH,uEAAuE;YACvE,OAAO,EAAE,CAAC;SACb;IACL,CAAC;IAES,qBAAqB,CAAC,KAAoC;QAChE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC;QAC7C,OAAO,CAAC,UAAK,IAAI,OAAO,CAAC,IAAI,OAAO,IAAI,QAAQ,CAAC;IACrD,CAAC;CA0BJ;AAvGD,oDAuGC;AAWD,MAAa,uBAAwB,SAAQ,UAA2C;IAAxF;;QAiCuB,oBAAe,GAAG,aAAa,CAAC,2BAA2B,CAAC;IAUnF,CAAC;IAzCG,MAAM;QACF,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC7B,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC9E,OAAO,6BAAK,SAAS,EAAE,iCAAiC,mCAA4B,EAAE,EAClF,aAAa,EAAE,IAAI,CAAC,iBAAiB,EACrC,YAAY,EAAE,IAAI,CAAC,SAAS,EAC5B,YAAY,EAAE,IAAI,CAAC,SAAS,EAC5B,GAAG,EAAE,IAAI,CAAC,WAAW;YACpB,IAAI,CAAC,KAAK,CAAC,qBAAqB,EAAE;YACnC,6BAAK,SAAS,EAAE,cAAc,mCAA4B,EAAE,IAAG,OAAO,CAAO;YAC7E,oBAAC,gBAAgB,oBAAK;gBAClB,KAAK;gBACL,IAAI,EAAE,IAAI,CAAC,eAAe;gBAC1B,IAAI,EAAE,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,0BAA0B,CAAC;gBAC7D,QAAQ;gBACR,WAAW;gBACX,KAAK;gBACL,QAAQ;aACX,GACI,IAAI,CAAC,iBAAiB,EAAE,CACV,CACjB,CAAC;IACX,CAAC;IAES,iBAAiB;QACvB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,wBAAwB,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC7E,OAAO,6BAAK,SAAS,EAAC,+CAA+C;YACjE,8BAAM,SAAS,EAAC,oBAAoB,IAAE,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAQ,CAC9E,CAAC;IACX,CAAC;IAGD,IAAc,eAAe;QACzB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,wBAAwB,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC7E,IAAI,KAAK,EAAE;YACP,OAAO,CAAC,KAAK,CAAC,CAAC;SAClB;aAAM;YACH,uEAAuE;YACvE,OAAO,EAAE,CAAC;SACb;IACL,CAAC;CACJ;AA3CD,0DA2CC;AAOD,MAAa,wBAAyB,SAAQ,UAA0C;IAAxF;;QAoCuB,oBAAe,GAAG,aAAa,CAAC,4BAA4B,CAAC;IAapF,CAAC;IA/CG,MAAM;QACF,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC7B,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,WAAW,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACxG,MAAM,cAAc,GAAa,EAAE,GAAG,EAAE,SAAS,EAAE,WAAW,EAAE,IAAI,EAAE,gBAAgB,EAAE,CAAC,EAAE,CAAC;QAC5F,MAAM,IAAI,GAAG,aAAa,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QACnD,MAAM,KAAK,GAAG,IAAI,aAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAEjD,OAAO,6BAAK,GAAG,EAAE,SAAS,EACtB,SAAS,EAAE,YAAY,8BAAuB,IAAI,mCAA4B,IAAI,aAAa,CAAC,MAAM,CAAC,SAAS,EAAE,EAClH,KAAK,EAAE,KAAK,EACZ,aAAa,EAAE,IAAI,CAAC,iBAAiB,EACrC,YAAY,EAAE,IAAI,CAAC,SAAS,EAC5B,YAAY,EAAE,IAAI,CAAC,SAAS,EAC5B,GAAG,EAAE,IAAI,CAAC,WAAW;YAEpB,IAAI,CAAC,KAAK,CAAC,qBAAqB,EAAE;YACnC,8BAAM,SAAS,EAAE,IAAI,GAAG,YAAY,GAAI;YACxC,6BAAK,SAAS,EAAE,cAAc,mCAA4B,EAAE;gBACxD,8BAAM,SAAS,EAAC,MAAM,IAAE,OAAO,CAAQ,CACrC;YACN,oBAAC,gBAAgB,oBAAK;gBAClB,KAAK;gBACL,IAAI,EAAE,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,2BAA2B,CAAC;gBAC9D,IAAI,EAAE,IAAI,CAAC,eAAe;gBAC1B,QAAQ;gBACR,WAAW;gBACX,KAAK;gBACL,QAAQ;aACX,EACkB,CAChB,CAAC;IAEZ,CAAC;IAGD,IAAc,eAAe;QACzB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,wCAAuB,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;YAC3H,wFAAwF;YACxF,OAAO,IAAI,CAAC,cAAc,CAAC;SAC9B;aAAM;YACH,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;SAC5E;IACL,CAAC;IACD,IAAc,cAAc;QACxB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,0BAA0B,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAC5E,CAAC;CAEJ;AAjDD,4DAiDC;AASD,MAAa,gBAAiB,SAAQ,KAAK,CAAC,SAAiC;IACzE,MAAM;QACF,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC3F,OAAO,6BAAK,SAAS,EAAC,oCAAoC;YACtD,6BAAK,SAAS,EAAC,0BAA0B,IACpC,KAAK,IAAI,IAAI,CAAC,QAAQ;iBAClB,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC,IAAI,YAAY,qBAAc,IAAI,oBAAC,eAAe,kBAAC,GAAG,EAAE,KAAK,IAAM,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE,EAAI,CAAC,CACtJ;YACL,QAAQ,CACP,CAAC;IACX,CAAC;CACJ;AAXD,4CAWC;AAcD,MAAa,eAAgB,SAAQ,KAAK,CAAC,SAAgC;IAA3E;;QAiBc,YAAO,GAAG,CAAC,KAAuB,EAAE,EAAE;YAC5C,KAAK,CAAC,eAAe,EAAE,CAAC;YAExB,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;YAC5C,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;QAC5D,CAAC,CAAC;IACN,CAAC;IAtBG,MAAM;QACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAE1E,IAAI,QAAQ,GAAY,KAAK,CAAC;QAC9B,KAAK,CAAC,iBAAiB,CAAC,QAAQ,EAAE,GAAG,EAAE;YACnC,QAAQ,GAAG,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClE,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,6BAAK,SAAS,EAAC,yBAAyB;YAC3C,2BAAG,SAAS,EAAE,GAAG,IAAI,CAAC,IAAI,IAAI,qBAAW,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,GAAI,CACvF,CAAC;IACX,CAAC;CAQJ;AAvBD,0CAuBC;;;;;;;;;;;;;AClxBD;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;AAKlF,qIAAiF;AACjF,0IAAyE;AACzE,yHAEiC;AACjC,0IAAsD;AACtD,uIAAoD;AACpD,+JAAmE;AACnE,wHAA2C;AAC3C,oIAAkD;AAClD,oIAAmD;AACnD,qHAAiD;AAGjD,IAAa,SAAS,iBAAtB,MAAa,SAAU,SAAQ,oBAAU;IAoBrC;QACI,KAAK,EAAE,CAAC;QA+CO,uBAAkB,GAAG,IAAI,iCAAoB,EAAE,CAAC;QA9C/D,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,EAAE,GAAG,WAAS,CAAC,EAAE,CAAC;QACvB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC3B,IAAI,CAAC,QAAQ,CAAC,0BAA0B,CAAC,CAAC;IAC9C,CAAC;IAbD,IAAI,QAAQ,CAAC,IAAqB;QAC9B,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,IAAI,CAAC;IACxC,CAAC;IACD,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;IACxC,CAAC;IAWS,IAAI;QACV,MAAM,MAAM,GAAG,IAAI,qBAAW,EAAE,CAAC;QACjC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,IAAI,eAAK,CAAC;YACnB,MAAM,EAAE,IAAI,qBAAW,CAAC,EACvB,CAAC;SACL,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;QAC9B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;QACzD,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE7B,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAClD,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACpD,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACjD,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAExD,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,6BAA6B,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QACzF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC;QACpE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE;YAC5D,IAAI,CAAC,CAAC,cAAc,KAAK,qBAAqB,EAAE;gBAC5C,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;aACnC;QACL,CAAC,CAAC,CAAC,CAAC;IAER,CAAC;IAED,IAAI,eAAe;QACf,OAAO,IAAI,CAAC,KAAK,CAAC,MAAqB,CAAC;IAC5C,CAAC;IAED;;;OAGG;IACO,cAAc,CAAC,UAA2B;QAChD,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;IAC/B,CAAC;IAGS,OAAO;QACb,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;QAClC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC7C,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC;QACtD,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,SAAG,CAAC,QAAQ,CAAC,6BAA6B,EAAE,qBAAqB,CAAC,CAAC;QAC/H,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QACtC,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,UAAU,EAAE;YACZ,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAC1E,+CAA+C;YAC/C,+IAA+I;YAC/I,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;YAC3F,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;YAEnF,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;YACzB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;YAC3B,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YACxB,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;SAClC;aAAM;YACH,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;YACzB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;YAC3B,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YACxB,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;SAClC;IACL,CAAC;IAES,iBAAiB;QACvB,IAAI,CAAC,eAAe,CAAC,gBAAM,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IACnD,CAAC;IAES,eAAe,CAAC,GAAY;QAClC,qBAAW,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;QAChD,qBAAW,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;QAClD,qBAAW,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;QAC/C,qBAAW,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAAC;QACtD,KAAK,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;IAES,aAAa,CAAC,GAAY;QAChC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC9C,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAChD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAEpD,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAES,iBAAiB,CAAC,GAAY;QACpC,KAAK,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;SAC7B;aAAM;YACH,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;SACrB;IACL,CAAC;IAES,UAAU;QAChB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;IAC9B,CAAC;IAED,UAAU;QACN,MAAM,KAAK,GAAW;YAClB,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE;YAC3C,gBAAgB,EAAE,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE;SACrD,CAAC;QACF,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,YAAY,CAAC,QAAa;QACtB,MAAM,EAAE,WAAW,EAAE,gBAAgB,EAAE,GAAG,QAAQ,CAAC;QACnD,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;QAC5C,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;IACvD,CAAC;IAED,eAAe;QACX,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC;QACtC,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACxB,IAAI,2BAAiB,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;YAC5B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;gBACtB,IAAI,2BAAiB,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE;oBAC7B,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;wBAC5B,IAAI,2BAAiB,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE;4BAClC,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;yBACjC;wBACD,IAAI,4BAAkB,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;4BAC3C,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;yBAChC;oBACL,CAAC,CAAC,CAAC;iBACN;YACL,CAAC,CAAC,CAAC;SACN;IACL,CAAC;CACJ;AA/JU,YAAE,GAAG,UAAU,CAAC;AAEH;IAAnB,kBAAM,CAAC,wBAAU,CAAC;8BAAgC,wBAAU;6CAAC;AACrC;IAAxB,kBAAM,CAAC,mCAAe,CAAC;8BAAkC,mCAAe;+CAAC;AACnD;IAAtB,kBAAM,CAAC,+BAAa,CAAC;8BAA0B,+BAAa;iDAAC;AACtC;IAAvB,kBAAM,CAAC,iCAAc,CAAC;8BAAiC,iCAAc;8CAAC;AACxC;IAA9B,kBAAM,CAAC,gDAAqB,CAAC;8BAA8B,gDAAqB;qDAAC;AAC1D;IAAvB,kBAAM,CAAC,gCAAc,CAAC;;iDAAmD;AAkB1E;IADC,yBAAa,EAAE;;;;qCA0Bf;AAtDQ,SAAS;IADrB,sBAAU,EAAE;;GACA,SAAS,CAmKrB;AAnKY,8BAAS;;;;;;;;;;;ACjCtB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,IAA0C;AAC/C,EAAE,iCAAO,CAAC,MAAQ,EAAE,OAAS,CAAC,oCAAE,OAAO;AAAA;AAAA;AAAA,kGAAC;AACxC,GAAG,KAAK,YAQN;AACF,CAAC;AACD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA,2BAA2B,eAAe;AAC1C;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gFAAgF;;AAEhF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;;;AC/RD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;;;;;;;;;;AC1BA;AACA,oBAAoB,mBAAO,CAAC,qFAAgB;;AAE5C;AACA;AACA,WAAW,aAAa;AACxB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;AChGa;AACb;AACA;AACA,WAAW,gBAAgB,sCAAsC,kBAAkB;AACnF,0BAA0B;AAC1B;AACA;AACA,wBAAwB;AACxB;AACA;AACA,CAAC;AACD;AACA,6CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,cAAc;AAC3E;AACA;AACA;AACA,kBAAkB;AAClB,YAAY,mBAAO,CAAC,6CAAO;AAC3B,gBAAgB,mBAAO,CAAC,uDAAY;AACpC,eAAe,mBAAO,CAAC,2DAAU;AACjC,qBAAqB,mBAAO,CAAC,mEAAa;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,oDAAoD;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,WAAW,uDAAuD,WAAW,sBAAsB;AAC9J;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,wBAAwB;AACxB,iEAAiE,WAAW,eAAe;AAC3F,CAAC;;;;;;;;;;;;AC7HY;AACb,kBAAkB;AAClB,yBAAyB,mBAAO,CAAC,2FAAoB;AACrD,kBAAkB;;;;;;;;;;;;;;;;;;;ACHsE;AACxF,YAAoG;;AAEpG;;AAEA;AACA;;AAEA,aAAa,6FAAG,CAAC,uFAAO;;;;AAIxB,iEAAe,8FAAc,MAAM","sources":["webpack:///../node_modules/@theia/scm/src/browser/style/scm-amend-component.css?../node_modules/css-loader/dist/cjs.js","webpack:///../node_modules/@theia/navigator/src/browser/index.ts?","webpack:///../node_modules/@theia/navigator/src/browser/navigator-decorator-service.ts?","webpack:///../node_modules/@theia/scm/src/browser/scm-amend-component.tsx?","webpack:///../node_modules/@theia/scm/src/browser/scm-amend-widget.tsx?","webpack:///../node_modules/@theia/scm/src/browser/scm-commit-widget.tsx?","webpack:///../node_modules/@theia/scm/src/browser/scm-no-repository-widget.tsx?","webpack:///../node_modules/@theia/scm/src/browser/scm-preferences.ts?","webpack:///../node_modules/@theia/scm/src/browser/scm-tree-model.ts?","webpack:///../node_modules/@theia/scm/src/browser/scm-tree-widget.tsx?","webpack:///../node_modules/@theia/scm/src/browser/scm-widget.tsx?","webpack:///../node_modules/autosize/dist/autosize.js?","webpack:///../node_modules/computed-style/dist/computedStyle.commonjs.js?","webpack:///../node_modules/line-height/lib/line-height.js?","webpack:///../node_modules/react-autosize-textarea/lib/TextareaAutosize.js?","webpack:///../node_modules/react-autosize-textarea/lib/index.js?","webpack:///../node_modules/@theia/scm/src/browser/style/scm-amend-component.css?"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2018 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-scm-commit-container {\\n    display: flex;\\n    flex-direction: column;\\n    border-top: 1px solid var(--theia-sideBarSectionHeader-border);\\n    width: 100%;\\n    padding-top: 6px;\\n}\\n\\n.theia-scm-amend-outer-container {\\n    display: flex;\\n    flex-direction: column;\\n    width: 100%;\\n    overflow: auto;\\n}\\n\\n.theia-scm-commit-and-button {\\n    display: flex;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    width: 100%;\\n}\\n\\n.theia-scm-commit-avatar-and-text {\\n    display: flex;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    width: 100%;\\n    padding-top: 2px;\\n}\\n\\n.theia-scm-commit-avatar-and-text img {\\n    width: 27px;\\n}\\n\\n.theia-scm-commit-details {\\n    display: flex;\\n    flex-direction: column;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    width: 100%;\\n}\\n\\n.theia-scm-commit-message-avatar {\\n    margin-right: 5px;\\n}\\n\\n.theia-scm-commit-message-summary {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n}\\n\\n.theia-scm-commit-message-time {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    color: var(--theia-descriptionForeground);\\n    font-size: smaller;\\n}\\n\\n.theia-scm-flex-container-center {\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.theia-scm-scrolling-container {\\n    position: relative;\\n    width: 100%;\\n    overflow: hidden;\\n\\n    margin-top: 0;\\n    margin-bottom: 0;\\n    padding-top: 0;\\n    padding-bottom: 0;\\n    border-top: 0;\\n    border-bottom: 0;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./../node_modules/@theia/scm/src/browser/style/scm-amend-component.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;IACI,aAAa;IACb,sBAAsB;IACtB,8DAA8D;IAC9D,WAAW;IACX,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,WAAW;IACX,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,gBAAgB;IAChB,WAAW;AACf;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,gBAAgB;IAChB,WAAW;IACX,gBAAgB;AACpB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,gBAAgB;IAChB,uBAAuB;IACvB,WAAW;AACf;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,mBAAmB;IACnB,gBAAgB;IAChB,uBAAuB;AAC3B;;AAEA;IACI,mBAAmB;IACnB,gBAAgB;IAChB,uBAAuB;IACvB,yCAAyC;IACzC,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,gBAAgB;;IAEhB,aAAa;IACb,gBAAgB;IAChB,cAAc;IACd,iBAAiB;IACjB,aAAa;IACb,gBAAgB;AACpB\",\"sourcesContent\":[\"/********************************************************************************\\n * Copyright (C) 2018 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-scm-commit-container {\\n    display: flex;\\n    flex-direction: column;\\n    border-top: 1px solid var(--theia-sideBarSectionHeader-border);\\n    width: 100%;\\n    padding-top: 6px;\\n}\\n\\n.theia-scm-amend-outer-container {\\n    display: flex;\\n    flex-direction: column;\\n    width: 100%;\\n    overflow: auto;\\n}\\n\\n.theia-scm-commit-and-button {\\n    display: flex;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    width: 100%;\\n}\\n\\n.theia-scm-commit-avatar-and-text {\\n    display: flex;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    width: 100%;\\n    padding-top: 2px;\\n}\\n\\n.theia-scm-commit-avatar-and-text img {\\n    width: 27px;\\n}\\n\\n.theia-scm-commit-details {\\n    display: flex;\\n    flex-direction: column;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    width: 100%;\\n}\\n\\n.theia-scm-commit-message-avatar {\\n    margin-right: 5px;\\n}\\n\\n.theia-scm-commit-message-summary {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n}\\n\\n.theia-scm-commit-message-time {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    color: var(--theia-descriptionForeground);\\n    font-size: smaller;\\n}\\n\\n.theia-scm-flex-container-center {\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.theia-scm-scrolling-container {\\n    position: relative;\\n    width: 100%;\\n    overflow: hidden;\\n\\n    margin-top: 0;\\n    margin-bottom: 0;\\n    padding-top: 0;\\n    padding-bottom: 0;\\n    border-top: 0;\\n    border-bottom: 0;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './navigator-model';\nexport * from './navigator-widget';\nexport * from './navigator-widget-factory';\nexport * from './navigator-decorator-service';\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, named } from '@theia/core/shared/inversify';\nimport { ContributionProvider } from '@theia/core/lib/common/contribution-provider';\nimport { TreeDecorator, AbstractTreeDecoratorService } from '@theia/core/lib/browser/tree/tree-decorator';\n\n/**\n * Symbol for all decorators that would like to contribute into the navigator.\n */\nexport const NavigatorTreeDecorator = Symbol('NavigatorTreeDecorator');\n\n/**\n * Decorator service for the navigator.\n */\n@injectable()\nexport class NavigatorDecoratorService extends AbstractTreeDecoratorService {\n\n    constructor(@inject(ContributionProvider) @named(NavigatorTreeDecorator) protected readonly contributions: ContributionProvider<TreeDecorator>) {\n        super(contributions.getContributions());\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2019 Arm and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport '../../src/browser/style/scm-amend-component.css';\n\nimport * as React from '@theia/core/shared/react';\nimport { ScmAvatarService } from './scm-avatar-service';\nimport { codicon, StorageService } from '@theia/core/lib/browser';\nimport { Disposable, DisposableCollection } from '@theia/core';\n\nimport { ScmRepository } from './scm-repository';\nimport { ScmAmendSupport, ScmCommit } from './scm-provider';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport interface ScmAmendComponentProps {\n    style: React.CSSProperties | undefined,\n    repository: ScmRepository,\n    scmAmendSupport: ScmAmendSupport,\n    setCommitMessage: (message: string) => void,\n    avatarService: ScmAvatarService,\n    storageService: StorageService,\n}\n\ninterface ScmAmendComponentState {\n    /**\n     * This is used for transitioning.  When setting up a transition, we first set to render\n     * the elements in their starting positions.  This includes creating the elements to be\n     * transitioned in, even though those controls will not be visible when state is 'start'.\n     * On the next frame after 'start', we render elements with their final positions and with\n     * the transition properties.\n     */\n    transition: {\n        state: 'none'\n    } | {\n        state: 'start' | 'transitioning',\n        direction: 'up' | 'down',\n        previousLastCommit: { commit: ScmCommit, avatar: string }\n    };\n\n    amendingCommits: { commit: ScmCommit, avatar: string }[];\n    lastCommit: { commit: ScmCommit, avatar: string } | undefined;\n}\n\nconst TRANSITION_TIME_MS = 300;\nconst REPOSITORY_STORAGE_KEY = 'scmRepository';\n\nexport class ScmAmendComponent extends React.Component<ScmAmendComponentProps, ScmAmendComponentState> {\n\n    /**\n     * a hint on how to animate an update, set by certain user action handlers\n     * and used when updating the view based on a repository change\n     */\n    protected transitionHint: 'none' | 'amend' | 'unamend' = 'none';\n\n    protected lastCommitHeight: number = 0;\n    lastCommitScrollRef = (instance: HTMLDivElement) => {\n        if (instance && this.lastCommitHeight === 0) {\n            this.lastCommitHeight = instance.getBoundingClientRect().height;\n        }\n    };\n\n    constructor(props: ScmAmendComponentProps) {\n        super(props);\n\n        this.state = {\n            transition: { state: 'none' },\n            amendingCommits: [],\n            lastCommit: undefined\n        };\n\n        const setState = this.setState.bind(this);\n        this.setState = newState => {\n            if (!this.toDisposeOnUnmount.disposed) {\n                setState(newState);\n            }\n        };\n    }\n\n    protected readonly toDisposeOnUnmount = new DisposableCollection();\n\n    async componentDidMount(): Promise<void> {\n        this.toDisposeOnUnmount.push(Disposable.create(() => { /* mark as mounted */ }));\n\n        const lastCommit = await this.getLastCommit();\n        this.setState({ amendingCommits: await this.buildAmendingList(lastCommit ? lastCommit.commit : undefined), lastCommit });\n\n        if (this.toDisposeOnUnmount.disposed) {\n            return;\n        }\n        this.toDisposeOnUnmount.push(\n            this.props.repository.provider.onDidChange(() => this.fetchStatusAndSetState())\n        );\n    }\n\n    componentWillUnmount(): void {\n        this.toDisposeOnUnmount.dispose();\n    }\n\n    async fetchStatusAndSetState(): Promise<void> {\n        const storageKey = this.getStorageKey();\n\n        const nextCommit = await this.getLastCommit();\n        if (nextCommit && this.state.lastCommit && nextCommit.commit.id === this.state.lastCommit.commit.id) {\n            // No change here\n        } else if (nextCommit === undefined && this.state.lastCommit === undefined) {\n            // No change here\n        } else if (this.transitionHint === 'none') {\n            // If the 'last' commit changes, but we are not expecting an 'amend'\n            // or 'unamend' to occur, then we clear out the list of amended commits.\n            // This is because an unexpected change has happened to the repository,\n            // perhaps the user committed, merged, or something.  The amended commits\n            // will no longer be valid.\n\n            // Note that there may or may not have been a previous lastCommit (if the\n            // repository was previously empty with no initial commit then lastCommit\n            // will be undefined).  Either way we clear the amending commits.\n            await this.clearAmendingCommits();\n\n            // There is a change to the last commit, but no transition hint so\n            // the view just updates without transition.\n            this.setState({ amendingCommits: [], lastCommit: nextCommit });\n        } else {\n            const amendingCommits = this.state.amendingCommits.concat([]); // copy the array\n\n            const direction: 'up' | 'down' = this.transitionHint === 'amend' ? 'up' : 'down';\n            switch (this.transitionHint) {\n                case 'amend':\n                    if (this.state.lastCommit) {\n                        amendingCommits.push(this.state.lastCommit);\n\n                        const serializedState = JSON.stringify({\n                            amendingHeadCommitSha: amendingCommits[0].commit.id,\n                            latestCommitSha: nextCommit ? nextCommit.commit.id : undefined\n                        });\n                        this.props.storageService.setData<string | undefined>(storageKey, serializedState);\n                    }\n                    break;\n                case 'unamend':\n                    amendingCommits.pop();\n                    if (amendingCommits.length === 0) {\n                        this.props.storageService.setData<string | undefined>(storageKey, undefined);\n                    } else {\n                        const serializedState = JSON.stringify({\n                            amendingHeadCommitSha: amendingCommits[0].commit.id,\n                            latestCommitSha: nextCommit ? nextCommit.commit.id : undefined\n                        });\n                        this.props.storageService.setData<string | undefined>(storageKey, serializedState);\n                    }\n                    break;\n            }\n\n            if (this.state.lastCommit && nextCommit) {\n                const transitionData = { direction, previousLastCommit: this.state.lastCommit };\n                this.setState({ lastCommit: nextCommit, amendingCommits, transition: { ...transitionData, state: 'start' } });\n                this.onNextFrame(() => {\n                    this.setState({ transition: { ...transitionData, state: 'transitioning' } });\n                });\n\n                setTimeout(\n                    () => {\n                        this.setState({ transition: { state: 'none' } });\n                    },\n                    TRANSITION_TIME_MS);\n            } else {\n                // No previous last commit so no transition\n                this.setState({ transition: { state: 'none' }, amendingCommits, lastCommit: nextCommit });\n            }\n        }\n\n        this.transitionHint = 'none';\n    }\n\n    private async clearAmendingCommits(): Promise<void> {\n        const storageKey = this.getStorageKey();\n        await this.props.storageService.setData<string | undefined>(storageKey, undefined);\n    }\n\n    private async buildAmendingList(lastCommit: ScmCommit | undefined): Promise<{ commit: ScmCommit, avatar: string }[]> {\n        const storageKey = this.getStorageKey();\n        const storedState = await this.props.storageService.getData<string | undefined>(storageKey, undefined);\n\n        // Restore list of commits from saved amending head commit up through parents until the\n        // current commit.  (If we don't reach the current commit, the repository has been changed in such\n        // a way then unamending commits can no longer be done).\n        if (storedState) {\n            const { amendingHeadCommitSha, latestCommitSha } = JSON.parse(storedState);\n            if (!this.commitsAreEqual(lastCommit, latestCommitSha)) {\n                // The head commit in the repository has changed.  It is not the same commit that was the\n                // head commit after the last 'amend'.\n                return [];\n            }\n            const commits = await this.props.scmAmendSupport.getInitialAmendingCommits(amendingHeadCommitSha, lastCommit ? lastCommit.id : undefined);\n\n            const amendingCommitPromises = commits.map(async commit => {\n                const avatar = await this.props.avatarService.getAvatar(commit.authorEmail);\n                return { commit, avatar };\n            });\n            return Promise.all(amendingCommitPromises);\n        } else {\n            return [];\n        }\n    }\n\n    private getStorageKey(): string {\n        return REPOSITORY_STORAGE_KEY + ':' + this.props.repository.provider.rootUri;\n    }\n\n    /**\n     * Commits are equal if the ids are equal or if both are undefined.\n     * (If a commit is undefined, it represents the initial empty state of a repository,\n     * before the initial commit).\n     */\n    private commitsAreEqual(lastCommit: ScmCommit | undefined, savedLastCommitId: string | undefined): boolean {\n        return lastCommit\n            ? lastCommit.id === savedLastCommitId\n            : savedLastCommitId === undefined;\n    }\n\n    /**\n     * This function will update the 'model' (lastCommit, amendingCommits) only\n     * when the repository sees the last commit change.\n     * 'render' can be called at any time, so be sure we don't update any 'model'\n     * fields until we actually start the transition.\n     */\n    protected amend = async (): Promise<void> => {\n        if (this.state.transition.state !== 'none' && this.transitionHint !== 'none') {\n            return;\n        }\n\n        this.transitionHint = 'amend';\n        await this.resetAndSetMessage('HEAD~', 'HEAD');\n    };\n\n    protected unamend = async (): Promise<void> => {\n        if (this.state.transition.state !== 'none' && this.transitionHint !== 'none') {\n            return;\n        }\n\n        const commitToRestore = (this.state.amendingCommits.length >= 1)\n            ? this.state.amendingCommits[this.state.amendingCommits.length - 1]\n            : undefined;\n        const oldestAmendCommit = (this.state.amendingCommits.length >= 2)\n            ? this.state.amendingCommits[this.state.amendingCommits.length - 2]\n            : undefined;\n\n        if (commitToRestore) {\n            const commitToUseForMessage = oldestAmendCommit\n                ? oldestAmendCommit.commit.id\n                : undefined;\n            this.transitionHint = 'unamend';\n            await this.resetAndSetMessage(commitToRestore.commit.id, commitToUseForMessage);\n        }\n    };\n\n    private async resetAndSetMessage(commitToRestore: string, commitToUseForMessage: string | undefined): Promise<void> {\n        const message = commitToUseForMessage\n            ? await this.props.scmAmendSupport.getMessage(commitToUseForMessage)\n            : '';\n        await this.props.scmAmendSupport.reset(commitToRestore);\n        this.props.setCommitMessage(message);\n    }\n\n    render(): JSX.Element {\n        const neverShrink = this.state.amendingCommits.length <= 3;\n\n        const style: React.CSSProperties = neverShrink\n            ? {\n                ...this.props.style,\n                flexShrink: 0,\n            }\n            : {\n                ...this.props.style,\n                flexShrink: 1,\n                minHeight: 240   // height with three commits\n            };\n\n        return (\n            <div className={ScmAmendComponent.Styles.COMMIT_CONTAINER + ' no-select'} style={style}>\n                {\n                    this.state.amendingCommits.length > 0 || (this.state.lastCommit && this.state.transition.state !== 'none' && this.state.transition.direction === 'down')\n                        ? this.renderAmendingCommits()\n                        : ''\n                }\n                {\n                    this.state.lastCommit ?\n                        <div>\n                            <div id='lastCommit' className='theia-scm-amend'>\n                                <div className='theia-header scm-theia-header'>\n                                    {nls.localize('theia/scm/amendHeadCommit', 'HEAD Commit')}\n                                </div>\n                                {this.renderLastCommit()}\n                            </div>\n                        </div>\n                        : ''\n                }\n            </div>\n        );\n    }\n\n    protected async getLastCommit(): Promise<{ commit: ScmCommit, avatar: string } | undefined> {\n        const commit = await this.props.scmAmendSupport.getLastCommit();\n        if (commit) {\n            const avatar = await this.props.avatarService.getAvatar(commit.authorEmail);\n            return { commit, avatar };\n        }\n        return undefined;\n    }\n\n    protected renderAmendingCommits(): React.ReactNode {\n        const neverShrink = this.state.amendingCommits.length <= 3;\n\n        const style: React.CSSProperties = neverShrink\n            ? {\n                flexShrink: 0,\n            }\n            : {\n                flexShrink: 1,\n                // parent minHeight controls height, we just need any value smaller than\n                // what the height would be when the parent is at its minHeight\n                minHeight: 0\n            };\n\n        return <div id='amendedCommits' className='theia-scm-amend-outer-container' style={style}>\n            <div className='theia-header scm-theia-header'>\n                <div className='noWrapInfo'>Commits being Amended</div>\n                {this.renderAmendCommitListButtons()}\n                {this.renderCommitCount(this.state.amendingCommits.length)}\n            </div>\n            <div style={this.styleAmendedCommits()}>\n                {this.state.amendingCommits.map((commitData, index, array) =>\n                    this.renderCommitBeingAmended(commitData, index === array.length - 1)\n                )}\n                {\n                    this.state.lastCommit && this.state.transition.state !== 'none' && this.state.transition.direction === 'down'\n                        ? this.renderCommitBeingAmended(this.state.lastCommit, false)\n                        : ''\n                }\n            </div>\n        </div>;\n    }\n\n    protected renderAmendCommitListButtons(): React.ReactNode {\n        return <div className='theia-scm-inline-actions-container'>\n            <div className='theia-scm-inline-actions'>\n                <div className='theia-scm-inline-action'>\n                    <a className={codicon('dash')} title='Unamend All Commits' onClick={this.unamendAll} />\n                </div>\n                <div className='theia-scm-inline-action' >\n                    <a className={codicon('close')} title='Clear Amending Commits' onClick={this.clearAmending} />\n                </div>\n            </div>\n        </div>;\n    }\n\n    protected renderLastCommit(): React.ReactNode {\n        if (!this.state.lastCommit) {\n            return '';\n        }\n\n        const canAmend: boolean = true;\n        return <div className={ScmAmendComponent.Styles.COMMIT_AND_BUTTON} style={{ flexGrow: 0, flexShrink: 0 }} key={this.state.lastCommit.commit.id}>\n            {this.renderLastCommitNoButton(this.state.lastCommit)}\n            {\n                canAmend\n                    ? <div className={ScmAmendComponent.Styles.FLEX_CENTER}>\n                        <button className='theia-button' title={nls.localize('theia/scm/amendLastCommit', 'Amend last commit')} onClick={this.amend}>\n                            {nls.localize('theia/scm/amend', 'Amend')}\n                        </button>\n                    </div>\n                    : ''\n            }\n        </div>;\n    }\n\n    protected renderLastCommitNoButton(lastCommit: { commit: ScmCommit, avatar: string }): React.ReactNode {\n        switch (this.state.transition.state) {\n            case 'none':\n                return <div ref={this.lastCommitScrollRef} className='theia-scm-scrolling-container'>\n                    {this.renderCommitAvatarAndDetail(lastCommit)}\n                </div>;\n\n            case 'start':\n            case 'transitioning':\n                switch (this.state.transition.direction) {\n                    case 'up':\n                        return <div style={this.styleLastCommitMovingUp(this.state.transition.state)}>\n                            {this.renderCommitAvatarAndDetail(this.state.transition.previousLastCommit)}\n                            {this.renderCommitAvatarAndDetail(lastCommit)}\n                        </div>;\n                    case 'down':\n                        return <div style={this.styleLastCommitMovingDown(this.state.transition.state)}>\n                            {this.renderCommitAvatarAndDetail(lastCommit)}\n                            {this.renderCommitAvatarAndDetail(this.state.transition.previousLastCommit)}\n                        </div>;\n                }\n        }\n    }\n\n    /**\n     * See https://stackoverflow.com/questions/26556436/react-after-render-code\n     *\n     * @param callback\n     */\n    protected onNextFrame(callback: FrameRequestCallback): void {\n        setTimeout(\n            () => window.requestAnimationFrame(callback),\n            0);\n    }\n\n    protected renderCommitAvatarAndDetail(commitData: { commit: ScmCommit, avatar: string }): React.ReactNode {\n        const { commit, avatar } = commitData;\n        return <div className={ScmAmendComponent.Styles.COMMIT_AVATAR_AND_TEXT} key={commit.id}>\n            <div className={ScmAmendComponent.Styles.COMMIT_MESSAGE_AVATAR}>\n                <img src={avatar} />\n            </div>\n            <div className={ScmAmendComponent.Styles.COMMIT_DETAILS}>\n                <div className={ScmAmendComponent.Styles.COMMIT_MESSAGE_SUMMARY}>{commit.summary}</div>\n                <div className={ScmAmendComponent.Styles.LAST_COMMIT_MESSAGE_TIME}>{`${commit.authorDateRelative} by ${commit.authorName}`}</div>\n            </div>\n        </div>;\n    }\n\n    protected renderCommitCount(commits: number): React.ReactNode {\n        return <div className='notification-count-container scm-change-count'>\n            <span className='notification-count'>{commits}</span>\n        </div>;\n    }\n\n    protected renderCommitBeingAmended(commitData: { commit: ScmCommit, avatar: string }, isOldestAmendCommit: boolean): JSX.Element {\n        if (isOldestAmendCommit && this.state.transition.state !== 'none' && this.state.transition.direction === 'up') {\n            return <div className={ScmAmendComponent.Styles.COMMIT_AVATAR_AND_TEXT} style={{ flexGrow: 0, flexShrink: 0 }} key={commitData.commit.id}>\n                <div className='fixed-height-commit-container'>\n                    {this.renderCommitAvatarAndDetail(commitData)}\n                </div>\n            </div>;\n        } else {\n            return <div className={ScmAmendComponent.Styles.COMMIT_AVATAR_AND_TEXT} style={{ flexGrow: 0, flexShrink: 0 }} key={commitData.commit.id}>\n                {this.renderCommitAvatarAndDetail(commitData)}\n                {\n                    isOldestAmendCommit\n                        ? <div className={ScmAmendComponent.Styles.FLEX_CENTER}>\n                            <button className='theia-button' title={nls.localize('theia/scm/unamendCommit', 'Unamend commit')} onClick={this.unamend}>\n                                {nls.localize('theia/scm/unamend', 'Unamend')}\n                            </button>\n                        </div>\n                        : ''\n                }\n            </div>;\n        }\n    }\n\n    /*\n     * The style for the <div> containing the list of commits being amended.\n     * This div is scrollable.\n     */\n    protected styleAmendedCommits(): React.CSSProperties {\n        const base = {\n            display: 'flex',\n            whitespace: 'nowrap',\n            width: '100%',\n            minHeight: 0,\n            flexShrink: 1,\n            paddingTop: '2px',\n        };\n\n        switch (this.state.transition.state) {\n            case 'none':\n                return {\n                    ...base,\n                    flexDirection: 'column',\n                    overflowY: 'auto',\n                    marginBottom: '0',\n                };\n            case 'start':\n            case 'transitioning':\n                let startingMargin: number = 0;\n                let endingMargin: number = 0;\n                switch (this.state.transition.direction) {\n                    case 'down':\n                        startingMargin = 0;\n                        endingMargin = -32;\n                        break;\n                    case 'up':\n                        startingMargin = -32;\n                        endingMargin = 0;\n                        break;\n                }\n\n                switch (this.state.transition.state) {\n                    case 'start':\n                        return {\n                            ...base,\n                            flexDirection: 'column',\n                            overflowY: 'hidden',\n                            marginBottom: `${startingMargin}px`,\n                        };\n                    case 'transitioning':\n                        return {\n                            ...base,\n                            flexDirection: 'column',\n                            overflowY: 'hidden',\n                            marginBottom: `${endingMargin}px`,\n                            transitionProperty: 'margin-bottom',\n                            transitionDuration: `${TRANSITION_TIME_MS}ms`,\n                            transitionTimingFunction: 'linear'\n                        };\n                }\n        }\n    }\n\n    protected styleLastCommitMovingUp(transitionState: 'start' | 'transitioning'): React.CSSProperties {\n        return this.styleLastCommit(transitionState, 0, -28);\n    }\n\n    protected styleLastCommitMovingDown(transitionState: 'start' | 'transitioning'): React.CSSProperties {\n        return this.styleLastCommit(transitionState, -28, 0);\n    }\n\n    protected styleLastCommit(transitionState: 'start' | 'transitioning', startingMarginTop: number, startingMarginBottom: number): React.CSSProperties {\n        const base = {\n            display: 'flex',\n            width: '100%',\n            overflow: 'hidden',\n            paddingTop: 0,\n            paddingBottom: 0,\n            borderTop: 0,\n            borderBottom: 0,\n            height: this.lastCommitHeight * 2\n        };\n\n        // We end with top and bottom margins switched\n        const endingMarginTop = startingMarginBottom;\n        const endingMarginBottom = startingMarginTop;\n\n        switch (transitionState) {\n            case 'start':\n                return {\n                    ...base,\n                    position: 'relative',\n                    flexDirection: 'column',\n                    marginTop: startingMarginTop,\n                    marginBottom: startingMarginBottom,\n                };\n            case 'transitioning':\n                return {\n                    ...base,\n                    position: 'relative',\n                    flexDirection: 'column',\n                    marginTop: endingMarginTop,\n                    marginBottom: endingMarginBottom,\n                    transitionProperty: 'margin-top margin-bottom',\n                    transitionDuration: `${TRANSITION_TIME_MS}ms`,\n                    transitionTimingFunction: 'linear'\n                };\n        }\n    }\n\n    readonly unamendAll = () => this.doUnamendAll();\n    protected async doUnamendAll(): Promise<void> {\n        while (this.state.amendingCommits.length > 0) {\n            this.unamend();\n            await new Promise(resolve => setTimeout(resolve, TRANSITION_TIME_MS));\n        }\n    }\n\n    readonly clearAmending = () => this.doClearAmending();\n    protected async doClearAmending(): Promise<void> {\n        await this.clearAmendingCommits();\n        this.setState({ amendingCommits: [] });\n    }\n}\n\nexport namespace ScmAmendComponent {\n\n    export namespace Styles {\n        export const COMMIT_CONTAINER = 'theia-scm-commit-container';\n        export const COMMIT_AND_BUTTON = 'theia-scm-commit-and-button';\n        export const COMMIT_AVATAR_AND_TEXT = 'theia-scm-commit-avatar-and-text';\n        export const COMMIT_DETAILS = 'theia-scm-commit-details';\n        export const COMMIT_MESSAGE_AVATAR = 'theia-scm-commit-message-avatar';\n        export const COMMIT_MESSAGE_SUMMARY = 'theia-scm-commit-message-summary';\n        export const LAST_COMMIT_MESSAGE_TIME = 'theia-scm-commit-message-time';\n\n        export const FLEX_CENTER = 'theia-scm-flex-container-center';\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2020 Arm and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { SelectionService } from '@theia/core/lib/common';\nimport * as React from '@theia/core/shared/react';\nimport {\n    ContextMenuRenderer, ReactWidget, LabelProvider, KeybindingRegistry, StorageService\n} from '@theia/core/lib/browser';\nimport { ScmService } from './scm-service';\nimport { ScmAvatarService } from './scm-avatar-service';\nimport { ScmAmendComponent } from './scm-amend-component';\n\n@injectable()\nexport class ScmAmendWidget extends ReactWidget {\n\n    static ID = 'scm-amend-widget';\n\n    @inject(ScmService) protected readonly scmService: ScmService;\n    @inject(ScmAvatarService) protected readonly avatarService: ScmAvatarService;\n    @inject(StorageService) protected readonly storageService: StorageService;\n    @inject(SelectionService) protected readonly selectionService: SelectionService;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n    @inject(KeybindingRegistry) protected readonly keybindings: KeybindingRegistry;\n\n    protected shouldScrollToRow = true;\n\n    constructor(\n        @inject(ContextMenuRenderer) protected readonly contextMenuRenderer: ContextMenuRenderer,\n    ) {\n        super();\n        this.scrollOptions = {\n            suppressScrollX: true,\n            minScrollbarLength: 35\n        };\n        this.addClass('theia-scm-commit-container');\n        this.id = ScmAmendWidget.ID;\n    }\n\n    protected render(): React.ReactNode {\n        const repository = this.scmService.selectedRepository;\n        if (repository && repository.provider.amendSupport) {\n            return React.createElement(\n                ScmAmendComponent,\n                {\n                    key: `amend:${repository.provider.rootUri}`,\n                    style: { flexGrow: 0 },\n                    repository: repository,\n                    scmAmendSupport: repository.provider.amendSupport,\n                    setCommitMessage: this.setInputValue,\n                    avatarService: this.avatarService,\n                    storageService: this.storageService,\n                }\n            );\n        }\n    }\n\n    protected setInputValue = (event: React.FormEvent<HTMLTextAreaElement> | React.ChangeEvent<HTMLTextAreaElement> | string) => {\n        const repository = this.scmService.selectedRepository;\n        if (repository) {\n            repository.input.value = typeof event === 'string' ? event : event.currentTarget.value;\n        }\n    };\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { DisposableCollection } from '@theia/core';\nimport { Message } from '@theia/core/shared/@phosphor/messaging';\nimport * as React from '@theia/core/shared/react';\nimport TextareaAutosize from 'react-autosize-textarea';\nimport { ScmInput, ScmInputIssueType } from './scm-input';\nimport {\n    ContextMenuRenderer, ReactWidget, KeybindingRegistry, StatefulWidget\n} from '@theia/core/lib/browser';\nimport { ScmService } from './scm-service';\n\n@injectable()\nexport class ScmCommitWidget extends ReactWidget implements StatefulWidget {\n\n    static ID = 'scm-commit-widget';\n\n    @inject(ScmService) protected readonly scmService: ScmService;\n    @inject(KeybindingRegistry) protected readonly keybindings: KeybindingRegistry;\n\n    protected readonly toDisposeOnRepositoryChange = new DisposableCollection();\n\n    protected shouldScrollToRow = true;\n\n    /**\n     * Don't modify DOM use React! only exposed for `focusInput`\n     * Use `this.scmService.selectedRepository?.input.value` as a single source of truth!\n     */\n    protected readonly inputRef = React.createRef<HTMLTextAreaElement>();\n\n    constructor(\n        @inject(ContextMenuRenderer) protected readonly contextMenuRenderer: ContextMenuRenderer,\n    ) {\n        super();\n        this.scrollOptions = {\n            suppressScrollX: true,\n            minScrollbarLength: 35\n        };\n        this.addClass('theia-scm-commit');\n        this.id = ScmCommitWidget.ID;\n    }\n\n    protected onAfterAttach(msg: Message): void {\n        super.onAfterAttach(msg);\n        this.refreshOnRepositoryChange();\n        this.toDisposeOnDetach.push(this.scmService.onDidChangeSelectedRepository(() => {\n            this.refreshOnRepositoryChange();\n            this.update();\n        }));\n    }\n\n    protected refreshOnRepositoryChange(): void {\n        this.toDisposeOnRepositoryChange.dispose();\n        const repository = this.scmService.selectedRepository;\n        if (repository) {\n            this.toDisposeOnRepositoryChange.push(repository.provider.onDidChange(async () => {\n                this.update();\n            }));\n            this.toDisposeOnRepositoryChange.push(repository.provider.onDidChangeCommitTemplate(e => {\n                this.setInputValue(e);\n            }));\n        }\n    }\n\n    protected onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.focus();\n    }\n\n    public focus(): void {\n        (this.inputRef.current || this.node).focus();\n    }\n\n    protected render(): React.ReactNode {\n        const repository = this.scmService.selectedRepository;\n        if (repository) {\n            return React.createElement('div', this.createContainerAttributes(), this.renderInput(repository.input));\n        }\n    }\n\n    /**\n     * Create the container attributes for the widget.\n     */\n    protected createContainerAttributes(): React.HTMLAttributes<HTMLElement> {\n        return {\n            style: { flexGrow: 0 }\n        };\n    }\n\n    protected renderInput(input: ScmInput): React.ReactNode {\n        let validationStatus = 'idle';\n        if (input.issue) {\n            switch (input.issue.type) {\n                case ScmInputIssueType.Error:\n                    validationStatus = 'error';\n                    break;\n                case ScmInputIssueType.Information:\n                    validationStatus = 'info';\n                    break;\n                case ScmInputIssueType.Warning:\n                    validationStatus = 'warning';\n                    break;\n            }\n        }\n        const validationMessage = input.issue ? input.issue.message : '';\n        const format = (value: string, ...args: string[]): string => {\n            if (args.length !== 0) {\n                return value.replace(/{(\\d+)}/g, (found, n) => {\n                    const i = parseInt(n);\n                    return isNaN(i) || i < 0 || i >= args.length ? found : args[i];\n                });\n            }\n            return value;\n        };\n\n        const keybinding = this.keybindings.acceleratorFor(this.keybindings.getKeybindingsForCommand('scm.acceptInput')[0]).join('+');\n        const message = format(input.placeholder || '', keybinding);\n        return <div className={ScmCommitWidget.Styles.INPUT_MESSAGE_CONTAINER}>\n            <TextareaAutosize\n                className={`${ScmCommitWidget.Styles.INPUT_MESSAGE} theia-input theia-scm-input-message-${validationStatus}`}\n                id={ScmCommitWidget.Styles.INPUT_MESSAGE}\n                placeholder={message}\n                spellCheck={false}\n                autoFocus={true}\n                value={input.value}\n                onChange={this.setInputValue}\n                ref={this.inputRef}\n                rows={1}\n                maxRows={6} /* from VS Code */>\n            </TextareaAutosize>\n            <div\n                className={\n                    `${ScmCommitWidget.Styles.VALIDATION_MESSAGE} ${ScmCommitWidget.Styles.NO_SELECT}\n                    theia-scm-validation-message-${validationStatus} theia-scm-input-message-${validationStatus}`\n                }\n                style={{\n                    display: !!input.issue ? 'block' : 'none'\n                }}>{validationMessage}</div>\n        </div>;\n    }\n\n    protected setInputValue = (event: React.FormEvent<HTMLTextAreaElement> | React.ChangeEvent<HTMLTextAreaElement> | string) => {\n        const repository = this.scmService.selectedRepository;\n        if (repository) {\n            repository.input.value = typeof event === 'string' ? event : event.currentTarget.value;\n        }\n    };\n\n    /**\n     * Store the tree state.\n     */\n    storeState(): ScmCommitWidget.State {\n        const message = this.scmService.selectedRepository?.input.value;\n        return { message };\n    }\n\n    /**\n     * Restore the state.\n     * @param oldState the old state object.\n     */\n    restoreState(oldState: ScmCommitWidget.State): void {\n        const value = oldState.message;\n        if (!value) {\n            return;\n        }\n        let repository = this.scmService.selectedRepository;\n        if (repository) {\n            repository.input.value = value;\n        } else {\n            const listener = this.scmService.onDidChangeSelectedRepository(() => {\n                repository = this.scmService.selectedRepository;\n                if (repository) {\n                    listener.dispose();\n                    if (!repository.input.value) {\n                        repository.input.value = value;\n                    }\n                }\n            });\n            this.toDispose.push(listener);\n        }\n    }\n\n}\n\nexport namespace ScmCommitWidget {\n\n    export namespace Styles {\n        export const INPUT_MESSAGE_CONTAINER = 'theia-scm-input-message-container';\n        export const INPUT_MESSAGE = 'theia-scm-input-message';\n        export const VALIDATION_MESSAGE = 'theia-scm-input-validation-message';\n        export const NO_SELECT = 'no-select';\n    }\n\n    export interface State {\n        message?: string\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2020 Arm and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport * as React from '@theia/core/shared/react';\nimport { ReactWidget } from '@theia/core/lib/browser';\nimport { AlertMessage } from '@theia/core/lib/browser/widgets/alert-message';\nimport { nls } from '@theia/core/lib/common/nls';\n\n@injectable()\nexport class ScmNoRepositoryWidget extends ReactWidget {\n\n    static ID = 'scm-no-repository-widget';\n\n    constructor() {\n        super();\n        this.addClass('theia-scm-no-repository');\n        this.id = ScmNoRepositoryWidget.ID;\n    }\n\n    protected render(): React.ReactNode {\n        return <AlertMessage\n            type='WARNING'\n            header={nls.localize('theia/scm/noRepositoryFound', 'No repository found')}\n        />;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from '@theia/core/shared/inversify';\nimport {\n    createPreferenceProxy,\n    PreferenceProxy,\n    PreferenceService,\n    PreferenceSchema,\n    PreferenceContribution\n} from '@theia/core/lib/browser/preferences';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport const scmPreferenceSchema: PreferenceSchema = {\n    type: 'object',\n    properties: {\n        'scm.defaultViewMode': {\n            type: 'string',\n            enum: ['tree', 'list'],\n            enumDescriptions: [\n                nls.localizeByDefault('Show the repository changes as a tree.'),\n                nls.localizeByDefault('Show the repository changes as a list.')\n            ],\n            description: nls.localizeByDefault('Controls the default Source Control repository view mode.'),\n            default: 'list'\n        }\n    }\n};\n\nexport interface ScmConfiguration {\n    'scm.defaultViewMode': 'tree' | 'list'\n}\n\nexport const ScmPreferenceContribution = Symbol('ScmPreferenceContribution');\nexport const ScmPreferences = Symbol('ScmPreferences');\nexport type ScmPreferences = PreferenceProxy<ScmConfiguration>;\n\nexport function createScmPreferences(preferences: PreferenceService, schema: PreferenceSchema = scmPreferenceSchema): ScmPreferences {\n    return createPreferenceProxy(preferences, schema);\n}\n\nexport function bindScmPreferences(bind: interfaces.Bind): void {\n    bind(ScmPreferences).toDynamicValue((ctx: interfaces.Context) => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        const contribution = ctx.container.get<PreferenceContribution>(ScmPreferenceContribution);\n        return createScmPreferences(preferences, contribution.schema);\n    }).inSingletonScope();\n    bind(ScmPreferenceContribution).toConstantValue({ schema: scmPreferenceSchema });\n    bind(PreferenceContribution).toService(ScmPreferenceContribution);\n}\n","/********************************************************************************\n * Copyright (C) 2020 Arm and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { TreeModelImpl, TreeNode, TreeProps, CompositeTreeNode, SelectableTreeNode, ExpandableTreeNode } from '@theia/core/lib/browser/tree';\nimport URI from '@theia/core/lib/common/uri';\nimport { ScmProvider, ScmResourceGroup, ScmResource, ScmResourceDecorations } from './scm-provider';\nimport { ScmContextKeyService } from './scm-context-key-service';\n\nexport const ScmTreeModelProps = Symbol('ScmTreeModelProps');\nexport interface ScmTreeModelProps {\n    defaultExpansion?: 'collapsed' | 'expanded';\n    nestingThreshold?: number;\n}\n\nexport interface ScmFileChangeRootNode extends CompositeTreeNode {\n    rootUri: string;\n    children: ScmFileChangeGroupNode[];\n}\n\nexport interface ScmFileChangeGroupNode extends ExpandableTreeNode {\n    groupId: string;\n    groupLabel: string;\n    children: (ScmFileChangeFolderNode | ScmFileChangeNode)[];\n}\n\nexport namespace ScmFileChangeGroupNode {\n    export function is(node: TreeNode): node is ScmFileChangeGroupNode {\n        return 'groupId' in node && 'children' in node\n            && !ScmFileChangeFolderNode.is(node);\n    }\n}\n\nexport interface ScmFileChangeFolderNode extends ExpandableTreeNode, SelectableTreeNode {\n    groupId: string;\n    path: string;\n    sourceUri: string;\n    children: (ScmFileChangeFolderNode | ScmFileChangeNode)[];\n}\n\nexport namespace ScmFileChangeFolderNode {\n    export function is(node: TreeNode): node is ScmFileChangeFolderNode {\n        return 'groupId' in node && 'sourceUri' in node && 'path' in node && 'children' in node;\n    }\n}\n\nexport interface ScmFileChangeNode extends SelectableTreeNode {\n    sourceUri: string;\n    decorations?: ScmResourceDecorations;\n}\n\nexport namespace ScmFileChangeNode {\n    export function is(node: TreeNode): node is ScmFileChangeNode {\n        return 'sourceUri' in node\n            && !ScmFileChangeFolderNode.is(node);\n    }\n    export function getGroupId(node: ScmFileChangeNode): string {\n        const parentNode = node.parent;\n        if (!(parentNode && (ScmFileChangeFolderNode.is(parentNode) || ScmFileChangeGroupNode.is(parentNode)))) {\n            throw new Error('bad node');\n        }\n        return parentNode.groupId;\n    }\n\n}\n\n@injectable()\nexport abstract class ScmTreeModel extends TreeModelImpl {\n\n    private _languageId: string | undefined;\n\n    protected provider: ScmProvider | undefined;\n\n    @inject(TreeProps) protected readonly props: ScmTreeModelProps;\n\n    @inject(ScmContextKeyService) protected readonly contextKeys: ScmContextKeyService;\n\n    get languageId(): string | undefined {\n        return this._languageId;\n    }\n\n    abstract canTabToWidget(): boolean;\n\n    protected _viewMode: 'tree' | 'list' = 'list';\n    set viewMode(id: 'tree' | 'list') {\n        const oldSelection = this.selectedNodes;\n        this._viewMode = id;\n        if (this.root) {\n            this.root = this.createTree();\n\n            for (const oldSelectedNode of oldSelection) {\n                const newNode = this.getNode(oldSelectedNode.id);\n                if (SelectableTreeNode.is(newNode)) {\n                    this.revealNode(newNode);  // this call can run asynchronously\n                }\n            }\n        }\n    }\n    get viewMode(): 'tree' | 'list' {\n        return this._viewMode;\n    }\n\n    abstract get rootUri(): string | undefined;\n    abstract get groups(): ScmResourceGroup[];\n\n    protected createTree(): ScmFileChangeRootNode {\n        const root = {\n            id: 'file-change-tree-root',\n            parent: undefined,\n            visible: false,\n            rootUri: this.rootUri,\n            children: []\n        } as ScmFileChangeRootNode;\n\n        const groupNodes = this.groups\n            .filter(group => !!group.resources.length || !group.hideWhenEmpty)\n            .map(group => this.toGroupNode(group, root));\n        root.children = groupNodes;\n\n        return root;\n    }\n\n    protected toGroupNode(group: ScmResourceGroup, parent: CompositeTreeNode): ScmFileChangeGroupNode {\n        const groupNode: ScmFileChangeGroupNode = {\n            id: `${group.id}`,\n            groupId: group.id,\n            groupLabel: group.label,\n            parent,\n            children: [],\n            expanded: true,\n        };\n\n        const sortedResources = group.resources.sort((r1, r2) =>\n            r1.sourceUri.toString().localeCompare(r2.sourceUri.toString())\n        );\n\n        switch (this._viewMode) {\n            case 'list':\n                groupNode.children = sortedResources.map(resource => this.toFileChangeNode(resource, groupNode));\n                break;\n            case 'tree':\n                const rootUri = group.provider.rootUri;\n                if (rootUri) {\n                    const resourcePaths = sortedResources.map(resource => {\n                        const relativePath = new URI(rootUri).relative(resource.sourceUri);\n                        const pathParts = relativePath ? relativePath.toString().split('/') : [];\n                        return { resource, pathParts };\n                    });\n                    groupNode.children = this.buildFileChangeTree(resourcePaths, 0, sortedResources.length, 0, groupNode);\n                }\n                break;\n        }\n\n        return groupNode;\n    }\n\n    protected buildFileChangeTree(\n        sortedResources: { resource: ScmResource, pathParts: string[] }[],\n        start: number,\n        end: number,\n        level: number,\n        parent: (ScmFileChangeGroupNode | ScmFileChangeFolderNode)\n    ): (ScmFileChangeFolderNode | ScmFileChangeNode)[] {\n        const result: (ScmFileChangeFolderNode | ScmFileChangeNode)[] = [];\n\n        let folderStart = start;\n        while (folderStart < end) {\n            const firstFileChange = sortedResources[folderStart];\n            if (level === firstFileChange.pathParts.length - 1) {\n                result.push(this.toFileChangeNode(firstFileChange.resource, parent));\n                folderStart++;\n            } else {\n                let index = folderStart + 1;\n                while (index < end) {\n                    if (sortedResources[index].pathParts[level] !== firstFileChange.pathParts[level]) {\n                        break;\n                    }\n                    index++;\n                }\n                const folderEnd = index;\n\n                const nestingThreshold = this.props.nestingThreshold || 1;\n                if (folderEnd - folderStart < nestingThreshold) {\n                    // Inline these (i.e. do not create another level in the tree)\n                    for (let i = folderStart; i < folderEnd; i++) {\n                        result.push(this.toFileChangeNode(sortedResources[i].resource, parent));\n                    }\n                } else {\n                    const firstFileParts = firstFileChange.pathParts;\n                    const lastFileParts = sortedResources[folderEnd - 1].pathParts;\n                    // Multiple files with first folder.\n                    // See if more folder levels match and include those if so.\n                    let thisLevel = level + 1;\n                    while (thisLevel < firstFileParts.length - 1 && thisLevel < lastFileParts.length - 1 && firstFileParts[thisLevel] === lastFileParts[thisLevel]) {\n                        thisLevel++;\n                    }\n                    const nodeRelativePath = firstFileParts.slice(level, thisLevel).join('/');\n                    result.push(this.toFileChangeFolderNode(sortedResources, folderStart, folderEnd, thisLevel, nodeRelativePath, parent));\n                }\n                folderStart = folderEnd;\n            }\n        };\n        return result.sort(this.compareNodes);\n    }\n\n    protected compareNodes = (a: ScmFileChangeFolderNode | ScmFileChangeNode, b: ScmFileChangeFolderNode | ScmFileChangeNode) => this.doCompareNodes(a, b);\n    protected doCompareNodes(a: ScmFileChangeFolderNode | ScmFileChangeNode, b: ScmFileChangeFolderNode | ScmFileChangeNode): number {\n        const isFolderA = ScmFileChangeFolderNode.is(a);\n        const isFolderB = ScmFileChangeFolderNode.is(b);\n        if (isFolderA && !isFolderB) {\n            return -1;\n        }\n        if (isFolderB && !isFolderA) {\n            return 1;\n        }\n        return a.sourceUri.localeCompare(b.sourceUri);\n    }\n\n    protected toFileChangeFolderNode(\n        resources: { resource: ScmResource, pathParts: string[] }[],\n        start: number,\n        end: number,\n        level: number,\n        nodeRelativePath: string,\n        parent: (ScmFileChangeGroupNode | ScmFileChangeFolderNode)\n    ): ScmFileChangeFolderNode {\n        const rootUri = this.getRoot(parent).rootUri;\n        let parentPath: string = rootUri;\n        if (ScmFileChangeFolderNode.is(parent)) {\n            parentPath = parent.sourceUri;\n        }\n        const sourceUri = new URI(parentPath).resolve(nodeRelativePath);\n\n        const defaultExpansion = this.props.defaultExpansion ? (this.props.defaultExpansion === 'expanded') : true;\n        const id = `${parent.groupId}:${String(sourceUri)}`;\n        const oldNode = this.getNode(id);\n        const folderNode: ScmFileChangeFolderNode = {\n            id,\n            groupId: parent.groupId,\n            path: nodeRelativePath,\n            sourceUri: String(sourceUri),\n            children: [],\n            parent,\n            expanded: ExpandableTreeNode.is(oldNode) ? oldNode.expanded : defaultExpansion,\n            selected: SelectableTreeNode.is(oldNode) && oldNode.selected,\n        };\n        folderNode.children = this.buildFileChangeTree(resources, start, end, level, folderNode);\n        return folderNode;\n    }\n\n    protected getRoot(node: ScmFileChangeGroupNode | ScmFileChangeFolderNode): ScmFileChangeRootNode {\n        let parent = node.parent!;\n        while (ScmFileChangeGroupNode.is(parent) && ScmFileChangeFolderNode.is(parent)) {\n            parent = parent.parent!;\n        }\n        return parent as ScmFileChangeRootNode;\n    }\n\n    protected toFileChangeNode(resource: ScmResource, parent: CompositeTreeNode): ScmFileChangeNode {\n        const id = `${resource.group.id}:${String(resource.sourceUri)}`;\n        const oldNode = this.getNode(id);\n        const node = {\n            id,\n            sourceUri: String(resource.sourceUri),\n            decorations: resource.decorations,\n            parent,\n            selected: SelectableTreeNode.is(oldNode) && oldNode.selected,\n        };\n        if (node.selected) {\n            this.selectionService.addSelection(node);\n        }\n        return node;\n    }\n\n    protected async revealNode(node: TreeNode): Promise<void> {\n        if (ScmFileChangeFolderNode.is(node) || ScmFileChangeNode.is(node)) {\n            const parentNode = node.parent;\n            if (ExpandableTreeNode.is(parentNode)) {\n                await this.revealNode(parentNode);\n                if (!parentNode.expanded) {\n                    await this.expandNode(parentNode);\n                }\n            }\n        }\n    }\n\n    getResourceFromNode(node: ScmFileChangeNode): ScmResource | undefined {\n        const groupId = ScmFileChangeNode.getGroupId(node);\n        const group = this.findGroup(groupId);\n        if (group) {\n            return group.resources.find(r => String(r.sourceUri) === node.sourceUri)!;\n        }\n    }\n\n    getResourceGroupFromNode(node: ScmFileChangeGroupNode): ScmResourceGroup | undefined {\n        return this.findGroup(node.groupId);\n    }\n\n    getResourcesFromFolderNode(node: ScmFileChangeFolderNode): ScmResource[] {\n        const resources: ScmResource[] = [];\n        const group = this.findGroup(node.groupId);\n        if (group) {\n            this.collectResources(resources, node, group);\n        }\n        return resources;\n\n    }\n    getSelectionArgs(selectedNodes: Readonly<SelectableTreeNode[]>): ScmResource[] {\n        const resources: ScmResource[] = [];\n        for (const node of selectedNodes) {\n            if (ScmFileChangeNode.is(node)) {\n                const groupId = ScmFileChangeNode.getGroupId(node);\n                const group = this.findGroup(groupId);\n                if (group) {\n                    const selectedResource = group.resources.find(r => String(r.sourceUri) === node.sourceUri);\n                    if (selectedResource) {\n                        resources.push(selectedResource);\n                    }\n                }\n            }\n            if (ScmFileChangeFolderNode.is(node)) {\n                const group = this.findGroup(node.groupId);\n                if (group) {\n                    this.collectResources(resources, node, group);\n                }\n            }\n        }\n        // Remove duplicates which may occur if user selected folder and nested folder\n        return resources.filter((item1, index) => resources.findIndex(item2 => item1.sourceUri === item2.sourceUri) === index);\n    }\n\n    protected collectResources(resources: ScmResource[], node: TreeNode, group: ScmResourceGroup): void {\n        if (ScmFileChangeFolderNode.is(node)) {\n            for (const child of node.children) {\n                this.collectResources(resources, child, group);\n            }\n        } else if (ScmFileChangeNode.is(node)) {\n            const resource = group.resources.find(r => String(r.sourceUri) === node.sourceUri)!;\n            resources.push(resource);\n        }\n    }\n\n    execInNodeContext(node: TreeNode, callback: () => void): void {\n        if (!this.provider) {\n            return;\n        }\n\n        let groupId: string;\n        if (ScmFileChangeGroupNode.is(node) || ScmFileChangeFolderNode.is(node)) {\n            groupId = node.groupId;\n        } else if (ScmFileChangeNode.is(node)) {\n            groupId = ScmFileChangeNode.getGroupId(node);\n        } else {\n            return;\n        }\n\n        this.contextKeys.scmProvider.set(this.provider.id);\n        this.contextKeys.scmResourceGroup.set(groupId);\n        try {\n            callback();\n        } finally {\n        }\n    }\n\n    /*\n     * Normally the group would always be expected to be found.  However if the tree is restored\n     * in restoreState then the tree may be rendered before the groups have been created\n     * in the provider.  The provider's groups property will be empty in such a situation.\n     * We want to render the tree (as that is the point of restoreState, we can render\n     * the tree in the saved state before the provider has provided status).  We therefore must\n     * be prepared to render the tree without having the ScmResourceGroup or ScmResource\n     * objects.\n     */\n    findGroup(groupId: string): ScmResourceGroup | undefined {\n        return this.groups.find(g => g.id === groupId);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    storeState(): any {\n        return {\n            ...super.storeState(),\n            mode: this.viewMode,\n        };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    restoreState(oldState: any): void {\n        super.restoreState(oldState);\n        this.viewMode = oldState.mode === 'tree' ? 'tree' : 'list';\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2020 Arm and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable no-null/no-null, @typescript-eslint/no-explicit-any */\n\nimport * as React from '@theia/core/shared/react';\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { isOSX } from '@theia/core/lib/common/os';\nimport { DisposableCollection, Disposable } from '@theia/core/lib/common/disposable';\nimport { TreeWidget, TreeNode, SelectableTreeNode, TreeModel, TreeProps, NodeProps, TREE_NODE_SEGMENT_CLASS, TREE_NODE_SEGMENT_GROW_CLASS } from '@theia/core/lib/browser/tree';\nimport { ScmTreeModel, ScmFileChangeRootNode, ScmFileChangeGroupNode, ScmFileChangeFolderNode, ScmFileChangeNode } from './scm-tree-model';\nimport { MenuModelRegistry, ActionMenuNode, CompositeMenuNode, MenuPath } from '@theia/core/lib/common/menu';\nimport { ScmResource } from './scm-provider';\nimport { CommandRegistry } from '@theia/core/lib/common/command';\nimport { ContextMenuRenderer, LabelProvider, CorePreferences, DiffUris, ACTION_ITEM } from '@theia/core/lib/browser';\nimport { ScmContextKeyService } from './scm-context-key-service';\nimport { EditorWidget, EditorManager, DiffNavigatorProvider } from '@theia/editor/lib/browser';\nimport { FileStat } from '@theia/filesystem/lib/common';\nimport { IconThemeService } from '@theia/core/lib/browser/icon-theme-service';\nimport { ColorRegistry } from '@theia/core/lib/browser/color-registry';\nimport { Decoration, DecorationsService } from '@theia/core/lib/browser/decorations-service';\n\n@injectable()\nexport class ScmTreeWidget extends TreeWidget {\n\n    static ID = 'scm-resource-widget';\n\n    static RESOURCE_GROUP_CONTEXT_MENU = ['RESOURCE_GROUP_CONTEXT_MENU'];\n    static RESOURCE_GROUP_INLINE_MENU = ['RESOURCE_GROUP_INLINE_MENU'];\n\n    static RESOURCE_FOLDER_CONTEXT_MENU = ['RESOURCE_FOLDER_CONTEXT_MENU'];\n    static RESOURCE_FOLDER_INLINE_MENU = ['RESOURCE_FOLDER_INLINE_MENU'];\n\n    static RESOURCE_INLINE_MENU = ['RESOURCE_INLINE_MENU'];\n    static RESOURCE_CONTEXT_MENU = ['RESOURCE_CONTEXT_MENU'];\n\n    @inject(MenuModelRegistry) protected readonly menus: MenuModelRegistry;\n    @inject(CommandRegistry) protected readonly commands: CommandRegistry;\n    @inject(CorePreferences) protected readonly corePreferences: CorePreferences;\n    @inject(ScmContextKeyService) protected readonly contextKeys: ScmContextKeyService;\n    @inject(EditorManager) protected readonly editorManager: EditorManager;\n    @inject(DiffNavigatorProvider) protected readonly diffNavigatorProvider: DiffNavigatorProvider;\n    @inject(IconThemeService) protected readonly iconThemeService: IconThemeService;\n    @inject(DecorationsService) protected readonly decorationsService: DecorationsService;\n    @inject(ColorRegistry) protected readonly colors: ColorRegistry;\n\n    model: ScmTreeModel;\n\n    constructor(\n        @inject(TreeProps) readonly props: TreeProps,\n        @inject(TreeModel) readonly treeModel: TreeModel,\n        @inject(ContextMenuRenderer) protected readonly contextMenuRenderer: ContextMenuRenderer,\n    ) {\n        super(props, treeModel, contextMenuRenderer);\n        this.id = ScmTreeWidget.ID;\n        this.addClass('groups-outer-container');\n        this.model = treeModel as ScmTreeModel;\n    }\n\n    set viewMode(id: 'tree' | 'list') {\n        // Close the search box because the structure of the tree will change dramatically\n        // and the search results will be out of date.\n        this.searchBox.hide();\n        this.model.viewMode = id;\n    }\n    get viewMode(): 'tree' | 'list' {\n        return this.model.viewMode;\n    }\n\n    /**\n     * Render the node given the tree node and node properties.\n     * @param node the tree node.\n     * @param props the node properties.\n     */\n    protected renderNode(node: TreeNode, props: NodeProps): React.ReactNode {\n        if (!TreeNode.isVisible(node)) {\n            return undefined;\n        }\n\n        const attributes = this.createNodeAttributes(node, props);\n        const label = this.labelProvider.getName(node);\n        const searchHighlights = this.searchHighlights?.get(node.id);\n        // The group nodes should not be subject to highlighting.\n        const caption = (searchHighlights && !ScmFileChangeGroupNode.is(node)) ? this.toReactNode(label, searchHighlights) : label;\n\n        if (ScmFileChangeGroupNode.is(node)) {\n            const content = <ScmResourceGroupElement\n                key={`${node.groupId}`}\n                model={this.model}\n                treeNode={node}\n                renderExpansionToggle={() => this.renderExpansionToggle(node, props)}\n                contextMenuRenderer={this.contextMenuRenderer}\n                commands={this.commands}\n                menus={this.menus}\n                contextKeys={this.contextKeys}\n                labelProvider={this.labelProvider}\n                corePreferences={this.corePreferences}\n                caption={caption}\n            />;\n\n            return React.createElement('div', attributes, content);\n\n        }\n        if (ScmFileChangeFolderNode.is(node)) {\n            const content = <ScmResourceFolderElement\n                key={String(node.sourceUri)}\n                model={this.model}\n                treeNode={node}\n                sourceUri={node.sourceUri}\n                renderExpansionToggle={() => this.renderExpansionToggle(node, props)}\n                contextMenuRenderer={this.contextMenuRenderer}\n                commands={this.commands}\n                menus={this.menus}\n                contextKeys={this.contextKeys}\n                labelProvider={this.labelProvider}\n                corePreferences={this.corePreferences}\n                caption={caption}\n            />;\n\n            return React.createElement('div', attributes, content);\n        }\n        if (ScmFileChangeNode.is(node)) {\n            const parentPath =\n                (node.parent && ScmFileChangeFolderNode.is(node.parent))\n                    ? new URI(node.parent.sourceUri) : new URI(this.model.rootUri);\n\n            const content = <ScmResourceComponent\n                key={node.sourceUri}\n                model={this.model}\n                treeNode={node}\n                contextMenuRenderer={this.contextMenuRenderer}\n                commands={this.commands}\n                menus={this.menus}\n                contextKeys={this.contextKeys}\n                labelProvider={this.labelProvider}\n                corePreferences={this.corePreferences}\n                caption={caption}\n                {...{\n                    ...this.props,\n                    parentPath,\n                    sourceUri: node.sourceUri,\n                    decoration: this.decorationsService.getDecoration(new URI(node.sourceUri), true)[0],\n                    colors: this.colors,\n                    renderExpansionToggle: () => this.renderExpansionToggle(node, props),\n                }}\n            />;\n            return React.createElement('div', attributes, content);\n        }\n        return super.renderNode(node, props);\n    }\n\n    protected createContainerAttributes(): React.HTMLAttributes<HTMLElement> {\n        if (this.model.canTabToWidget()) {\n            return {\n                ...super.createContainerAttributes(),\n                tabIndex: 0\n            };\n        }\n        return super.createContainerAttributes();\n    }\n\n    /**\n     * The ARROW_LEFT key controls both the movement around the file tree and also\n     * the movement through the change chunks within a file.\n     *\n     * If the selected tree node is a folder then the ARROW_LEFT key behaves exactly\n     * as it does in explorer.  It collapses the tree node if the folder is expanded and\n     * it moves the selection up to the parent folder if the folder is collapsed (no-op if no parent folder, as\n     * group headers are not selectable).  This behavior is the default behavior implemented\n     * in the TreeWidget super class.\n     *\n     * If the selected tree node is a file then the ARROW_LEFT key moves up through the\n     * change chunks within each file.  If the selected chunk is the first chunk in the file\n     * then the file selection is moved to the previous file (no-op if no previous file).\n     *\n     * Note that when cursoring through change chunks, the ARROW_LEFT key cannot be used to\n     * move up through the parent folders of the file tree.  If users want to do this, using\n     * keys only, then they must press ARROW_UP repeatedly until the selected node is the folder\n     * node and then press ARROW_LEFT.\n     */\n    protected async handleLeft(event: KeyboardEvent): Promise<void> {\n        if (this.model.selectedNodes.length === 1) {\n            const selectedNode = this.model.selectedNodes[0];\n            if (ScmFileChangeNode.is(selectedNode)) {\n                const selectedResource = this.model.getResourceFromNode(selectedNode);\n                if (!selectedResource) {\n                    return super.handleLeft(event);\n                }\n                const widget = await this.openResource(selectedResource);\n\n                if (widget) {\n                    const diffNavigator = this.diffNavigatorProvider(widget.editor);\n                    if (diffNavigator.canNavigate() && diffNavigator.hasPrevious()) {\n                        diffNavigator.previous();\n                    } else {\n                        const previousNode = this.moveToPreviousFileNode();\n                        if (previousNode) {\n                            const previousResource = this.model.getResourceFromNode(previousNode);\n                            if (previousResource) {\n                                this.openResource(previousResource);\n                            }\n                        }\n                    }\n                    return;\n                }\n            }\n        }\n        return super.handleLeft(event);\n    }\n\n    /**\n     * The ARROW_RIGHT key controls both the movement around the file tree and also\n     * the movement through the change chunks within a file.\n     *\n     * If the selected tree node is a folder then the ARROW_RIGHT key behaves exactly\n     * as it does in explorer.  It expands the tree node if the folder is collapsed and\n     * it moves the selection to the first child node if the folder is expanded.\n     * This behavior is the default behavior implemented\n     * in the TreeWidget super class.\n     *\n     * If the selected tree node is a file then the ARROW_RIGHT key moves down through the\n     * change chunks within each file.  If the selected chunk is the last chunk in the file\n     * then the file selection is moved to the next file (no-op if no next file).\n     */\n    protected async handleRight(event: KeyboardEvent): Promise<void> {\n        if (this.model.selectedNodes.length === 0) {\n            const firstNode = this.getFirstSelectableNode();\n            // Selects the first visible resource as none are selected.\n            if (!firstNode) {\n                return;\n            }\n            this.model.selectNode(firstNode);\n            return;\n        }\n        if (this.model.selectedNodes.length === 1) {\n            const selectedNode = this.model.selectedNodes[0];\n            if (ScmFileChangeNode.is(selectedNode)) {\n                const selectedResource = this.model.getResourceFromNode(selectedNode);\n                if (!selectedResource) {\n                    return super.handleRight(event);\n                }\n                const widget = await this.openResource(selectedResource);\n\n                if (widget) {\n                    const diffNavigator = this.diffNavigatorProvider(widget.editor);\n                    if (diffNavigator.canNavigate() && diffNavigator.hasNext()) {\n                        diffNavigator.next();\n                    } else {\n                        const nextNode = this.moveToNextFileNode();\n                        if (nextNode) {\n                            const nextResource = this.model.getResourceFromNode(nextNode);\n                            if (nextResource) {\n                                this.openResource(nextResource);\n                            }\n                        }\n                    }\n                }\n                return;\n            }\n        }\n        return super.handleRight(event);\n    }\n\n    protected handleEnter(event: KeyboardEvent): void {\n        if (this.model.selectedNodes.length === 1) {\n            const selectedNode = this.model.selectedNodes[0];\n            if (ScmFileChangeNode.is(selectedNode)) {\n                const selectedResource = this.model.getResourceFromNode(selectedNode);\n                if (selectedResource) {\n                    this.openResource(selectedResource);\n                }\n                return;\n            }\n        }\n        super.handleEnter(event);\n    }\n\n    async goToPreviousChange(): Promise<void> {\n        if (this.model.selectedNodes.length === 1) {\n            const selectedNode = this.model.selectedNodes[0];\n            if (ScmFileChangeNode.is(selectedNode)) {\n                if (ScmFileChangeNode.is(selectedNode)) {\n                    const selectedResource = this.model.getResourceFromNode(selectedNode);\n                    if (!selectedResource) {\n                        return;\n                    }\n                    const widget = await this.openResource(selectedResource);\n\n                    if (widget) {\n                        const diffNavigator = this.diffNavigatorProvider(widget.editor);\n                        if (diffNavigator.canNavigate() && diffNavigator.hasPrevious()) {\n                            diffNavigator.previous();\n                        } else {\n                            const previousNode = this.moveToPreviousFileNode();\n                            if (previousNode) {\n                                const previousResource = this.model.getResourceFromNode(previousNode);\n                                if (previousResource) {\n                                    this.openResource(previousResource);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    async goToNextChange(): Promise<void> {\n        if (this.model.selectedNodes.length === 0) {\n            const firstNode = this.getFirstSelectableNode();\n            // Selects the first visible resource as none are selected.\n            if (!firstNode) {\n                return;\n            }\n            this.model.selectNode(firstNode);\n            return;\n        }\n        if (this.model.selectedNodes.length === 1) {\n            const selectedNode = this.model.selectedNodes[0];\n            if (ScmFileChangeNode.is(selectedNode)) {\n                const selectedResource = this.model.getResourceFromNode(selectedNode);\n                if (!selectedResource) {\n                    return;\n                }\n                const widget = await this.openResource(selectedResource);\n\n                if (widget) {\n                    const diffNavigator = this.diffNavigatorProvider(widget.editor);\n                    if (diffNavigator.canNavigate() && diffNavigator.hasNext()) {\n                        diffNavigator.next();\n                    } else {\n                        const nextNode = this.moveToNextFileNode();\n                        if (nextNode) {\n                            const nextResource = this.model.getResourceFromNode(nextNode);\n                            if (nextResource) {\n                                this.openResource(nextResource);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    protected getFirstSelectableNode(): SelectableTreeNode | undefined {\n        if (this.model.root) {\n            const root = this.model.root as ScmFileChangeRootNode;\n            const groupNode = root.children[0];\n            return groupNode.children[0];\n        }\n    }\n\n    protected moveToPreviousFileNode(): ScmFileChangeNode | undefined {\n        let previousNode = this.model.getPrevSelectableNode();\n        while (previousNode) {\n            if (ScmFileChangeNode.is(previousNode)) {\n                this.model.selectNode(previousNode);\n                return previousNode;\n            }\n            previousNode = this.model.getPrevSelectableNode(previousNode);\n        };\n    }\n\n    protected moveToNextFileNode(): ScmFileChangeNode | undefined {\n        let nextNode = this.model.getNextSelectableNode();\n        while (nextNode) {\n            if (ScmFileChangeNode.is(nextNode)) {\n                this.model.selectNode(nextNode);\n                return nextNode;\n            }\n            nextNode = this.model.getNextSelectableNode(nextNode);\n        };\n    }\n\n    protected async openResource(resource: ScmResource): Promise<EditorWidget | undefined> {\n        try {\n            await resource.open();\n        } catch (e) {\n            console.error('Failed to open a SCM resource', e);\n            return undefined;\n        }\n\n        let standaloneEditor: EditorWidget | undefined;\n        const resourcePath = resource.sourceUri.path.toString();\n\n        for (const widget of this.editorManager.all) {\n            const resourceUri = widget.editor.document.uri;\n            const editorResourcePath = new URI(resourceUri).path.toString();\n            if (resourcePath === editorResourcePath) {\n                if (widget.editor.uri.scheme === DiffUris.DIFF_SCHEME) {\n                    // prefer diff editor\n                    return widget;\n                } else {\n                    standaloneEditor = widget;\n                }\n            }\n            if (widget.editor.uri.scheme === DiffUris.DIFF_SCHEME\n                && resourceUri === resource.sourceUri.toString()) {\n                return widget;\n            }\n        }\n        // fallback to standalone editor\n        return standaloneEditor;\n    }\n\n    protected getPaddingLeft(node: TreeNode, props: NodeProps): number {\n        if (this.viewMode === 'list') {\n            if (props.depth === 1) {\n                return this.props.expansionTogglePadding;\n            }\n        }\n        return super.getPaddingLeft(node, props);\n    }\n\n    protected needsExpansionTogglePadding(node: TreeNode): boolean {\n        const theme = this.iconThemeService.getDefinition(this.iconThemeService.current);\n        if (theme && (theme.hidesExplorerArrows || (theme.hasFileIcons && !theme.hasFolderIcons))) {\n            return false;\n        }\n        return super.needsExpansionTogglePadding(node);\n    }\n\n}\n\nexport namespace ScmTreeWidget {\n    export namespace Styles {\n        export const NO_SELECT = 'no-select';\n    }\n    // This is an 'abstract' base interface for all the element component props.\n    export interface Props {\n        treeNode: TreeNode;\n        model: ScmTreeModel;\n        commands: CommandRegistry;\n        menus: MenuModelRegistry;\n        contextKeys: ScmContextKeyService;\n        labelProvider: LabelProvider;\n        contextMenuRenderer: ContextMenuRenderer;\n        corePreferences?: CorePreferences;\n        caption: React.ReactNode;\n    }\n}\n\nexport abstract class ScmElement<P extends ScmElement.Props = ScmElement.Props> extends React.Component<P, ScmElement.State> {\n\n    constructor(props: P) {\n        super(props);\n        this.state = {\n            hover: false\n        };\n\n        const setState = this.setState.bind(this);\n        this.setState = newState => {\n            if (!this.toDisposeOnUnmount.disposed) {\n                setState(newState);\n            }\n        };\n    }\n\n    protected readonly toDisposeOnUnmount = new DisposableCollection();\n    componentDidMount(): void {\n        this.toDisposeOnUnmount.push(Disposable.create(() => { /* mark as mounted */ }));\n    }\n    componentWillUnmount(): void {\n        this.toDisposeOnUnmount.dispose();\n    }\n\n    protected detectHover = (element: HTMLElement | null) => {\n        if (element) {\n            window.requestAnimationFrame(() => {\n                const hover = element.matches(':hover');\n                this.setState({ hover });\n            });\n        }\n    };\n    protected showHover = () => this.setState({ hover: true });\n    protected hideHover = () => this.setState({ hover: false });\n\n    protected renderContextMenu = (event: React.MouseEvent<HTMLElement>) => {\n        event.preventDefault();\n        const { treeNode: node, contextMenuRenderer } = this.props;\n        this.props.model.execInNodeContext(node, () => {\n            contextMenuRenderer.render({\n                menuPath: this.contextMenuPath,\n                anchor: event.nativeEvent,\n                args: this.contextMenuArgs\n            });\n        });\n    };\n\n    protected abstract get contextMenuPath(): MenuPath;\n    protected abstract get contextMenuArgs(): any[];\n\n}\nexport namespace ScmElement {\n    export interface Props extends ScmTreeWidget.Props {\n        renderExpansionToggle: () => React.ReactNode\n    }\n    export interface State {\n        hover: boolean\n    }\n}\n\nexport class ScmResourceComponent extends ScmElement<ScmResourceComponent.Props> {\n\n    render(): JSX.Element | undefined {\n        const { hover } = this.state;\n        const { model, treeNode, colors, parentPath, sourceUri, decoration, labelProvider, commands, menus, contextKeys, caption } = this.props;\n        const resourceUri = new URI(sourceUri);\n\n        const icon = labelProvider.getIcon(resourceUri);\n        const color = decoration && decoration.colorId ? `var(${colors.toCssVariableName(decoration.colorId)})` : '';\n        const letter = decoration && decoration.letter || '';\n        const tooltip = decoration && decoration.tooltip || '';\n        const relativePath = parentPath.relative(resourceUri.parent);\n        const path = relativePath ? relativePath.toString() : labelProvider.getLongName(resourceUri.parent);\n        const title = tooltip.length !== 0\n            ? `${resourceUri.path.toString()} • ${tooltip}`\n            : resourceUri.path.toString();\n\n        return <div key={sourceUri}\n            className={`scmItem ${TREE_NODE_SEGMENT_CLASS} ${TREE_NODE_SEGMENT_GROW_CLASS}`}\n            onContextMenu={this.renderContextMenu}\n            onMouseEnter={this.showHover}\n            onMouseLeave={this.hideHover}\n            ref={this.detectHover}\n            title={title}\n            onClick={this.handleClick}\n            onDoubleClick={this.handleDoubleClick} >\n            <span className={icon + ' file-icon'} />\n            {this.props.renderExpansionToggle()}\n            <div className={`noWrapInfo ${TREE_NODE_SEGMENT_GROW_CLASS}`} >\n                <span className='name'>{caption}</span>\n                <span className='path'>{path}</span>\n            </div>\n            <ScmInlineActions {...{\n                hover,\n                menu: menus.getMenu(ScmTreeWidget.RESOURCE_INLINE_MENU),\n                args: this.contextMenuArgs,\n                commands,\n                contextKeys,\n                model,\n                treeNode\n            }}>\n                <div title={tooltip} className='status' style={{ color }}>\n                    {letter}\n                </div>\n            </ScmInlineActions>\n        </div >;\n    }\n\n    protected open = () => {\n        const resource = this.props.model.getResourceFromNode(this.props.treeNode);\n        if (resource) {\n            resource.open();\n        }\n    };\n\n    protected readonly contextMenuPath = ScmTreeWidget.RESOURCE_CONTEXT_MENU;\n    protected get contextMenuArgs(): any[] {\n        if (!this.props.model.selectedNodes.some(node => ScmFileChangeNode.is(node) && node.sourceUri === this.props.sourceUri)) {\n            // Clicked node is not in selection, so ignore selection and action on just clicked node\n            return this.singleNodeArgs;\n        } else {\n            return this.props.model.getSelectionArgs(this.props.model.selectedNodes);\n        }\n    }\n    protected get singleNodeArgs(): any[] {\n        const selectedResource = this.props.model.getResourceFromNode(this.props.treeNode);\n        if (selectedResource) {\n            return [selectedResource];\n        } else {\n            // Repository status not yet available. Empty args disables the action.\n            return [];\n        }\n    }\n\n    protected hasCtrlCmdOrShiftMask(event: TreeWidget.ModifierAwareEvent): boolean {\n        const { metaKey, ctrlKey, shiftKey } = event;\n        return (isOSX && metaKey) || ctrlKey || shiftKey;\n    }\n\n    /**\n     * Handle the single clicking of nodes present in the widget.\n     */\n    protected handleClick = (event: React.MouseEvent) => {\n        if (!this.hasCtrlCmdOrShiftMask(event)) {\n            // Determine the behavior based on the preference value.\n            const isSingle = this.props.corePreferences && this.props.corePreferences['workbench.list.openMode'] === 'singleClick';\n            if (isSingle) {\n                this.open();\n            }\n        }\n    };\n\n    /**\n     * Handle the double clicking of nodes present in the widget.\n     */\n    protected handleDoubleClick = () => {\n        // Determine the behavior based on the preference value.\n        const isDouble = this.props.corePreferences && this.props.corePreferences['workbench.list.openMode'] === 'doubleClick';\n        // Nodes should only be opened through double clicking if the correct preference is set.\n        if (isDouble) {\n            this.open();\n        }\n    };\n}\nexport namespace ScmResourceComponent {\n    export interface Props extends ScmElement.Props {\n        treeNode: ScmFileChangeNode;\n        parentPath: URI;\n        sourceUri: string;\n        decoration: Decoration | undefined;\n        colors: ColorRegistry;\n    }\n}\n\nexport class ScmResourceGroupElement extends ScmElement<ScmResourceGroupComponent.Props> {\n\n    render(): JSX.Element {\n        const { hover } = this.state;\n        const { model, treeNode, menus, commands, contextKeys, caption } = this.props;\n        return <div className={`theia-header scm-theia-header ${TREE_NODE_SEGMENT_GROW_CLASS}`}\n            onContextMenu={this.renderContextMenu}\n            onMouseEnter={this.showHover}\n            onMouseLeave={this.hideHover}\n            ref={this.detectHover}>\n            {this.props.renderExpansionToggle()}\n            <div className={`noWrapInfo ${TREE_NODE_SEGMENT_GROW_CLASS}`}>{caption}</div>\n            <ScmInlineActions {...{\n                hover,\n                args: this.contextMenuArgs,\n                menu: menus.getMenu(ScmTreeWidget.RESOURCE_GROUP_INLINE_MENU),\n                commands,\n                contextKeys,\n                model,\n                treeNode\n            }}>\n                {this.renderChangeCount()}\n            </ScmInlineActions>\n        </div>;\n    }\n\n    protected renderChangeCount(): React.ReactNode {\n        const group = this.props.model.getResourceGroupFromNode(this.props.treeNode);\n        return <div className='notification-count-container scm-change-count'>\n            <span className='notification-count'>{group ? group.resources.length : 0}</span>\n        </div>;\n    }\n\n    protected readonly contextMenuPath = ScmTreeWidget.RESOURCE_GROUP_CONTEXT_MENU;\n    protected get contextMenuArgs(): any[] {\n        const group = this.props.model.getResourceGroupFromNode(this.props.treeNode);\n        if (group) {\n            return [group];\n        } else {\n            // Repository status not yet available. Empty args disables the action.\n            return [];\n        }\n    }\n}\nexport namespace ScmResourceGroupComponent {\n    export interface Props extends ScmElement.Props {\n        treeNode: ScmFileChangeGroupNode;\n    }\n}\n\nexport class ScmResourceFolderElement extends ScmElement<ScmResourceFolderElement.Props> {\n\n    render(): JSX.Element {\n        const { hover } = this.state;\n        const { model, treeNode, sourceUri, labelProvider, commands, menus, contextKeys, caption } = this.props;\n        const sourceFileStat: FileStat = { uri: sourceUri, isDirectory: true, lastModification: 0 };\n        const icon = labelProvider.getIcon(sourceFileStat);\n        const title = new URI(sourceUri).path.toString();\n\n        return <div key={sourceUri}\n            className={`scmItem  ${TREE_NODE_SEGMENT_CLASS} ${TREE_NODE_SEGMENT_GROW_CLASS} ${ScmTreeWidget.Styles.NO_SELECT}`}\n            title={title}\n            onContextMenu={this.renderContextMenu}\n            onMouseEnter={this.showHover}\n            onMouseLeave={this.hideHover}\n            ref={this.detectHover}\n        >\n            {this.props.renderExpansionToggle()}\n            <span className={icon + ' file-icon'} />\n            <div className={`noWrapInfo ${TREE_NODE_SEGMENT_GROW_CLASS}`} >\n                <span className='name'>{caption}</span>\n            </div>\n            <ScmInlineActions {...{\n                hover,\n                menu: menus.getMenu(ScmTreeWidget.RESOURCE_FOLDER_INLINE_MENU),\n                args: this.contextMenuArgs,\n                commands,\n                contextKeys,\n                model,\n                treeNode\n            }}>\n            </ScmInlineActions>\n        </div >;\n\n    }\n\n    protected readonly contextMenuPath = ScmTreeWidget.RESOURCE_FOLDER_CONTEXT_MENU;\n    protected get contextMenuArgs(): any[] {\n        if (!this.props.model.selectedNodes.some(node => ScmFileChangeFolderNode.is(node) && node.sourceUri === this.props.sourceUri)) {\n            // Clicked node is not in selection, so ignore selection and action on just clicked node\n            return this.singleNodeArgs;\n        } else {\n            return this.props.model.getSelectionArgs(this.props.model.selectedNodes);\n        }\n    }\n    protected get singleNodeArgs(): any[] {\n        return this.props.model.getResourcesFromFolderNode(this.props.treeNode);\n    }\n\n}\n\nexport namespace ScmResourceFolderElement {\n    export interface Props extends ScmElement.Props {\n        treeNode: ScmFileChangeFolderNode;\n        sourceUri: string;\n    }\n}\n\nexport class ScmInlineActions extends React.Component<ScmInlineActions.Props> {\n    render(): React.ReactNode {\n        const { hover, menu, args, commands, model, treeNode, contextKeys, children } = this.props;\n        return <div className='theia-scm-inline-actions-container'>\n            <div className='theia-scm-inline-actions'>\n                {hover && menu.children\n                    .map((node, index) => node instanceof ActionMenuNode && <ScmInlineAction key={index} {...{ node, args, commands, model, treeNode, contextKeys }} />)}\n            </div>\n            {children}\n        </div>;\n    }\n}\nexport namespace ScmInlineActions {\n    export interface Props {\n        hover: boolean;\n        menu: CompositeMenuNode;\n        commands: CommandRegistry;\n        model: ScmTreeModel;\n        treeNode: TreeNode;\n        contextKeys: ScmContextKeyService;\n        args: any[];\n        children?: React.ReactNode;\n    }\n}\n\nexport class ScmInlineAction extends React.Component<ScmInlineAction.Props> {\n    render(): React.ReactNode {\n        const { node, model, treeNode, args, commands, contextKeys } = this.props;\n\n        let isActive: boolean = false;\n        model.execInNodeContext(treeNode, () => {\n            isActive = contextKeys.match(node.action.when);\n        });\n\n        if (!commands.isVisible(node.action.commandId, ...args) || !isActive) {\n            return false;\n        }\n        return <div className='theia-scm-inline-action'>\n            <a className={`${node.icon} ${ACTION_ITEM}`} title={node.label} onClick={this.execute} />\n        </div>;\n    }\n\n    protected execute = (event: React.MouseEvent) => {\n        event.stopPropagation();\n\n        const { commands, node, args } = this.props;\n        commands.executeCommand(node.action.commandId, ...args);\n    };\n}\nexport namespace ScmInlineAction {\n    export interface Props {\n        node: ActionMenuNode;\n        commands: CommandRegistry;\n        model: ScmTreeModel;\n        treeNode: TreeNode;\n        contextKeys: ScmContextKeyService;\n        args: any[];\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable no-null/no-null, @typescript-eslint/no-explicit-any */\n\nimport { Message } from '@theia/core/shared/@phosphor/messaging';\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\nimport {\n    BaseWidget, Widget, StatefulWidget, Panel, PanelLayout, MessageLoop, CompositeTreeNode, SelectableTreeNode,\n} from '@theia/core/lib/browser';\nimport { ScmCommitWidget } from './scm-commit-widget';\nimport { ScmAmendWidget } from './scm-amend-widget';\nimport { ScmNoRepositoryWidget } from './scm-no-repository-widget';\nimport { ScmService } from './scm-service';\nimport { ScmTreeWidget } from './scm-tree-widget';\nimport { ScmPreferences } from './scm-preferences';\nimport { nls } from '@theia/core/lib/common/nls';\n\n@injectable()\nexport class ScmWidget extends BaseWidget implements StatefulWidget {\n\n    protected panel: Panel;\n\n    static ID = 'scm-view';\n\n    @inject(ScmService) protected readonly scmService: ScmService;\n    @inject(ScmCommitWidget) protected readonly commitWidget: ScmCommitWidget;\n    @inject(ScmTreeWidget) readonly resourceWidget: ScmTreeWidget;\n    @inject(ScmAmendWidget) protected readonly amendWidget: ScmAmendWidget;\n    @inject(ScmNoRepositoryWidget) readonly noRepositoryWidget: ScmNoRepositoryWidget;\n    @inject(ScmPreferences) protected readonly scmPreferences: ScmPreferences;\n\n    set viewMode(mode: 'tree' | 'list') {\n        this.resourceWidget.viewMode = mode;\n    }\n    get viewMode(): 'tree' | 'list' {\n        return this.resourceWidget.viewMode;\n    }\n\n    constructor() {\n        super();\n        this.node.tabIndex = 0;\n        this.id = ScmWidget.ID;\n        this.addClass('theia-scm');\n        this.addClass('theia-scm-main-container');\n    }\n\n    @postConstruct()\n    protected init(): void {\n        const layout = new PanelLayout();\n        this.layout = layout;\n        this.panel = new Panel({\n            layout: new PanelLayout({\n            })\n        });\n        this.panel.node.tabIndex = -1;\n        this.panel.node.setAttribute('class', 'theia-scm-panel');\n        layout.addWidget(this.panel);\n\n        this.containerLayout.addWidget(this.commitWidget);\n        this.containerLayout.addWidget(this.resourceWidget);\n        this.containerLayout.addWidget(this.amendWidget);\n        this.containerLayout.addWidget(this.noRepositoryWidget);\n\n        this.refresh();\n        this.toDispose.push(this.scmService.onDidChangeSelectedRepository(() => this.refresh()));\n        this.updateViewMode(this.scmPreferences.get('scm.defaultViewMode'));\n        this.toDispose.push(this.scmPreferences.onPreferenceChanged(e => {\n            if (e.preferenceName === 'scm.defaultViewMode') {\n                this.updateViewMode(e.newValue);\n            }\n        }));\n\n    }\n\n    get containerLayout(): PanelLayout {\n        return this.panel.layout as PanelLayout;\n    }\n\n    /**\n     * Updates the view mode based on the preference value.\n     * @param preference the view mode preference.\n     */\n    protected updateViewMode(preference: 'tree' | 'list'): void {\n        this.viewMode = preference;\n    }\n\n    protected readonly toDisposeOnRefresh = new DisposableCollection();\n    protected refresh(): void {\n        this.toDisposeOnRefresh.dispose();\n        this.toDispose.push(this.toDisposeOnRefresh);\n        const repository = this.scmService.selectedRepository;\n        this.title.label = repository ? repository.provider.label : nls.localize('theia/scm/noRepositoryFound', 'No repository found');\n        this.title.caption = this.title.label;\n        this.update();\n        if (repository) {\n            this.toDisposeOnRefresh.push(repository.onDidChange(() => this.update()));\n            // render synchronously to avoid cursor jumping\n            // see https://stackoverflow.com/questions/28922275/in-reactjs-why-does-setstate-behave-differently-when-called-synchronously/28922465#28922465\n            this.toDisposeOnRefresh.push(repository.input.onDidChange(() => this.updateImmediately()));\n            this.toDisposeOnRefresh.push(repository.input.onDidFocus(() => this.focusInput()));\n\n            this.commitWidget.show();\n            this.resourceWidget.show();\n            this.amendWidget.show();\n            this.noRepositoryWidget.hide();\n        } else {\n            this.commitWidget.hide();\n            this.resourceWidget.hide();\n            this.amendWidget.hide();\n            this.noRepositoryWidget.show();\n        }\n    }\n\n    protected updateImmediately(): void {\n        this.onUpdateRequest(Widget.Msg.UpdateRequest);\n    }\n\n    protected onUpdateRequest(msg: Message): void {\n        MessageLoop.sendMessage(this.commitWidget, msg);\n        MessageLoop.sendMessage(this.resourceWidget, msg);\n        MessageLoop.sendMessage(this.amendWidget, msg);\n        MessageLoop.sendMessage(this.noRepositoryWidget, msg);\n        super.onUpdateRequest(msg);\n    }\n\n    protected onAfterAttach(msg: Message): void {\n        this.node.appendChild(this.commitWidget.node);\n        this.node.appendChild(this.resourceWidget.node);\n        this.node.appendChild(this.amendWidget.node);\n        this.node.appendChild(this.noRepositoryWidget.node);\n\n        super.onAfterAttach(msg);\n        this.update();\n    }\n\n    protected onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.refresh();\n        if (this.commitWidget.isVisible) {\n            this.commitWidget.focus();\n        } else {\n            this.node.focus();\n        }\n    }\n\n    protected focusInput(): void {\n        this.commitWidget.focus();\n    }\n\n    storeState(): any {\n        const state: object = {\n            commitState: this.commitWidget.storeState(),\n            changesTreeState: this.resourceWidget.storeState(),\n        };\n        return state;\n    }\n\n    restoreState(oldState: any): void {\n        const { commitState, changesTreeState } = oldState;\n        this.commitWidget.restoreState(commitState);\n        this.resourceWidget.restoreState(changesTreeState);\n    }\n\n    collapseScmTree(): void {\n        const { model } = this.resourceWidget;\n        const root = model.root;\n        if (CompositeTreeNode.is(root)) {\n            root.children.map(group => {\n                if (CompositeTreeNode.is(group)) {\n                    group.children.map(folderNode => {\n                        if (CompositeTreeNode.is(folderNode)) {\n                            model.collapseAll(folderNode);\n                        }\n                        if (SelectableTreeNode.isSelected(folderNode)) {\n                            model.toggleNode(folderNode);\n                        }\n                    });\n                }\n            });\n        }\n    }\n}\n","/*!\n\tautosize 4.0.4\n\tlicense: MIT\n\thttp://www.jacklmoore.com/autosize\n*/\n(function (global, factory) {\n\tif (typeof define === \"function\" && define.amd) {\n\t\tdefine(['module', 'exports'], factory);\n\t} else if (typeof exports !== \"undefined\") {\n\t\tfactory(module, exports);\n\t} else {\n\t\tvar mod = {\n\t\t\texports: {}\n\t\t};\n\t\tfactory(mod, mod.exports);\n\t\tglobal.autosize = mod.exports;\n\t}\n})(this, function (module, exports) {\n\t'use strict';\n\n\tvar map = typeof Map === \"function\" ? new Map() : function () {\n\t\tvar keys = [];\n\t\tvar values = [];\n\n\t\treturn {\n\t\t\thas: function has(key) {\n\t\t\t\treturn keys.indexOf(key) > -1;\n\t\t\t},\n\t\t\tget: function get(key) {\n\t\t\t\treturn values[keys.indexOf(key)];\n\t\t\t},\n\t\t\tset: function set(key, value) {\n\t\t\t\tif (keys.indexOf(key) === -1) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t\tvalues.push(value);\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelete: function _delete(key) {\n\t\t\t\tvar index = keys.indexOf(key);\n\t\t\t\tif (index > -1) {\n\t\t\t\t\tkeys.splice(index, 1);\n\t\t\t\t\tvalues.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}();\n\n\tvar createEvent = function createEvent(name) {\n\t\treturn new Event(name, { bubbles: true });\n\t};\n\ttry {\n\t\tnew Event('test');\n\t} catch (e) {\n\t\t// IE does not support `new Event()`\n\t\tcreateEvent = function createEvent(name) {\n\t\t\tvar evt = document.createEvent('Event');\n\t\t\tevt.initEvent(name, true, false);\n\t\t\treturn evt;\n\t\t};\n\t}\n\n\tfunction assign(ta) {\n\t\tif (!ta || !ta.nodeName || ta.nodeName !== 'TEXTAREA' || map.has(ta)) return;\n\n\t\tvar heightOffset = null;\n\t\tvar clientWidth = null;\n\t\tvar cachedHeight = null;\n\n\t\tfunction init() {\n\t\t\tvar style = window.getComputedStyle(ta, null);\n\n\t\t\tif (style.resize === 'vertical') {\n\t\t\t\tta.style.resize = 'none';\n\t\t\t} else if (style.resize === 'both') {\n\t\t\t\tta.style.resize = 'horizontal';\n\t\t\t}\n\n\t\t\tif (style.boxSizing === 'content-box') {\n\t\t\t\theightOffset = -(parseFloat(style.paddingTop) + parseFloat(style.paddingBottom));\n\t\t\t} else {\n\t\t\t\theightOffset = parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);\n\t\t\t}\n\t\t\t// Fix when a textarea is not on document body and heightOffset is Not a Number\n\t\t\tif (isNaN(heightOffset)) {\n\t\t\t\theightOffset = 0;\n\t\t\t}\n\n\t\t\tupdate();\n\t\t}\n\n\t\tfunction changeOverflow(value) {\n\t\t\t{\n\t\t\t\t// Chrome/Safari-specific fix:\n\t\t\t\t// When the textarea y-overflow is hidden, Chrome/Safari do not reflow the text to account for the space\n\t\t\t\t// made available by removing the scrollbar. The following forces the necessary text reflow.\n\t\t\t\tvar width = ta.style.width;\n\t\t\t\tta.style.width = '0px';\n\t\t\t\t// Force reflow:\n\t\t\t\t/* jshint ignore:start */\n\t\t\t\tta.offsetWidth;\n\t\t\t\t/* jshint ignore:end */\n\t\t\t\tta.style.width = width;\n\t\t\t}\n\n\t\t\tta.style.overflowY = value;\n\t\t}\n\n\t\tfunction getParentOverflows(el) {\n\t\t\tvar arr = [];\n\n\t\t\twhile (el && el.parentNode && el.parentNode instanceof Element) {\n\t\t\t\tif (el.parentNode.scrollTop) {\n\t\t\t\t\tarr.push({\n\t\t\t\t\t\tnode: el.parentNode,\n\t\t\t\t\t\tscrollTop: el.parentNode.scrollTop\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tel = el.parentNode;\n\t\t\t}\n\n\t\t\treturn arr;\n\t\t}\n\n\t\tfunction resize() {\n\t\t\tif (ta.scrollHeight === 0) {\n\t\t\t\t// If the scrollHeight is 0, then the element probably has display:none or is detached from the DOM.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar overflows = getParentOverflows(ta);\n\t\t\tvar docTop = document.documentElement && document.documentElement.scrollTop; // Needed for Mobile IE (ticket #240)\n\n\t\t\tta.style.height = '';\n\t\t\tta.style.height = ta.scrollHeight + heightOffset + 'px';\n\n\t\t\t// used to check if an update is actually necessary on window.resize\n\t\t\tclientWidth = ta.clientWidth;\n\n\t\t\t// prevents scroll-position jumping\n\t\t\toverflows.forEach(function (el) {\n\t\t\t\tel.node.scrollTop = el.scrollTop;\n\t\t\t});\n\n\t\t\tif (docTop) {\n\t\t\t\tdocument.documentElement.scrollTop = docTop;\n\t\t\t}\n\t\t}\n\n\t\tfunction update() {\n\t\t\tresize();\n\n\t\t\tvar styleHeight = Math.round(parseFloat(ta.style.height));\n\t\t\tvar computed = window.getComputedStyle(ta, null);\n\n\t\t\t// Using offsetHeight as a replacement for computed.height in IE, because IE does not account use of border-box\n\t\t\tvar actualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(computed.height)) : ta.offsetHeight;\n\n\t\t\t// The actual height not matching the style height (set via the resize method) indicates that \n\t\t\t// the max-height has been exceeded, in which case the overflow should be allowed.\n\t\t\tif (actualHeight < styleHeight) {\n\t\t\t\tif (computed.overflowY === 'hidden') {\n\t\t\t\t\tchangeOverflow('scroll');\n\t\t\t\t\tresize();\n\t\t\t\t\tactualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Normally keep overflow set to hidden, to avoid flash of scrollbar as the textarea expands.\n\t\t\t\tif (computed.overflowY !== 'hidden') {\n\t\t\t\t\tchangeOverflow('hidden');\n\t\t\t\t\tresize();\n\t\t\t\t\tactualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cachedHeight !== actualHeight) {\n\t\t\t\tcachedHeight = actualHeight;\n\t\t\t\tvar evt = createEvent('autosize:resized');\n\t\t\t\ttry {\n\t\t\t\t\tta.dispatchEvent(evt);\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Firefox will throw an error on dispatchEvent for a detached element\n\t\t\t\t\t// https://bugzilla.mozilla.org/show_bug.cgi?id=889376\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar pageResize = function pageResize() {\n\t\t\tif (ta.clientWidth !== clientWidth) {\n\t\t\t\tupdate();\n\t\t\t}\n\t\t};\n\n\t\tvar destroy = function (style) {\n\t\t\twindow.removeEventListener('resize', pageResize, false);\n\t\t\tta.removeEventListener('input', update, false);\n\t\t\tta.removeEventListener('keyup', update, false);\n\t\t\tta.removeEventListener('autosize:destroy', destroy, false);\n\t\t\tta.removeEventListener('autosize:update', update, false);\n\n\t\t\tObject.keys(style).forEach(function (key) {\n\t\t\t\tta.style[key] = style[key];\n\t\t\t});\n\n\t\t\tmap.delete(ta);\n\t\t}.bind(ta, {\n\t\t\theight: ta.style.height,\n\t\t\tresize: ta.style.resize,\n\t\t\toverflowY: ta.style.overflowY,\n\t\t\toverflowX: ta.style.overflowX,\n\t\t\twordWrap: ta.style.wordWrap\n\t\t});\n\n\t\tta.addEventListener('autosize:destroy', destroy, false);\n\n\t\t// IE9 does not fire onpropertychange or oninput for deletions,\n\t\t// so binding to onkeyup to catch most of those events.\n\t\t// There is no way that I know of to detect something like 'cut' in IE9.\n\t\tif ('onpropertychange' in ta && 'oninput' in ta) {\n\t\t\tta.addEventListener('keyup', update, false);\n\t\t}\n\n\t\twindow.addEventListener('resize', pageResize, false);\n\t\tta.addEventListener('input', update, false);\n\t\tta.addEventListener('autosize:update', update, false);\n\t\tta.style.overflowX = 'hidden';\n\t\tta.style.wordWrap = 'break-word';\n\n\t\tmap.set(ta, {\n\t\t\tdestroy: destroy,\n\t\t\tupdate: update\n\t\t});\n\n\t\tinit();\n\t}\n\n\tfunction destroy(ta) {\n\t\tvar methods = map.get(ta);\n\t\tif (methods) {\n\t\t\tmethods.destroy();\n\t\t}\n\t}\n\n\tfunction update(ta) {\n\t\tvar methods = map.get(ta);\n\t\tif (methods) {\n\t\t\tmethods.update();\n\t\t}\n\t}\n\n\tvar autosize = null;\n\n\t// Do nothing in Node.js environment and IE8 (or lower)\n\tif (typeof window === 'undefined' || typeof window.getComputedStyle !== 'function') {\n\t\tautosize = function autosize(el) {\n\t\t\treturn el;\n\t\t};\n\t\tautosize.destroy = function (el) {\n\t\t\treturn el;\n\t\t};\n\t\tautosize.update = function (el) {\n\t\t\treturn el;\n\t\t};\n\t} else {\n\t\tautosize = function autosize(el, options) {\n\t\t\tif (el) {\n\t\t\t\tArray.prototype.forEach.call(el.length ? el : [el], function (x) {\n\t\t\t\t\treturn assign(x, options);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn el;\n\t\t};\n\t\tautosize.destroy = function (el) {\n\t\t\tif (el) {\n\t\t\t\tArray.prototype.forEach.call(el.length ? el : [el], destroy);\n\t\t\t}\n\t\t\treturn el;\n\t\t};\n\t\tautosize.update = function (el) {\n\t\t\tif (el) {\n\t\t\t\tArray.prototype.forEach.call(el.length ? el : [el], update);\n\t\t\t}\n\t\t\treturn el;\n\t\t};\n\t}\n\n\texports.default = autosize;\n\tmodule.exports = exports['default'];\n});","// This code has been refactored for 140 bytes\n// You can see the original here: https://github.com/twolfson/computedStyle/blob/04cd1da2e30fa45844f95f5cb1ac898e9b9ef050/lib/computedStyle.js\nvar computedStyle = function (el, prop, getComputedStyle) {\n  getComputedStyle = window.getComputedStyle;\n\n  // In one fell swoop\n  return (\n    // If we have getComputedStyle\n    getComputedStyle ?\n      // Query it\n      // TODO: From CSS-Query notes, we might need (node, null) for FF\n      getComputedStyle(el) :\n\n    // Otherwise, we are in IE and use currentStyle\n      el.currentStyle\n  )[\n    // Switch to camelCase for CSSOM\n    // DEV: Grabbed from jQuery\n    // https://github.com/jquery/jquery/blob/1.9-stable/src/css.js#L191-L194\n    // https://github.com/jquery/jquery/blob/1.9-stable/src/core.js#L593-L597\n    prop.replace(/-(\\w)/gi, function (word, letter) {\n      return letter.toUpperCase();\n    })\n  ];\n};\n\nmodule.exports = computedStyle;\n","// Load in dependencies\nvar computedStyle = require('computed-style');\n\n/**\n * Calculate the `line-height` of a given node\n * @param {HTMLElement} node Element to calculate line height of. Must be in the DOM.\n * @returns {Number} `line-height` of the element in pixels\n */\nfunction lineHeight(node) {\n  // Grab the line-height via style\n  var lnHeightStr = computedStyle(node, 'line-height');\n  var lnHeight = parseFloat(lnHeightStr, 10);\n\n  // If the lineHeight did not contain a unit (i.e. it was numeric), convert it to ems (e.g. '2.3' === '2.3em')\n  if (lnHeightStr === lnHeight + '') {\n    // Save the old lineHeight style and update the em unit to the element\n    var _lnHeightStyle = node.style.lineHeight;\n    node.style.lineHeight = lnHeightStr + 'em';\n\n    // Calculate the em based height\n    lnHeightStr = computedStyle(node, 'line-height');\n    lnHeight = parseFloat(lnHeightStr, 10);\n\n    // Revert the lineHeight style\n    if (_lnHeightStyle) {\n      node.style.lineHeight = _lnHeightStyle;\n    } else {\n      delete node.style.lineHeight;\n    }\n  }\n\n  // If the lineHeight is in `pt`, convert it to pixels (4px for 3pt)\n  // DEV: `em` units are converted to `pt` in IE6\n  // Conversion ratio from https://developer.mozilla.org/en-US/docs/Web/CSS/length\n  if (lnHeightStr.indexOf('pt') !== -1) {\n    lnHeight *= 4;\n    lnHeight /= 3;\n  // Otherwise, if the lineHeight is in `mm`, convert it to pixels (96px for 25.4mm)\n  } else if (lnHeightStr.indexOf('mm') !== -1) {\n    lnHeight *= 96;\n    lnHeight /= 25.4;\n  // Otherwise, if the lineHeight is in `cm`, convert it to pixels (96px for 2.54cm)\n  } else if (lnHeightStr.indexOf('cm') !== -1) {\n    lnHeight *= 96;\n    lnHeight /= 2.54;\n  // Otherwise, if the lineHeight is in `in`, convert it to pixels (96px for 1in)\n  } else if (lnHeightStr.indexOf('in') !== -1) {\n    lnHeight *= 96;\n  // Otherwise, if the lineHeight is in `pc`, convert it to pixels (12pt for 1pc)\n  } else if (lnHeightStr.indexOf('pc') !== -1) {\n    lnHeight *= 16;\n  }\n\n  // Continue our computation\n  lnHeight = Math.round(lnHeight);\n\n  // If the line-height is \"normal\", calculate by font-size\n  if (lnHeightStr === 'normal') {\n    // Create a temporary node\n    var nodeName = node.nodeName;\n    var _node = document.createElement(nodeName);\n    _node.innerHTML = '&nbsp;';\n\n    // If we have a text area, reset it to only 1 row\n    // https://github.com/twolfson/line-height/issues/4\n    if (nodeName.toUpperCase() === 'TEXTAREA') {\n      _node.setAttribute('rows', '1');\n    }\n\n    // Set the font-size of the element\n    var fontSizeStr = computedStyle(node, 'font-size');\n    _node.style.fontSize = fontSizeStr;\n\n    // Remove default padding/border which can affect offset height\n    // https://github.com/twolfson/line-height/issues/4\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetHeight\n    _node.style.padding = '0px';\n    _node.style.border = '0px';\n\n    // Append it to the body\n    var body = document.body;\n    body.appendChild(_node);\n\n    // Assume the line height of the element is the height\n    var height = _node.offsetHeight;\n    lnHeight = height;\n\n    // Remove our child from the DOM\n    body.removeChild(_node);\n  }\n\n  // Return the calculated height\n  return lnHeight;\n}\n\n// Export lineHeight\nmodule.exports = lineHeight;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nexports.__esModule = true;\nvar React = require(\"react\");\nvar PropTypes = require(\"prop-types\");\nvar autosize = require(\"autosize\");\nvar _getLineHeight = require(\"line-height\");\nvar getLineHeight = _getLineHeight;\nvar RESIZED = \"autosize:resized\";\n/**\n * A light replacement for built-in textarea component\n * which automaticaly adjusts its height to match the content\n */\nvar TextareaAutosizeClass = /** @class */ (function (_super) {\n    __extends(TextareaAutosizeClass, _super);\n    function TextareaAutosizeClass() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            lineHeight: null\n        };\n        _this.textarea = null;\n        _this.onResize = function (e) {\n            if (_this.props.onResize) {\n                _this.props.onResize(e);\n            }\n        };\n        _this.updateLineHeight = function () {\n            if (_this.textarea) {\n                _this.setState({\n                    lineHeight: getLineHeight(_this.textarea)\n                });\n            }\n        };\n        _this.onChange = function (e) {\n            var onChange = _this.props.onChange;\n            _this.currentValue = e.currentTarget.value;\n            onChange && onChange(e);\n        };\n        return _this;\n    }\n    TextareaAutosizeClass.prototype.componentDidMount = function () {\n        var _this = this;\n        var _a = this.props, maxRows = _a.maxRows, async = _a.async;\n        if (typeof maxRows === \"number\") {\n            this.updateLineHeight();\n        }\n        if (typeof maxRows === \"number\" || async) {\n            /*\n              the defer is needed to:\n                - force \"autosize\" to activate the scrollbar when this.props.maxRows is passed\n                - support StyledComponents (see #71)\n            */\n            setTimeout(function () { return _this.textarea && autosize(_this.textarea); });\n        }\n        else {\n            this.textarea && autosize(this.textarea);\n        }\n        if (this.textarea) {\n            this.textarea.addEventListener(RESIZED, this.onResize);\n        }\n    };\n    TextareaAutosizeClass.prototype.componentWillUnmount = function () {\n        if (this.textarea) {\n            this.textarea.removeEventListener(RESIZED, this.onResize);\n            autosize.destroy(this.textarea);\n        }\n    };\n    TextareaAutosizeClass.prototype.render = function () {\n        var _this = this;\n        var _a = this, _b = _a.props, onResize = _b.onResize, maxRows = _b.maxRows, onChange = _b.onChange, style = _b.style, innerRef = _b.innerRef, children = _b.children, props = __rest(_b, [\"onResize\", \"maxRows\", \"onChange\", \"style\", \"innerRef\", \"children\"]), lineHeight = _a.state.lineHeight;\n        var maxHeight = maxRows && lineHeight ? lineHeight * maxRows : null;\n        return (React.createElement(\"textarea\", __assign({}, props, { onChange: this.onChange, style: maxHeight ? __assign({}, style, { maxHeight: maxHeight }) : style, ref: function (element) {\n                _this.textarea = element;\n                if (typeof _this.props.innerRef === 'function') {\n                    _this.props.innerRef(element);\n                }\n                else if (_this.props.innerRef) {\n                    _this.props.innerRef.current = element;\n                }\n            } }), children));\n    };\n    TextareaAutosizeClass.prototype.componentDidUpdate = function () {\n        this.textarea && autosize.update(this.textarea);\n    };\n    TextareaAutosizeClass.defaultProps = {\n        rows: 1,\n        async: false\n    };\n    TextareaAutosizeClass.propTypes = {\n        rows: PropTypes.number,\n        maxRows: PropTypes.number,\n        onResize: PropTypes.func,\n        innerRef: PropTypes.any,\n        async: PropTypes.bool\n    };\n    return TextareaAutosizeClass;\n}(React.Component));\nexports.TextareaAutosize = React.forwardRef(function (props, ref) {\n    return React.createElement(TextareaAutosizeClass, __assign({}, props, { innerRef: ref }));\n});\n","\"use strict\";\nexports.__esModule = true;\nvar TextareaAutosize_1 = require(\"./TextareaAutosize\");\nexports[\"default\"] = TextareaAutosize_1.TextareaAutosize;\n","import api from \"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../css-loader/dist/cjs.js!./scm-amend-component.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":[],"sourceRoot":""}