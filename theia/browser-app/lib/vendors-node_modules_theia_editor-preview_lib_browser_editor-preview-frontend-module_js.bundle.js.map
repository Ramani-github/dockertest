{"version":3,"file":"vendors-node_modules_theia_editor-preview_lib_browser_editor-preview-frontend-module_js.bundle.js","mappings":"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","sources":["webpack:///../node_modules/@theia/editor-preview/src/browser/style/editor-preview-widget.css?../node_modules/css-loader/dist/cjs.js","webpack:///../node_modules/@theia/editor-preview/src/browser/style/index.css?../node_modules/css-loader/dist/cjs.js","webpack:///../node_modules/@theia/core/shared/@phosphor/algorithm/index.js?","webpack:///../node_modules/@theia/editor-preview/src/browser/editor-preview-contribution.ts?","webpack:///../node_modules/@theia/editor-preview/src/browser/editor-preview-frontend-module.ts?","webpack:///../node_modules/@theia/editor-preview/src/browser/editor-preview-manager.ts?","webpack:///../node_modules/@theia/editor-preview/src/browser/editor-preview-preferences.ts?","webpack:///../node_modules/@theia/editor-preview/src/browser/editor-preview-tree-decorator.ts?","webpack:///../node_modules/@theia/editor-preview/src/browser/editor-preview-widget-factory.ts?","webpack:///../node_modules/@theia/editor-preview/src/browser/editor-preview-widget.ts?","webpack:///../node_modules/@theia/editor-preview/src/browser/style/index.css?"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2018 Google and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-editor-preview {\\n    height: 100%;\\n}\\n\\n.theia-editor-preview-title-unpinned .p-TabBar-tabLabel {\\n  font-style: italic;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./../node_modules/@theia/editor-preview/src/browser/style/editor-preview-widget.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;IACI,YAAY;AAChB;;AAEA;EACE,kBAAkB;AACpB\",\"sourcesContent\":[\"/********************************************************************************\\n * Copyright (C) 2018 Google and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-editor-preview {\\n    height: 100%;\\n}\\n\\n.theia-editor-preview-title-unpinned .p-TabBar-tabLabel {\\n  font-style: italic;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../../../../../css-loader/dist/cjs.js!./editor-preview-widget.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2018 Google and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./../node_modules/@theia/editor-preview/src/browser/style/index.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;iFAciF\",\"sourcesContent\":[\"/********************************************************************************\\n * Copyright (C) 2018 Google and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n@import './editor-preview-widget.css';\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","module.exports = require('@phosphor/algorithm');\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ApplicationShell, CommonCommands, KeybindingContribution, KeybindingRegistry, SHELL_TABBAR_CONTEXT_PIN, Widget } from '@theia/core/lib/browser';\nimport { nls } from '@theia/core/lib/common/nls';\nimport { Command, CommandContribution, CommandRegistry, MenuContribution, MenuModelRegistry } from '@theia/core/lib/common';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { EditorPreviewWidget } from './editor-preview-widget';\nimport { CurrentWidgetCommandAdapter } from '@theia/core/lib/browser/shell/current-widget-command-adapter';\n\nexport namespace EditorPreviewCommands {\n    export const PIN_PREVIEW_COMMAND = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.keepEditor',\n        category: CommonCommands.VIEW_CATEGORY,\n        label: 'Keep Editor',\n    });\n}\n\n@injectable()\nexport class EditorPreviewContribution implements CommandContribution, MenuContribution, KeybindingContribution {\n    @inject(ApplicationShell) protected readonly shell: ApplicationShell;\n\n    registerCommands(registry: CommandRegistry): void {\n        registry.registerCommand(EditorPreviewCommands.PIN_PREVIEW_COMMAND, new CurrentWidgetCommandAdapter(this.shell, {\n            execute: async title => {\n                if (title?.owner instanceof EditorPreviewWidget) {\n                    title.owner.convertToNonPreview();\n                    await this.shell.activateWidget(title.owner.id);\n                }\n            },\n            isEnabled: title => title?.owner instanceof EditorPreviewWidget && title.owner.isPreview,\n            isVisible: title => title?.owner instanceof EditorPreviewWidget,\n        }));\n    }\n\n    registerKeybindings(registry: KeybindingRegistry): void {\n        registry.registerKeybinding({\n            command: EditorPreviewCommands.PIN_PREVIEW_COMMAND.id,\n            keybinding: 'ctrlcmd+k enter'\n        });\n    }\n\n    registerMenus(registry: MenuModelRegistry): void {\n        registry.registerMenuAction(SHELL_TABBAR_CONTEXT_PIN, {\n            commandId: EditorPreviewCommands.PIN_PREVIEW_COMMAND.id,\n            label: nls.localizeByDefault('Keep Open'),\n            order: '6',\n        });\n    }\n\n    protected getTargetWidget(event?: Event): Widget | undefined {\n        return event ? this.shell.findTargetedWidget(event) : this.shell.activeWidget;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018-2021 Google and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport '../../src/browser/style/index.css';\nimport { FrontendApplicationContribution, KeybindingContribution, WidgetFactory } from '@theia/core/lib/browser';\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { bindEditorPreviewPreferences } from './editor-preview-preferences';\nimport { EditorPreviewManager } from './editor-preview-manager';\nimport { EditorManager } from '@theia/editor/lib/browser';\nimport { EditorPreviewWidgetFactory } from './editor-preview-widget-factory';\nimport { EditorPreviewContribution } from './editor-preview-contribution';\nimport { CommandContribution, MenuContribution } from '@theia/core/lib/common';\nimport { OpenEditorsTreeDecorator } from '@theia/navigator/lib/browser/open-editors-widget/navigator-open-editors-decorator-service';\nimport { EditorPreviewTreeDecorator } from './editor-preview-tree-decorator';\n\nexport default new ContainerModule((bind, unbind, isBound, rebind) => {\n\n    bind(EditorPreviewWidgetFactory).toSelf().inSingletonScope();\n    bind(WidgetFactory).toService(EditorPreviewWidgetFactory);\n\n    bind(EditorPreviewManager).toSelf().inSingletonScope();\n    rebind(EditorManager).toService(EditorPreviewManager);\n\n    bind(EditorPreviewContribution).toSelf().inSingletonScope();\n    bind(CommandContribution).toService(EditorPreviewContribution);\n    bind(KeybindingContribution).toService(EditorPreviewContribution);\n    bind(MenuContribution).toService(EditorPreviewContribution);\n\n    bind(EditorPreviewTreeDecorator).toSelf().inSingletonScope();\n    bind(OpenEditorsTreeDecorator).toService(EditorPreviewTreeDecorator);\n    bind(FrontendApplicationContribution).toService(EditorPreviewTreeDecorator);\n    bindEditorPreviewPreferences(bind);\n});\n","/********************************************************************************\n * Copyright (C) 2018-2021 Google and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { EditorManager, EditorOpenerOptions, EditorWidget } from '@theia/editor/lib/browser';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { EditorPreviewPreferences } from './editor-preview-preferences';\nimport { DisposableCollection, MaybePromise } from '@theia/core/lib/common';\nimport URI from '@theia/core/lib/common/uri';\nimport { EditorPreviewWidgetFactory, EditorPreviewOptions } from './editor-preview-widget-factory';\nimport { EditorPreviewWidget } from './editor-preview-widget';\nimport { FrontendApplicationStateService } from '@theia/core/lib/browser/frontend-application-state';\n\n@injectable()\nexport class EditorPreviewManager extends EditorManager {\n    readonly id = EditorPreviewWidgetFactory.ID;\n\n    @inject(EditorPreviewPreferences) protected readonly preferences: EditorPreviewPreferences;\n    @inject(FrontendApplicationStateService) protected readonly stateService: FrontendApplicationStateService;\n\n    protected currentPreview: EditorPreviewWidget | undefined;\n    protected toDisposeOnPreviewChange = new DisposableCollection();\n    /**\n     * Until the layout has been restored, widget state is not reliable, so we ignore creation events.\n     */\n    protected layoutIsSet = false;\n\n    @postConstruct()\n    protected init(): void {\n        super.init();\n        // All editors are created, but not all are opened. This sets up the logic to swap previews when the editor is attached.\n        this.onCreated((widget: EditorPreviewWidget) => {\n            if (this.layoutIsSet && widget.isPreview) {\n                const oneTimeDisposable = widget.onDidChangeVisibility(() => {\n                    const { currentPreview } = this;\n                    this.handleNewPreview(widget);\n                    currentPreview?.dispose();\n                    oneTimeDisposable.dispose();\n                });\n            }\n        });\n\n        this.preferences.onPreferenceChanged(change => {\n            if (!change.newValue) {\n                this.currentPreview?.convertToNonPreview();\n            };\n        });\n\n        this.stateService.reachedState('initialized_layout').then(() => {\n            const editors = this.all as EditorPreviewWidget[];\n            const currentPreview = editors.find(editor => editor.isPreview);\n            if (currentPreview) {\n                this.handleNewPreview(currentPreview);\n            }\n            this.layoutIsSet = true;\n        });\n\n        document.addEventListener('dblclick', this.convertEditorOnDoubleClick.bind(this));\n    }\n\n    protected async doOpen(widget: EditorPreviewWidget, options?: EditorOpenerOptions): Promise<void> {\n        const { preview, widgetOptions = { area: 'main' }, mode = 'activate' } = options ?? {};\n        if (!widget.isAttached) {\n            if (preview) {\n                const insertionOptions = this.currentPreview ? { ref: this.currentPreview } : widgetOptions;\n                await this.shell.addWidget(widget, insertionOptions);\n            } else {\n                this.shell.addWidget(widget, widgetOptions);\n            }\n        } else if (!preview && widget === this.currentPreview) {\n            widget.convertToNonPreview();\n        }\n\n        if (mode === 'activate') {\n            await this.shell.activateWidget(widget.id);\n        } else if (mode === 'reveal') {\n            await this.shell.revealWidget(widget.id);\n        }\n    }\n\n    protected handleNewPreview(widget: EditorPreviewWidget): void {\n        this.toDisposeOnPreviewChange.dispose();\n        this.currentPreview = widget;\n        this.toDisposeOnPreviewChange.push({ dispose: () => this.currentPreview = undefined });\n        this.toDisposeOnPreviewChange.push(widget.onDidChangePreviewState(() => this.toDisposeOnPreviewChange.dispose()));\n        this.toDisposeOnPreviewChange.push(widget.onDidDispose(() => this.toDisposeOnPreviewChange.dispose()));\n    }\n\n    protected tryGetPendingWidget(uri: URI, options?: EditorOpenerOptions): MaybePromise<EditorWidget> | undefined {\n        return super.tryGetPendingWidget(uri, { ...options, preview: true }) ?? super.tryGetPendingWidget(uri, { ...options, preview: false });\n    }\n\n    protected async getWidget(uri: URI, options?: EditorOpenerOptions): Promise<EditorWidget | undefined> {\n        return (await super.getWidget(uri, { ...options, preview: true })) ?? super.getWidget(uri, { ...options, preview: false });\n    }\n\n    protected async getOrCreateWidget(uri: URI, options?: EditorOpenerOptions): Promise<EditorWidget> {\n        return this.tryGetPendingWidget(uri, options) ?? super.getOrCreateWidget(uri, options);\n    }\n\n    protected createWidgetOptions(uri: URI, options?: EditorOpenerOptions): EditorPreviewOptions {\n        const navigatableOptions = super.createWidgetOptions(uri, options) as EditorPreviewOptions;\n        navigatableOptions.preview = !!(options?.preview && this.preferences['editor.enablePreview']);\n        return navigatableOptions;\n    }\n\n    protected convertEditorOnDoubleClick(event: Event): void {\n        const widget = this.shell.findTargetedWidget(event);\n        if (widget === this.currentPreview) {\n            this.currentPreview?.convertToNonPreview();\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Google and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from '@theia/core/shared/inversify';\nimport { createPreferenceProxy, PreferenceProxy, PreferenceService, PreferenceContribution, PreferenceSchema } from '@theia/core/lib/browser';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport const EditorPreviewConfigSchema: PreferenceSchema = {\n    'type': 'object',\n    properties: {\n        'editor.enablePreview': {\n            type: 'boolean',\n            // eslint-disable-next-line max-len\n            description: nls.localizeByDefault('Controls whether opened editors show as preview. Preview editors do not keep open and are reused until explicitly set to be kept open (e.g. via double click or editing) and show up with an italic font style.'),\n            default: true\n        },\n    }\n};\n\nexport interface EditorPreviewConfiguration {\n    'editor.enablePreview': boolean;\n}\n\nexport const EditorPreviewPreferenceContribution = Symbol('EditorPreviewPreferenceContribution');\nexport const EditorPreviewPreferences = Symbol('EditorPreviewPreferences');\nexport type EditorPreviewPreferences = PreferenceProxy<EditorPreviewConfiguration>;\n\nexport function createEditorPreviewPreferences(preferences: PreferenceService, schema: PreferenceSchema = EditorPreviewConfigSchema): EditorPreviewPreferences {\n    return createPreferenceProxy(preferences, schema);\n}\n\nexport function bindEditorPreviewPreferences(bind: interfaces.Bind): void {\n    bind(EditorPreviewPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        const contribution = ctx.container.get<PreferenceContribution>(EditorPreviewPreferenceContribution);\n        return createEditorPreviewPreferences(preferences, contribution.schema);\n    }).inSingletonScope();\n    bind(EditorPreviewPreferenceContribution).toConstantValue({ schema: EditorPreviewConfigSchema });\n    bind(PreferenceContribution).toService(EditorPreviewPreferenceContribution);\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { TreeDecorator, TreeDecoration } from '@theia/core/lib/browser/tree/tree-decorator';\nimport { Emitter } from '@theia/core/lib/common/event';\nimport { Tree } from '@theia/core/lib/browser/tree/tree';\nimport {\n    ApplicationShell,\n    DepthFirstTreeIterator,\n    FrontendApplication,\n    FrontendApplicationContribution,\n    NavigatableWidget,\n    Saveable,\n    Widget,\n} from '@theia/core/lib/browser';\nimport { Disposable } from '@theia/core/lib/common';\nimport { OpenEditorNode } from '@theia/navigator/lib/browser/open-editors-widget/navigator-open-editors-tree-model';\nimport { EditorPreviewWidget } from './editor-preview-widget';\nimport { EditorPreviewManager } from './editor-preview-manager';\n\n@injectable()\nexport class EditorPreviewTreeDecorator implements TreeDecorator, FrontendApplicationContribution {\n    @inject(EditorPreviewManager) protected readonly editorPreviewManager: EditorPreviewManager;\n    @inject(ApplicationShell) protected readonly shell: ApplicationShell;\n\n    readonly id = 'theia-open-editors-file-decorator';\n    protected decorationsMap = new Map<string, TreeDecoration.Data>();\n\n    protected readonly decorationsChangedEmitter = new Emitter();\n    readonly onDidChangeDecorations = this.decorationsChangedEmitter.event;\n    protected readonly toDisposeOnDirtyChanged = new Map<string, Disposable>();\n    protected readonly toDisposeOnPreviewPinned = new Map<string, Disposable>();\n\n    onDidInitializeLayout(app: FrontendApplication): void {\n        this.shell.onDidAddWidget(widget => this.registerEditorListeners(widget));\n        this.shell.onDidRemoveWidget(widget => this.unregisterEditorListeners(widget));\n        this.editorWidgets.forEach(widget => this.registerEditorListeners(widget));\n    }\n\n    protected registerEditorListeners(widget: Widget): void {\n        const saveable = Saveable.get(widget);\n        if (saveable) {\n            this.toDisposeOnDirtyChanged.set(widget.id, saveable.onDirtyChanged(() => {\n                this.fireDidChangeDecorations((tree: Tree) => this.collectDecorators(tree));\n            }));\n        }\n        if (widget instanceof EditorPreviewWidget) {\n            this.toDisposeOnPreviewPinned.set(widget.id, widget.onDidChangePreviewState(() => {\n                this.fireDidChangeDecorations((tree: Tree) => this.collectDecorators(tree));\n                this.toDisposeOnPreviewPinned.get(widget.id)?.dispose();\n                this.toDisposeOnDirtyChanged.delete(widget.id);\n            }));\n        }\n    }\n\n    protected unregisterEditorListeners(widget: Widget): void {\n        this.toDisposeOnDirtyChanged.get(widget.id)?.dispose();\n        this.toDisposeOnDirtyChanged.delete(widget.id);\n        this.toDisposeOnPreviewPinned.get(widget.id)?.dispose();\n        this.toDisposeOnPreviewPinned.delete(widget.id);\n    }\n\n    protected get editorWidgets(): NavigatableWidget[] {\n        return this.shell.widgets.filter((widget): widget is NavigatableWidget => NavigatableWidget.is(widget));\n    }\n\n    protected fireDidChangeDecorations(event: (tree: Tree) => Map<string, TreeDecoration.Data>): void {\n        this.decorationsChangedEmitter.fire(event);\n    }\n\n    decorations(tree: Tree): Map<string, TreeDecoration.Data> {\n        return this.collectDecorators(tree);\n    }\n\n    // Add workspace root as caption suffix and italicize if PreviewWidget\n    protected collectDecorators(tree: Tree): Map<string, TreeDecoration.Data> {\n        const result = new Map<string, TreeDecoration.Data>();\n        if (tree.root === undefined) {\n            return result;\n        }\n        for (const node of new DepthFirstTreeIterator(tree.root)) {\n            if (OpenEditorNode.is(node)) {\n                const { widget } = node;\n                const isPreviewWidget = widget instanceof EditorPreviewWidget && widget.isPreview;\n                const decorations: TreeDecoration.Data = {\n                    fontData: { style: isPreviewWidget ? 'italic' : undefined }\n                };\n                result.set(node.id, decorations);\n            }\n        }\n        return result;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018-2021 Google and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport URI from '@theia/core/lib/common/uri';\nimport { EditorWidgetFactory } from '@theia/editor/lib/browser/editor-widget-factory';\nimport { injectable } from '@theia/core/shared/inversify';\nimport { EditorPreviewWidget } from './editor-preview-widget';\nimport { NavigatableWidgetOptions } from '@theia/core/lib/browser';\n\nexport interface EditorPreviewOptions extends NavigatableWidgetOptions {\n    preview?: boolean;\n}\n\n@injectable()\nexport class EditorPreviewWidgetFactory extends EditorWidgetFactory {\n    static ID: string = 'editor-preview-widget';\n    readonly id = EditorPreviewWidgetFactory.ID;\n\n    async createWidget(options: EditorPreviewOptions): Promise<EditorPreviewWidget> {\n        const uri = new URI(options.uri);\n        const editor = await this.createEditor(uri, options) as EditorPreviewWidget;\n        if (options.preview) {\n            editor.initializePreview();\n        }\n        return editor;\n    }\n\n    protected async constructEditor(uri: URI): Promise<EditorPreviewWidget> {\n        const textEditor = await this.editorProvider(uri);\n        return new EditorPreviewWidget(textEditor, this.selectionService);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Message } from '@theia/core/shared/@phosphor/messaging';\nimport { DockPanel, TabBar, Widget } from '@theia/core/lib/browser';\nimport { EditorWidget, TextEditor } from '@theia/editor/lib/browser';\nimport { Disposable, DisposableCollection, Emitter, SelectionService } from '@theia/core/lib/common';\nimport { find } from '@theia/core/shared/@phosphor/algorithm';\n\nconst PREVIEW_TITLE_CLASS = 'theia-editor-preview-title-unpinned';\nexport class EditorPreviewWidget extends EditorWidget {\n    protected _isPreview = false;\n    protected lastTabbar: TabBar<Widget> | undefined;\n\n    protected readonly onDidChangePreviewStateEmitter = new Emitter<void>();\n    readonly onDidChangePreviewState = this.onDidChangePreviewStateEmitter.event;\n\n    protected readonly toDisposeOnLocationChange = new DisposableCollection();\n\n    get isPreview(): boolean {\n        return this._isPreview;\n    }\n\n    constructor(\n        readonly editor: TextEditor,\n        protected readonly selectionService: SelectionService\n    ) {\n        super(editor, selectionService);\n        this.toDispose.push(this.onDidChangePreviewStateEmitter);\n        this.toDispose.push(this.toDisposeOnLocationChange);\n    }\n\n    initializePreview(): void {\n        this._isPreview = true;\n        this.title.className += ` ${PREVIEW_TITLE_CLASS}`;\n        const oneTimeDirtyChangeListener = this.saveable.onDirtyChanged(() => {\n            this.convertToNonPreview();\n            oneTimeDirtyChangeListener.dispose();\n        });\n        this.toDispose.push(oneTimeDirtyChangeListener);\n    }\n\n    convertToNonPreview(): void {\n        if (this._isPreview) {\n            this._isPreview = false;\n            this.toDisposeOnLocationChange.dispose();\n            this.lastTabbar = undefined;\n            this.title.className = this.title.className.replace(PREVIEW_TITLE_CLASS, '');\n            this.onDidChangePreviewStateEmitter.fire();\n            this.onDidChangePreviewStateEmitter.dispose();\n        }\n    }\n\n    protected onAfterAttach(msg: Message): void {\n        super.onAfterAttach(msg);\n        if (this._isPreview) {\n            this.checkForTabbarChange();\n        }\n    }\n\n    protected checkForTabbarChange(): void {\n        const { parent } = this;\n        if (parent instanceof DockPanel) {\n            this.toDisposeOnLocationChange.dispose();\n            const newTabbar = find(parent.tabBars(), tabbar => !!tabbar.titles.find(title => title === this.title));\n            if (this.lastTabbar && this.lastTabbar !== newTabbar) {\n                this.convertToNonPreview();\n            } else {\n                this.lastTabbar = newTabbar;\n                const listener = () => this.checkForTabbarChange();\n                parent.layoutModified.connect(listener);\n                this.toDisposeOnLocationChange.push(Disposable.create(() => parent.layoutModified.disconnect(listener)));\n            }\n        }\n    }\n\n    storeState(): { isPreview: boolean, editorState: object } {\n        const { _isPreview: isPreview } = this;\n        return { isPreview, editorState: this.editor.storeViewState() };\n    }\n\n    restoreState(oldState: { isPreview: boolean, editorState: object }): void {\n        if (!oldState.isPreview) {\n            this.convertToNonPreview();\n        }\n        this.editor.restoreViewState(oldState.editorState);\n    }\n}\n","import api from \"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":[],"sourceRoot":""}