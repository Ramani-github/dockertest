{"version":3,"file":"vendors-node_modules_theia_core_shared_vscode-languageserver-protocol_index_js-node_modules_t-9a1e0c.bundle.js","mappings":"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","sources":["webpack:///../node_modules/@theia/core/shared/vscode-languageserver-protocol/index.js?","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-contribution.ts?","webpack:///../node_modules/@theia/navigator/src/browser/navigator-decorator-service.ts?","webpack:///../node_modules/@theia/variable-resolver/src/browser/index.ts?"],"sourcesContent":["module.exports = require('vscode-languageserver-protocol');\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport debounce = require('@theia/core/shared/lodash.debounce');\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { FrontendApplication, FrontendApplicationContribution, CompositeTreeNode, SelectableTreeNode, Widget, codicon } from '@theia/core/lib/browser';\nimport { StatusBar, StatusBarAlignment } from '@theia/core/lib/browser/status-bar/status-bar';\nimport { AbstractViewContribution } from '@theia/core/lib/browser/shell/view-contribution';\nimport { PROBLEM_KIND, ProblemMarker } from '../../common/problem-marker';\nimport { ProblemManager, ProblemStat } from './problem-manager';\nimport { ProblemWidget, PROBLEMS_WIDGET_ID } from './problem-widget';\nimport { MenuPath, MenuModelRegistry } from '@theia/core/lib/common/menu';\nimport { Command, CommandRegistry } from '@theia/core/lib/common/command';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { SelectionService } from '@theia/core/lib/common/selection-service';\nimport { ProblemSelection } from './problem-selection';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport const PROBLEMS_CONTEXT_MENU: MenuPath = [PROBLEM_KIND];\n\nexport namespace ProblemsMenu {\n    export const CLIPBOARD = [...PROBLEMS_CONTEXT_MENU, '1_clipboard'];\n    export const PROBLEMS = [...PROBLEMS_CONTEXT_MENU, '2_problems'];\n}\n\nexport namespace ProblemsCommands {\n    export const COLLAPSE_ALL: Command = {\n        id: 'problems.collapse.all'\n    };\n    export const COLLAPSE_ALL_TOOLBAR: Command = {\n        id: 'problems.collapse.all.toolbar',\n        iconClass: codicon('collapse-all')\n    };\n    export const COPY: Command = {\n        id: 'problems.copy'\n    };\n    export const COPY_MESSAGE: Command = {\n        id: 'problems.copy.message',\n    };\n    export const CLEAR_ALL = Command.toLocalizedCommand({\n        id: 'problems.clear.all',\n        category: 'Problems',\n        label: 'Clear All',\n        iconClass: codicon('clear-all')\n    }, 'theia/markers/clearAll', nls.getDefaultKey('Problems'));\n}\n\n@injectable()\nexport class ProblemContribution extends AbstractViewContribution<ProblemWidget> implements FrontendApplicationContribution, TabBarToolbarContribution {\n\n    @inject(ProblemManager) protected readonly problemManager: ProblemManager;\n    @inject(StatusBar) protected readonly statusBar: StatusBar;\n    @inject(SelectionService) protected readonly selectionService: SelectionService;\n\n    constructor() {\n        super({\n            widgetId: PROBLEMS_WIDGET_ID,\n            widgetName: nls.localizeByDefault('Problems'),\n            defaultWidgetOptions: {\n                area: 'bottom'\n            },\n            toggleCommandId: 'problemsView:toggle',\n            toggleKeybinding: 'ctrlcmd+shift+m'\n        });\n    }\n\n    onStart(app: FrontendApplication): void {\n        this.updateStatusBarElement();\n        this.problemManager.onDidChangeMarkers(this.updateStatusBarElement);\n    }\n\n    async initializeLayout(app: FrontendApplication): Promise<void> {\n        await this.openView();\n    }\n\n    protected updateStatusBarElement = debounce(() => this.setStatusBarElement(this.problemManager.getProblemStat()), 10);\n    protected setStatusBarElement(problemStat: ProblemStat): void {\n        this.statusBar.setElement('problem-marker-status', {\n            text: problemStat.infos <= 0\n                ? `$(codicon-error) ${problemStat.errors} $(codicon-warning) ${problemStat.warnings}`\n                : `$(codicon-error) ${problemStat.errors} $(codicon-warning) ${problemStat.warnings} $(codicon-info) ${problemStat.infos}`,\n            alignment: StatusBarAlignment.LEFT,\n            priority: 10,\n            command: this.toggleCommand ? this.toggleCommand.id : undefined,\n            tooltip: this.getStatusBarTooltip(problemStat)\n        });\n    }\n\n    /**\n     * Get the tooltip to be displayed when hovering over the problem statusbar item.\n     * - Displays `No Problems` when no problems are present.\n     * - Displays a human-readable label which describes for each type of problem stat properties,\n     * their overall count and type when any one of these properties has a positive count.\n     * @param stat the problem stat describing the number of `errors`, `warnings` and `infos`.\n     *\n     * @return the tooltip to be displayed in the statusbar.\n     */\n    protected getStatusBarTooltip(stat: ProblemStat): string {\n        if (stat.errors <= 0 && stat.warnings <= 0 && stat.infos <= 0) {\n            return nls.localizeByDefault('No Problems');\n        }\n        const localize = (text: string, value: number): string => nls.localize(`vscode/markers.contribution/total${text}`, `{0} ${text}`, value.toString());\n        const tooltip: string[] = [];\n        if (stat.errors > 0) {\n            tooltip.push(localize('Errors', stat.errors));\n        }\n        if (stat.warnings > 0) {\n            tooltip.push(localize('Warnings', stat.warnings));\n        }\n        if (stat.infos > 0) {\n            tooltip.push(localize('Infos', stat.infos));\n        }\n        return tooltip.join(', ');\n\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        super.registerCommands(commands);\n        commands.registerCommand(ProblemsCommands.COLLAPSE_ALL, {\n            execute: () => this.collapseAllProblems()\n        });\n        commands.registerCommand(ProblemsCommands.COLLAPSE_ALL_TOOLBAR, {\n            isEnabled: widget => this.withWidget(widget, () => true),\n            isVisible: widget => this.withWidget(widget, () => true),\n            execute: widget => this.withWidget(widget, () => this.collapseAllProblems())\n        });\n        commands.registerCommand(ProblemsCommands.COPY,\n            new ProblemSelection.CommandHandler(this.selectionService, {\n                multi: false,\n                isEnabled: () => true,\n                isVisible: () => true,\n                execute: selection => this.copy(selection)\n            })\n        );\n        commands.registerCommand(ProblemsCommands.COPY_MESSAGE,\n            new ProblemSelection.CommandHandler(this.selectionService, {\n                multi: false,\n                isEnabled: () => true,\n                isVisible: () => true,\n                execute: selection => this.copyMessage(selection)\n            })\n        );\n        commands.registerCommand(ProblemsCommands.CLEAR_ALL, {\n            isEnabled: widget => this.withWidget(widget, () => true),\n            isVisible: widget => this.withWidget(widget, () => true),\n            execute: widget => this.withWidget(widget, () => this.problemManager.cleanAllMarkers())\n        });\n    }\n\n    registerMenus(menus: MenuModelRegistry): void {\n        super.registerMenus(menus);\n        menus.registerMenuAction(ProblemsMenu.CLIPBOARD, {\n            commandId: ProblemsCommands.COPY.id,\n            label: nls.localizeByDefault('Copy'),\n            order: '0'\n        });\n        menus.registerMenuAction(ProblemsMenu.CLIPBOARD, {\n            commandId: ProblemsCommands.COPY_MESSAGE.id,\n            label: nls.localizeByDefault('Copy Message'),\n            order: '1'\n        });\n        menus.registerMenuAction(ProblemsMenu.PROBLEMS, {\n            commandId: ProblemsCommands.COLLAPSE_ALL.id,\n            label: nls.localizeByDefault('Collapse All'),\n            order: '2'\n        });\n    }\n\n    async registerToolbarItems(toolbarRegistry: TabBarToolbarRegistry): Promise<void> {\n        toolbarRegistry.registerItem({\n            id: ProblemsCommands.COLLAPSE_ALL_TOOLBAR.id,\n            command: ProblemsCommands.COLLAPSE_ALL_TOOLBAR.id,\n            tooltip: nls.localizeByDefault('Collapse All'),\n            priority: 0,\n        });\n        toolbarRegistry.registerItem({\n            id: ProblemsCommands.CLEAR_ALL.id,\n            command: ProblemsCommands.CLEAR_ALL.id,\n            tooltip: ProblemsCommands.CLEAR_ALL.label,\n            priority: 1,\n        });\n    }\n\n    protected async collapseAllProblems(): Promise<void> {\n        const { model } = await this.widget;\n        const root = model.root as CompositeTreeNode;\n        const firstChild = root.children[0];\n        root.children.forEach(child => CompositeTreeNode.is(child) && model.collapseAll(child));\n        if (SelectableTreeNode.is(firstChild)) {\n            model.selectNode(firstChild);\n        }\n    }\n\n    protected addToClipboard(content: string): void {\n        const handleCopy = (e: ClipboardEvent) => {\n            document.removeEventListener('copy', handleCopy);\n            if (e.clipboardData) {\n                e.clipboardData.setData('text/plain', content);\n                e.preventDefault();\n            }\n        };\n        document.addEventListener('copy', handleCopy);\n        document.execCommand('copy');\n    }\n\n    protected copy(selection: ProblemSelection): void {\n        const marker = selection.marker as ProblemMarker;\n        const serializedProblem = JSON.stringify({\n            resource: marker.uri,\n            owner: marker.owner,\n            code: marker.data.code,\n            severity: marker.data.severity,\n            message: marker.data.message,\n            source: marker.data.source,\n            startLineNumber: marker.data.range.start.line,\n            startColumn: marker.data.range.start.character,\n            endLineNumber: marker.data.range.end.line,\n            endColumn: marker.data.range.end.character\n        }, undefined, '\\t');\n\n        this.addToClipboard(serializedProblem);\n    }\n\n    protected copyMessage(selection: ProblemSelection): void {\n        const marker = selection.marker as ProblemMarker;\n        this.addToClipboard(marker.data.message);\n    }\n\n    protected withWidget<T>(widget: Widget | undefined = this.tryGetWidget(), cb: (problems: ProblemWidget) => T): T | false {\n        if (widget instanceof ProblemWidget && widget.id === PROBLEMS_WIDGET_ID) {\n            return cb(widget);\n        }\n        return false;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, named } from '@theia/core/shared/inversify';\nimport { ContributionProvider } from '@theia/core/lib/common/contribution-provider';\nimport { TreeDecorator, AbstractTreeDecoratorService } from '@theia/core/lib/browser/tree/tree-decorator';\n\n/**\n * Symbol for all decorators that would like to contribute into the navigator.\n */\nexport const NavigatorTreeDecorator = Symbol('NavigatorTreeDecorator');\n\n/**\n * Decorator service for the navigator.\n */\n@injectable()\nexport class NavigatorDecoratorService extends AbstractTreeDecoratorService {\n\n    constructor(@inject(ContributionProvider) @named(NavigatorTreeDecorator) protected readonly contributions: ContributionProvider<TreeDecorator>) {\n        super(contributions.getContributions());\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './variable';\nexport * from './variable-quick-open-service';\nexport * from './variable-resolver-service';\n"],"names":[],"sourceRoot":""}