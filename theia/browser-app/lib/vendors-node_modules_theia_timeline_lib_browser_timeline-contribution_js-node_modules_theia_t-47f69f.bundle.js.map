{"version":3,"file":"vendors-node_modules_theia_timeline_lib_browser_timeline-contribution_js-node_modules_theia_t-47f69f.bundle.js","mappings":"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","sources":["webpack:///../node_modules/@theia/core/shared/@phosphor/algorithm/index.js?","webpack:///../node_modules/@theia/timeline/src/browser/timeline-context-key-service.ts?","webpack:///../node_modules/@theia/timeline/src/browser/timeline-contribution.ts?","webpack:///../node_modules/@theia/timeline/src/browser/timeline-empty-widget.tsx?","webpack:///../node_modules/@theia/timeline/src/browser/timeline-service.ts?","webpack:///../node_modules/@theia/timeline/src/browser/timeline-tree-model.ts?","webpack:///../node_modules/@theia/timeline/src/browser/timeline-tree-widget.tsx?","webpack:///../node_modules/@theia/timeline/src/browser/timeline-widget.tsx?"],"sourcesContent":["module.exports = require('@phosphor/algorithm');\n","/********************************************************************************\n * Copyright (C) 2020 RedHat and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { ContextKeyService, ContextKey } from '@theia/core/lib/browser/context-key-service';\n\n@injectable()\nexport class TimelineContextKeyService {\n\n    @inject(ContextKeyService)\n    protected readonly contextKeyService: ContextKeyService;\n\n    protected _timelineItem: ContextKey<string | undefined>;\n    get timelineItem(): ContextKey<string | undefined> {\n        return this._timelineItem;\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this._timelineItem = this.contextKeyService.createKey<string | undefined>('timelineItem', undefined);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2020 RedHat and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport {\n    ViewContainer,\n    WidgetManager,\n    Widget,\n    ApplicationShell,\n    Navigatable,\n    codicon\n} from '@theia/core/lib/browser';\nimport { EXPLORER_VIEW_CONTAINER_ID } from '@theia/navigator/lib/browser';\nimport { TimelineWidget } from './timeline-widget';\nimport { TimelineService } from './timeline-service';\nimport { Command, CommandContribution, CommandRegistry } from '@theia/core/lib/common';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { toArray } from '@theia/core/shared/@phosphor/algorithm';\n\n@injectable()\nexport class TimelineContribution implements CommandContribution, TabBarToolbarContribution {\n\n    @inject(WidgetManager)\n    protected readonly widgetManager: WidgetManager;\n    @inject(TimelineService)\n    protected readonly timelineService: TimelineService;\n    @inject(CommandRegistry)\n    protected readonly commandRegistry: CommandRegistry;\n    @inject(TabBarToolbarRegistry)\n    protected readonly tabBarToolbar: TabBarToolbarRegistry;\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    public static readonly LOAD_MORE_COMMAND: Command = {\n        id: 'timeline-load-more'\n    };\n    private readonly toolbarItem = {\n        id: 'timeline-refresh-toolbar-item',\n        command: 'timeline-refresh',\n        tooltip: 'Refresh',\n        icon: codicon('refresh')\n    };\n    registerToolbarItems(registry: TabBarToolbarRegistry): void {\n        registry.registerItem(this.toolbarItem);\n    }\n    registerCommands(commands: CommandRegistry): void {\n        const attachTimeline = async (explorer: Widget) => {\n            const timeline = await this.widgetManager.getOrCreateWidget(TimelineWidget.ID);\n            if (explorer instanceof ViewContainer && explorer.getTrackableWidgets().indexOf(timeline) === -1) {\n                explorer.addWidget(timeline, { initiallyCollapsed: true });\n            }\n        };\n        this.widgetManager.onWillCreateWidget(async event => {\n            if (event.widget.id === EXPLORER_VIEW_CONTAINER_ID && this.timelineService.getSources().length > 0) {\n                event.waitUntil(attachTimeline(event.widget));\n            }\n        });\n        this.timelineService.onDidChangeProviders(async event => {\n            const explorer = await this.widgetManager.getWidget(EXPLORER_VIEW_CONTAINER_ID);\n            if (explorer && event.added && event.added.length > 0) {\n                attachTimeline(explorer);\n            } else if (event.removed && this.timelineService.getSources().length === 0) {\n                const timeline = await this.widgetManager.getWidget(TimelineWidget.ID);\n                if (timeline) {\n                    timeline.close();\n                }\n            }\n        });\n        commands.registerCommand(TimelineContribution.LOAD_MORE_COMMAND, {\n            execute: async () => {\n                const widget = toArray(this.shell.mainPanel.widgets()).find(w => Navigatable.is(w) && w.isVisible && !w.isHidden);\n                if (Navigatable.is(widget)) {\n                    const uri = widget.getResourceUri();\n                    const timeline = await this.widgetManager.getWidget<TimelineWidget>(TimelineWidget.ID);\n                    if (uri && timeline) {\n                        timeline.loadTimeline(uri, false);\n                    }\n                }\n            }\n        });\n        commands.registerCommand({ id: this.toolbarItem.command }, {\n            execute: widget => this.checkWidget(widget, async () => {\n                const timeline = await this.widgetManager.getWidget(TimelineWidget.ID);\n                if (timeline) {\n                    timeline.update();\n                }\n            }),\n            isEnabled: widget => this.checkWidget(widget, () => true),\n            isVisible: widget => this.checkWidget(widget, () => true)\n        });\n    }\n\n    private checkWidget<T>(widget: Widget, cb: () => T): T | false {\n        if (widget instanceof TimelineWidget && widget.id === TimelineWidget.ID) {\n            return cb();\n        }\n        return false;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2020 RedHat and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { ReactWidget } from '@theia/core/lib/browser';\nimport { AlertMessage } from '@theia/core/lib/browser/widgets/alert-message';\nimport * as React from '@theia/core/shared/react';\n\n@injectable()\nexport class TimelineEmptyWidget extends ReactWidget {\n\n    static ID = 'timeline-empty-widget';\n\n    constructor() {\n        super();\n        this.addClass('theia-timeline-empty');\n        this.id = TimelineEmptyWidget.ID;\n    }\n\n    protected render(): React.ReactNode {\n        return <AlertMessage\n            type='WARNING'\n            header='The active editor cannot provide timeline information.'\n        />;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2020 RedHat and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { Disposable, Emitter, Event } from '@theia/core/lib/common';\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport {\n    InternalTimelineOptions,\n    Timeline,\n    TimelineChangeEvent, TimelineItem, TimelineOptions,\n    TimelineProvider,\n    TimelineProvidersChangeEvent,\n    TimelineSource\n} from '../common/timeline-model';\n\n@injectable()\nexport class TimelineService {\n    private readonly providers = new Map<string, TimelineProvider>();\n\n    private readonly onDidChangeProvidersEmitter = new Emitter<TimelineProvidersChangeEvent>();\n    readonly onDidChangeProviders: Event<TimelineProvidersChangeEvent> = this.onDidChangeProvidersEmitter.event;\n\n    private readonly onDidChangeTimelineEmitter = new Emitter<TimelineChangeEvent>();\n    readonly onDidChangeTimeline: Event<TimelineChangeEvent> = this.onDidChangeTimelineEmitter.event;\n\n    registerTimelineProvider(provider: TimelineProvider): Disposable {\n        const id = provider.id;\n\n        this.providers.set(id, provider);\n        if (provider.onDidChange) {\n            provider.onDidChange(e => this.onDidChangeTimelineEmitter.fire(e));\n        }\n        this.onDidChangeProvidersEmitter.fire({ added: [id] });\n\n        return Disposable.create(() => this.unregisterTimelineProvider(id));\n    }\n\n    unregisterTimelineProvider(id: string): void {\n        const provider = this.providers.get(id);\n        if (provider) {\n            provider.dispose();\n            this.providers.delete(id);\n            this.onDidChangeProvidersEmitter.fire({ removed: [id] });\n        }\n    }\n\n    getSources(): TimelineSource[] {\n        return [...this.providers.values()].map(p => ({ id: p.id, label: p.label }));\n    }\n\n    getSchemas(): string[] {\n        const result: string[] = [];\n        Array.from(this.providers.values()).forEach(provider => {\n            const scheme = provider.scheme;\n            if (typeof scheme === 'string') {\n                result.push(scheme);\n            } else {\n                scheme.forEach(s => result.push(s));\n            }\n        });\n        return result;\n    }\n\n    getTimeline(id: string, uri: URI, options: TimelineOptions, internalOptions?: InternalTimelineOptions): Promise<Timeline | undefined> {\n        const provider = this.providers.get(id);\n        if (!provider) {\n            return Promise.resolve(undefined);\n        }\n\n        if (typeof provider.scheme === 'string') {\n            if (provider.scheme !== '*' && provider.scheme !== uri.scheme) {\n                return Promise.resolve(undefined);\n            }\n        }\n\n        return provider.provideTimeline(uri, options, internalOptions)\n            .then(result => {\n                if (!result) {\n                    return undefined;\n                }\n                result.items = result.items.map(item => ({ ...item, source: provider.id }));\n                return result;\n            });\n    }\n}\n\nexport class TimelineAggregate {\n    readonly items: TimelineItem[];\n    readonly source: string;\n    readonly uri: string;\n\n    private _cursor?: string;\n    get cursor(): string | undefined {\n        return this._cursor;\n    }\n\n    set cursor(cursor: string | undefined) {\n        this._cursor = cursor;\n    }\n\n    constructor(timeline: Timeline) {\n        this.source = timeline.source;\n        this.items = timeline.items;\n        this._cursor = timeline.paging?.cursor;\n    }\n\n    add(items: TimelineItem[]): void {\n        this.items.push(...items);\n        this.items.sort((a, b) => b.timestamp - a.timestamp);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2020 RedHat and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport {\n    CompositeTreeNode,\n    SelectableTreeNode,\n    TreeModelImpl,\n} from '@theia/core/lib/browser/tree';\nimport { TimelineItem } from '../common/timeline-model';\nimport { TimelineContribution } from './timeline-contribution';\n\nexport interface TimelineNode extends SelectableTreeNode {\n    timelineItem: TimelineItem;\n}\n\n@injectable()\nexport class TimelineTreeModel extends TreeModelImpl {\n\n    updateTree(items: TimelineItem[], hasMoreItems: boolean): void {\n        const root = {\n            id: 'timeline-tree-root',\n            parent: undefined,\n            visible: false,\n            children: []\n        } as CompositeTreeNode;\n        const children = items.map(item =>\n        ({\n            timelineItem: item,\n            id: item.id ? item.id : item.timestamp.toString(),\n            parent: root,\n            detail: item.detail,\n            selected: false,\n            visible: true\n        } as TimelineNode)\n        );\n        let loadMore;\n        if (hasMoreItems) {\n            const loadMoreNode: TimelineItem = { label: 'Load-more', timestamp: 0, handle: '', uri: '', source: '' };\n            loadMoreNode.command = TimelineContribution.LOAD_MORE_COMMAND;\n            loadMore = {\n                timelineItem: loadMoreNode,\n                id: 'load-more',\n                parent: root,\n                selected: true\n            } as TimelineNode;\n            children.push(loadMore);\n        }\n        root.children = children;\n        this.root = root;\n        if (loadMore) {\n            this.selectionService.addSelection(loadMore);\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2020 RedHat and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { CommandRegistry, MenuModelRegistry, MenuPath } from '@theia/core/lib/common';\nimport { TreeWidget, TreeProps, NodeProps, TREE_NODE_SEGMENT_GROW_CLASS } from '@theia/core/lib/browser/tree';\nimport { ContextMenuRenderer } from '@theia/core/lib/browser';\nimport { TimelineNode, TimelineTreeModel } from './timeline-tree-model';\nimport { TimelineService } from './timeline-service';\nimport { TimelineContextKeyService } from './timeline-context-key-service';\nimport * as React from '@theia/core/shared/react';\nimport { TimelineItem } from '../common/timeline-model';\n\nexport const TIMELINE_ITEM_CONTEXT_MENU: MenuPath = ['timeline-item-context-menu'];\n\n@injectable()\nexport class TimelineTreeWidget extends TreeWidget {\n\n    static ID = 'timeline-tree-widget';\n    static PAGE_SIZE = 20;\n\n    @inject(MenuModelRegistry) protected readonly menus: MenuModelRegistry;\n    @inject(TimelineContextKeyService) protected readonly contextKeys: TimelineContextKeyService;\n\n    constructor(\n        @inject(TreeProps) readonly props: TreeProps,\n        @inject(TimelineService) protected readonly timelineService: TimelineService,\n        @inject(TimelineTreeModel) readonly model: TimelineTreeModel,\n        @inject(ContextMenuRenderer) protected readonly contextMenuRenderer: ContextMenuRenderer,\n        @inject(CommandRegistry) protected readonly commandRegistry: CommandRegistry\n    ) {\n        super(props, model, contextMenuRenderer);\n        this.id = TimelineTreeWidget.ID;\n        this.addClass('timeline-outer-container');\n    }\n\n    protected renderNode(node: TimelineNode, props: NodeProps): React.ReactNode {\n        const attributes = this.createNodeAttributes(node, props);\n        const content = <TimelineItemNode\n            timelineItem={node.timelineItem}\n            commandRegistry={this.commandRegistry}\n            contextKeys={this.contextKeys}\n            contextMenuRenderer={this.contextMenuRenderer}/>;\n        return React.createElement('div', attributes, content);\n    }\n\n    protected handleEnter(event: KeyboardEvent): void {\n        const node = this.model.selectedNodes[0] as TimelineNode;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const command: any = node.timelineItem.command;\n        if (command) {\n            this.commandRegistry.executeCommand(command.id, ...command.arguments ? command.arguments : []);\n        }\n    }\n\n    protected async handleLeft(event: KeyboardEvent): Promise<void> {\n        this.model.selectPrevNode();\n    }\n}\n\nexport namespace TimelineItemNode {\n    export interface Props {\n        timelineItem: TimelineItem;\n        commandRegistry: CommandRegistry;\n        contextKeys: TimelineContextKeyService;\n        contextMenuRenderer: ContextMenuRenderer;\n    }\n}\n\nexport class TimelineItemNode extends React.Component<TimelineItemNode.Props> {\n    render(): JSX.Element | undefined {\n        const { label, description, detail } = this.props.timelineItem;\n        return <div className='timeline-item'\n                    title={detail}\n                    onContextMenu={this.renderContextMenu}\n                    onClick={this.open}>\n            <div className={`noWrapInfo ${TREE_NODE_SEGMENT_GROW_CLASS}`} >\n                <span className='name'>{label}</span>\n                <span className='label'>{description}</span>\n            </div>\n        </div>;\n    }\n\n    protected open = () => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const command: any = this.props.timelineItem.command;\n        if (command) {\n            this.props.commandRegistry.executeCommand(command.id, ...command.arguments ? command.arguments : []);\n        }\n    };\n\n    protected renderContextMenu = (event: React.MouseEvent<HTMLElement>) => {\n        event.preventDefault();\n        event.stopPropagation();\n        const { timelineItem, contextKeys, contextMenuRenderer } = this.props;\n        const currentTimelineItem = contextKeys.timelineItem.get();\n        contextKeys.timelineItem.set(timelineItem.contextValue);\n        try {\n            contextMenuRenderer.render({\n                menuPath: TIMELINE_ITEM_CONTEXT_MENU,\n                anchor: event.nativeEvent,\n                args: [timelineItem]\n            });\n        } finally {\n            contextKeys.timelineItem.set(currentTimelineItem);\n        }\n    };\n}\n","/********************************************************************************\n * Copyright (C) 2020 RedHat and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Message } from '@theia/core/shared/@phosphor/messaging';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport {\n    ApplicationShell,\n    BaseWidget,\n    MessageLoop, Navigatable,\n    NavigatableWidget,\n    Panel,\n    PanelLayout\n} from '@theia/core/lib/browser';\nimport { TimelineTreeWidget } from './timeline-tree-widget';\nimport { TimelineService, TimelineAggregate } from './timeline-service';\nimport { CommandRegistry, SelectionService } from '@theia/core/lib/common';\nimport { TimelineEmptyWidget } from './timeline-empty-widget';\nimport { toArray } from '@theia/core/shared/@phosphor/algorithm';\nimport URI from '@theia/core/lib/common/uri';\nimport { URI as CodeURI } from '@theia/core/shared/vscode-uri';\n\n@injectable()\nexport class TimelineWidget extends BaseWidget {\n\n    protected panel: Panel;\n    static ID = 'timeline-view';\n\n    private readonly timelinesBySource = new Map<string, TimelineAggregate>();\n\n    @inject(TimelineTreeWidget) protected readonly resourceWidget: TimelineTreeWidget;\n    @inject(TimelineService) protected readonly timelineService: TimelineService;\n    @inject(CommandRegistry) protected readonly commandRegistry: CommandRegistry;\n    @inject(ApplicationShell) protected readonly applicationShell: ApplicationShell;\n    @inject(TimelineEmptyWidget) protected readonly timelineEmptyWidget: TimelineEmptyWidget;\n    @inject(SelectionService) protected readonly selectionService: SelectionService;\n\n    constructor() {\n        super();\n        this.id = TimelineWidget.ID;\n        this.title.label = 'Timeline';\n        this.title.caption = this.title.label;\n        this.addClass('theia-timeline');\n    }\n\n    @postConstruct()\n    protected init(): void {\n        const layout = new PanelLayout();\n        this.layout = layout;\n        this.panel = new Panel({ layout: new PanelLayout({}) });\n        this.panel.node.tabIndex = -1;\n        layout.addWidget(this.panel);\n        this.containerLayout!.addWidget(this.resourceWidget);\n        this.containerLayout!.addWidget(this.timelineEmptyWidget);\n\n        this.refresh();\n        this.toDispose.push(this.timelineService.onDidChangeTimeline(event => {\n            const currentWidgetUri = this.getCurrentWidgetUri();\n            if (currentWidgetUri) {\n                this.loadTimeline(currentWidgetUri, event.reset);\n            }\n        })\n        );\n        this.toDispose.push(this.selectionService.onSelectionChanged(selection => {\n            if (Array.isArray(selection) && !!selection[0] && 'uri' in selection[0]) {\n                this.refresh(selection[0].uri);\n            }\n        }));\n        this.toDispose.push(this.applicationShell.onDidChangeCurrentWidget(async e => {\n            if ((e.newValue && Navigatable.is(e.newValue)) || !this.suitableWidgetsOpened()) {\n                this.refresh();\n            }\n        }));\n        this.toDispose.push(this.applicationShell.onDidRemoveWidget(widget => {\n            if (NavigatableWidget.is(widget)) {\n                this.refresh();\n            }\n        }));\n        this.toDispose.push(this.timelineService.onDidChangeProviders(() => this.refresh()));\n    }\n\n    protected async loadTimelineForSource(source: string, uri: CodeURI, reset: boolean): Promise<void> {\n        if (reset) {\n            this.timelinesBySource.delete(source);\n        }\n        let timeline = this.timelinesBySource.get(source);\n        const cursor = timeline?.cursor;\n        const options = { cursor: reset ? undefined : cursor, limit: TimelineTreeWidget.PAGE_SIZE };\n        const timelineResult = await this.timelineService.getTimeline(source, uri, options, { cacheResults: true, resetCache: reset });\n        if (timelineResult) {\n            const items = timelineResult.items;\n            if (items) {\n                if (timeline) {\n                    timeline.add(items);\n                    timeline.cursor = timelineResult.paging?.cursor;\n                } else {\n                    timeline = new TimelineAggregate(timelineResult);\n                }\n                this.timelinesBySource.set(source, timeline);\n                this.resourceWidget.model.updateTree(timeline.items, !!timeline.cursor);\n            }\n        }\n    }\n\n    async loadTimeline(uri: URI, reset: boolean): Promise<void> {\n        for (const source of this.timelineService.getSources().map(s => s.id)) {\n            this.loadTimelineForSource(source, CodeURI.parse(uri.toString()), reset);\n        }\n    }\n\n    refresh(uri?: URI): void {\n        if (!uri) {\n            uri = this.getCurrentWidgetUri();\n        }\n        if (uri) {\n            this.timelineEmptyWidget.hide();\n            this.resourceWidget.show();\n            this.loadTimeline(uri, true);\n        } else if (!this.suitableWidgetsOpened()) {\n            this.timelineEmptyWidget.show();\n            this.resourceWidget.hide();\n        }\n    }\n\n    private suitableWidgetsOpened(): boolean {\n        return !!toArray(this.applicationShell.mainPanel.widgets()).find(widget => {\n            if (NavigatableWidget.is(widget)) {\n                const uri = widget.getResourceUri();\n                if (uri?.scheme && this.timelineService.getSchemas().indexOf(uri?.scheme) > -1) {\n                    return true;\n                }\n            }\n        });\n    }\n\n    private getCurrentWidgetUri(): URI | undefined {\n        let current = this.applicationShell.currentWidget;\n        if (!NavigatableWidget.is(current)) {\n            current = toArray(this.applicationShell.mainPanel.widgets()).find(widget => {\n                if (widget.isVisible && !widget.isHidden) {\n                    return widget;\n                }\n            });\n        }\n        return NavigatableWidget.is(current) ? current.getResourceUri() : undefined;\n    }\n\n    protected get containerLayout(): PanelLayout | undefined {\n        return this.panel.layout as PanelLayout;\n    }\n\n    protected onUpdateRequest(msg: Message): void {\n        MessageLoop.sendMessage(this.resourceWidget, msg);\n        MessageLoop.sendMessage(this.timelineEmptyWidget, msg);\n        this.refresh();\n        super.onUpdateRequest(msg);\n    }\n\n    protected onAfterAttach(msg: Message): void {\n        this.node.appendChild(this.resourceWidget.node);\n        this.node.appendChild(this.timelineEmptyWidget.node);\n        super.onAfterAttach(msg);\n        this.update();\n    }\n\n}\n"],"names":[],"sourceRoot":""}