{"version":3,"file":"vendors-node_modules_theia_markers_lib_browser_problem_problem-frontend-module_js.bundle.js","mappings":"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","sources":["webpack:///../node_modules/@theia/markers/src/browser/style/index.css?../node_modules/css-loader/dist/cjs.js","webpack:///../node_modules/@theia/markers/src/browser/marker-tree-label-provider.ts?","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-container.ts?","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-decorator.ts?","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-frontend-module.ts?","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-layout-migrations.ts?","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-tabbar-decorator.ts?","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-widget-tab-bar-decorator.ts?","webpack:///../node_modules/@theia/markers/src/browser/style/index.css?"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2017 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-marker-container {\\n    font-size: var(--theia-ui-font-size1);\\n}\\n\\n.theia-side-panel .theia-marker-container .noMarkers {\\n    padding-left: 19px;\\n}\\n\\n.theia-marker-container .markerNode,\\n.theia-marker-container .markerFileNode {\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.theia-marker-container .markerNode div,\\n.theia-marker-container .markerFileNode div:not(.file-icon) {\\n    display: flex;\\n    margin-right: 5px;\\n}\\n\\n.theia-marker-container .markerFileNode .name,\\n.theia-marker-container .markerFileNode .path {\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n}\\n\\n.theia-marker-container .markerFileNode .path {\\n    font-size: var(--theia-ui-font-size0);\\n    align-self: flex-end;\\n    white-space: nowrap;\\n}\\n\\n.theia-marker-container .error {\\n    color: var(--theia-editorError-foreground);\\n    opacity: 1;\\n}\\n\\n.theia-marker-container .warning {\\n    color: var(--theia-editorWarning-foreground);\\n    opacity: 1;\\n}\\n\\n.theia-marker-container .information {\\n    color: var(--theia-editorInfo-foreground);\\n    opacity: 1;\\n}\\n\\n.theia-marker-container .hint {\\n    color: var(--theia-successBackground);\\n    opacity: 1;\\n}\\n\\n.theia-marker-container .markerNode .position,\\n.theia-marker-container .markerNode .owner {\\n    white-space: nowrap;\\n    margin-left: 5px;\\n}\\n\\n.theia-marker-container .markerNode .message {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n}\\n\\n.theia-marker-container .row-button-container {\\n    display: none;\\n}\\n\\n.theia-marker-container .theia-TreeNodeContent:hover .row-button-container {\\n    display: flex;\\n    justify-content: flex-end;\\n    flex: 1;\\n    align-items: center;\\n    align-self: center;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./../node_modules/@theia/markers/src/browser/style/index.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;IACI,qCAAqC;AACzC;;AAEA;IACI,kBAAkB;AACtB;;AAEA;;IAEI,aAAa;IACb,mBAAmB;AACvB;;AAEA;;IAEI,aAAa;IACb,iBAAiB;AACrB;;AAEA;;IAEI,gBAAgB;IAChB,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,qCAAqC;IACrC,oBAAoB;IACpB,mBAAmB;AACvB;;AAEA;IACI,0CAA0C;IAC1C,UAAU;AACd;;AAEA;IACI,4CAA4C;IAC5C,UAAU;AACd;;AAEA;IACI,yCAAyC;IACzC,UAAU;AACd;;AAEA;IACI,qCAAqC;IACrC,UAAU;AACd;;AAEA;;IAEI,mBAAmB;IACnB,gBAAgB;AACpB;;AAEA;IACI,mBAAmB;IACnB,gBAAgB;IAChB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,OAAO;IACP,mBAAmB;IACnB,kBAAkB;AACtB\",\"sourcesContent\":[\"/********************************************************************************\\n * Copyright (C) 2017 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-marker-container {\\n    font-size: var(--theia-ui-font-size1);\\n}\\n\\n.theia-side-panel .theia-marker-container .noMarkers {\\n    padding-left: 19px;\\n}\\n\\n.theia-marker-container .markerNode,\\n.theia-marker-container .markerFileNode {\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.theia-marker-container .markerNode div,\\n.theia-marker-container .markerFileNode div:not(.file-icon) {\\n    display: flex;\\n    margin-right: 5px;\\n}\\n\\n.theia-marker-container .markerFileNode .name,\\n.theia-marker-container .markerFileNode .path {\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n}\\n\\n.theia-marker-container .markerFileNode .path {\\n    font-size: var(--theia-ui-font-size0);\\n    align-self: flex-end;\\n    white-space: nowrap;\\n}\\n\\n.theia-marker-container .error {\\n    color: var(--theia-editorError-foreground);\\n    opacity: 1;\\n}\\n\\n.theia-marker-container .warning {\\n    color: var(--theia-editorWarning-foreground);\\n    opacity: 1;\\n}\\n\\n.theia-marker-container .information {\\n    color: var(--theia-editorInfo-foreground);\\n    opacity: 1;\\n}\\n\\n.theia-marker-container .hint {\\n    color: var(--theia-successBackground);\\n    opacity: 1;\\n}\\n\\n.theia-marker-container .markerNode .position,\\n.theia-marker-container .markerNode .owner {\\n    white-space: nowrap;\\n    margin-left: 5px;\\n}\\n\\n.theia-marker-container .markerNode .message {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n}\\n\\n.theia-marker-container .row-button-container {\\n    display: none;\\n}\\n\\n.theia-marker-container .theia-TreeNodeContent:hover .row-button-container {\\n    display: flex;\\n    justify-content: flex-end;\\n    flex: 1;\\n    align-items: center;\\n    align-self: center;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { LabelProvider, LabelProviderContribution, DidChangeLabelEvent } from '@theia/core/lib/browser/label-provider';\nimport { MarkerInfoNode } from './marker-tree';\nimport { TreeLabelProvider } from '@theia/core/lib/browser/tree/tree-label-provider';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\n\n@injectable()\nexport class MarkerTreeLabelProvider implements LabelProviderContribution {\n\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    @inject(TreeLabelProvider)\n    protected readonly treeLabelProvider: TreeLabelProvider;\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    canHandle(element: object): number {\n        return MarkerInfoNode.is(element) ?\n            this.treeLabelProvider.canHandle(element) + 1 :\n            0;\n    }\n\n    getIcon(node: MarkerInfoNode): string {\n        return this.labelProvider.getIcon(node.uri);\n    }\n\n    getName(node: MarkerInfoNode): string {\n        return this.labelProvider.getName(node.uri);\n    }\n\n    getLongName(node: MarkerInfoNode): string {\n        const description: string[] = [];\n        const rootUri = this.workspaceService.getWorkspaceRootUri(node.uri);\n        // In a multiple-root workspace include the root name to the label before the parent directory.\n        if (this.workspaceService.isMultiRootWorkspaceOpened && rootUri) {\n            description.push(this.labelProvider.getName(rootUri));\n        }\n        // If the given resource is not at the workspace root, include the parent directory to the label.\n        if (rootUri && rootUri.toString() !== node.uri.parent.toString()) {\n            description.push(this.labelProvider.getLongName(node.uri.parent));\n        }\n        // Get the full path of a resource which does not exist in the given workspace.\n        if (!rootUri) {\n            description.push(this.labelProvider.getLongName(node.uri.parent.withScheme('markers')));\n        }\n        return description.join(' ● ');\n    }\n\n    getDescription(node: MarkerInfoNode): string {\n        return this.labelProvider.getLongName(node.uri.parent);\n    }\n\n    affects(node: MarkerInfoNode, event: DidChangeLabelEvent): boolean {\n        return event.affects(node.uri) || event.affects(node.uri.parent);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces, Container } from '@theia/core/shared/inversify';\nimport { MarkerOptions } from '../marker-tree';\nimport { ProblemWidget } from './problem-widget';\nimport { ProblemTreeModel, ProblemTree } from './problem-tree-model';\nimport { TreeWidget, TreeProps, defaultTreeProps, TreeModel, createTreeContainer, TreeModelImpl, TreeImpl, Tree } from '@theia/core/lib/browser';\nimport { PROBLEM_KIND } from '../../common/problem-marker';\n\nexport const PROBLEM_TREE_PROPS = <TreeProps>{\n    ...defaultTreeProps,\n    contextMenuPath: [PROBLEM_KIND],\n    globalSelection: true\n};\n\nexport const PROBLEM_OPTIONS = <MarkerOptions>{\n    kind: 'problem'\n};\n\nexport function createProblemTreeContainer(parent: interfaces.Container): Container {\n    const child = createTreeContainer(parent);\n\n    child.unbind(TreeImpl);\n    child.bind(ProblemTree).toSelf();\n    child.rebind(Tree).toService(ProblemTree);\n\n    child.unbind(TreeWidget);\n    child.bind(ProblemWidget).toSelf();\n\n    child.unbind(TreeModelImpl);\n    child.bind(ProblemTreeModel).toSelf();\n    child.rebind(TreeModel).toService(ProblemTreeModel);\n\n    child.rebind(TreeProps).toConstantValue(PROBLEM_TREE_PROPS);\n    child.bind(MarkerOptions).toConstantValue(PROBLEM_OPTIONS);\n    return child;\n}\n\nexport function createProblemWidget(parent: interfaces.Container): ProblemWidget {\n    return createProblemTreeContainer(parent).get(ProblemWidget);\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { Diagnostic, DiagnosticSeverity } from '@theia/core/shared/vscode-languageserver-protocol';\nimport URI from '@theia/core/lib/common/uri';\nimport { notEmpty } from '@theia/core/lib/common/objects';\nimport { Event, Emitter } from '@theia/core/lib/common/event';\nimport { Tree } from '@theia/core/lib/browser/tree/tree';\nimport { DepthFirstTreeIterator } from '@theia/core/lib/browser/tree/tree-iterator';\nimport { TreeDecorator, TreeDecoration } from '@theia/core/lib/browser/tree/tree-decorator';\nimport { FileStatNode } from '@theia/filesystem/lib/browser';\nimport { Marker } from '../../common/marker';\nimport { ProblemManager } from './problem-manager';\nimport { ProblemPreferences } from './problem-preferences';\nimport { ProblemUtils } from './problem-utils';\nimport { OpenEditorNode } from '@theia/navigator/lib/browser/open-editors-widget/navigator-open-editors-tree-model';\nimport { LabelProvider } from '@theia/core/lib/browser';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { WidgetDecoration } from '@theia/core/lib/browser/widget-decoration';\n\n@injectable()\nexport class ProblemDecorator implements TreeDecorator {\n\n    @inject(ProblemPreferences)\n    protected problemPreferences: ProblemPreferences;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n\n    readonly id = 'theia-problem-decorator';\n\n    protected readonly emitter: Emitter<(tree: Tree) => Map<string, TreeDecoration.Data>>;\n\n    constructor(@inject(ProblemManager) protected readonly problemManager: ProblemManager) {\n        this.emitter = new Emitter();\n        this.problemManager.onDidChangeMarkers(() => this.fireDidChangeDecorations((tree: Tree) => this.collectDecorators(tree)));\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.problemPreferences.onPreferenceChanged(event => {\n            if (event.preferenceName === 'problems.decorations.enabled') {\n                this.fireDidChangeDecorations(tree => this.collectDecorators(tree));\n            }\n        });\n        this.workspaceService.onWorkspaceChanged(() => {\n            this.fireDidChangeDecorations((tree: Tree) => this.collectDecorators(tree));\n        });\n        this.workspaceService.onWorkspaceLocationChanged(() => {\n            this.fireDidChangeDecorations((tree: Tree) => this.collectDecorators(tree));\n        });\n    }\n\n    async decorations(tree: Tree): Promise<Map<string, TreeDecoration.Data>> {\n        return this.collectDecorators(tree);\n    }\n\n    get onDidChangeDecorations(): Event<(tree: Tree) => Map<string, TreeDecoration.Data>> {\n        return this.emitter.event;\n    }\n\n    protected fireDidChangeDecorations(event: (tree: Tree) => Map<string, TreeDecoration.Data>): void {\n        this.emitter.fire(event);\n    }\n\n    protected collectDecorators(tree: Tree): Map<string, TreeDecoration.Data> {\n        const decorations = new Map<string, TreeDecoration.Data>();\n        // If the tree root is undefined or the preference for the decorations is disabled, return an empty result map.\n        if (tree.root === undefined || !this.problemPreferences['problems.decorations.enabled']) {\n            return decorations;\n        }\n        const markers = this.appendContainerMarkers(tree, this.collectMarkers(tree));\n        for (const node of new DepthFirstTreeIterator(tree.root)) {\n            const nodeUri = FileStatNode.getUri(node);\n            if (nodeUri) {\n                const marker = markers.get(nodeUri);\n                let decorator: TreeDecoration.Data | undefined;\n                if (marker) {\n                    decorator = this.toDecorator(marker);\n                }\n                if (OpenEditorNode.is(node)) {\n                    decorator = this.appendSuffixDecoration(node.uri, decorator);\n                }\n                if (decorator) {\n                    decorations.set(node.id, decorator);\n                }\n            }\n        }\n        return decorations;\n    }\n\n    protected appendSuffixDecoration(nodeURI: URI, existingDecorations?: TreeDecoration.Data): TreeDecoration.Data {\n        const workspaceAndPath = this.generateCaptionSuffix(nodeURI);\n        const color = existingDecorations?.fontData?.color;\n        const captionSuffix: WidgetDecoration.CaptionAffix = { data: workspaceAndPath };\n        if (color) {\n            Object.assign(captionSuffix, { fontData: { color } });\n        }\n        const suffixDecorations: TreeDecoration.Data = {\n            captionSuffixes: [captionSuffix]\n        };\n        const decorator = existingDecorations ?? {};\n        return Object.assign(decorator, suffixDecorations);\n    }\n\n    protected generateCaptionSuffix(nodeURI: URI): string {\n        const workspaceRoots = this.workspaceService.tryGetRoots();\n        const parentWorkspace = this.workspaceService.getWorkspaceRootUri(nodeURI);\n        let workspacePrefixString = '';\n        let separator = '';\n        let filePathString = '';\n        const nodeURIDir = nodeURI.parent;\n        if (parentWorkspace) {\n            const relativeDirFromWorkspace = parentWorkspace.relative(nodeURIDir);\n            workspacePrefixString = workspaceRoots.length > 1 ? this.labelProvider.getName(parentWorkspace) : '';\n            filePathString = relativeDirFromWorkspace?.toString() ?? '';\n            separator = filePathString && workspacePrefixString ? ' \\u2022 ' : ''; // add a bullet point between workspace and path\n        } else {\n            workspacePrefixString = nodeURIDir.path.toString();\n        }\n        return `${workspacePrefixString}${separator}${filePathString}`;\n    }\n\n    protected appendContainerMarkers(tree: Tree, markers: Marker<Diagnostic>[]): Map<string, Marker<Diagnostic>> {\n        const result: Map<string, Marker<Diagnostic>> = new Map();\n        // We traverse up and assign the diagnostic to the container directory.\n        // Note, instead of stopping at the WS root, we traverse up the driver root.\n        // We will filter them later based on the expansion state of the tree.\n        for (const [uri, marker] of new Map(markers.map(m => [new URI(m.uri), m] as [URI, Marker<Diagnostic>])).entries()) {\n            const uriString = uri.toString();\n            result.set(uriString, marker);\n            let parentUri: URI | undefined = uri.parent;\n            while (parentUri && !parentUri.path.isRoot) {\n                const parentUriString = parentUri.toString();\n                const existing = result.get(parentUriString);\n                // Make sure the highest diagnostic severity (smaller number) will be propagated to the container directory.\n                if (existing === undefined || this.compare(marker, existing) < 0) {\n                    result.set(parentUriString, {\n                        data: marker.data,\n                        uri: parentUriString,\n                        owner: marker.owner,\n                        kind: marker.kind\n                    });\n                    parentUri = parentUri.parent;\n                } else {\n                    parentUri = undefined;\n                }\n            }\n        }\n        return result;\n    }\n\n    protected collectMarkers(tree: Tree): Marker<Diagnostic>[] {\n        return Array.from(this.problemManager.getUris())\n            .map(uri => new URI(uri))\n            .map(uri => this.problemManager.findMarkers({ uri }))\n            .map(markers => markers.sort(this.compare.bind(this)))\n            .map(markers => markers.shift())\n            .filter(notEmpty)\n            .filter(this.filterMarker.bind(this));\n    }\n\n    protected toDecorator(marker: Marker<Diagnostic>): TreeDecoration.Data {\n        const position = TreeDecoration.IconOverlayPosition.BOTTOM_RIGHT;\n        const icon = this.getOverlayIcon(marker);\n        const color = this.getOverlayIconColor(marker);\n        const priority = this.getPriority(marker);\n        return {\n            priority,\n            fontData: {\n                color,\n            },\n            iconOverlay: {\n                position,\n                icon,\n                color,\n                background: {\n                    shape: 'circle',\n                    color: 'transparent'\n                }\n            },\n        };\n    }\n\n    protected getOverlayIcon(marker: Marker<Diagnostic>): string {\n        const { severity } = marker.data;\n        switch (severity) {\n            case 1: return 'times-circle';\n            case 2: return 'exclamation-circle';\n            case 3: return 'info-circle';\n            default: return 'hand-o-up';\n        }\n    }\n\n    protected getOverlayIconColor(marker: Marker<Diagnostic>): TreeDecoration.Color {\n        const { severity } = marker.data;\n        switch (severity) {\n            case 1: return 'var(--theia-editorError-foreground)';\n            case 2: return 'var(--theia-editorWarning-foreground)';\n            case 3: return 'var(--theia-editorInfo-foreground)';\n            default: return 'var(--theia-successBackground)';\n        }\n    }\n\n    /**\n     * Get the decoration for a given marker diagnostic.\n     * Markers with higher severity have a higher priority and should be displayed.\n     * @param marker the diagnostic marker.\n     */\n    protected getPriority(marker: Marker<Diagnostic>): number {\n        const { severity } = marker.data;\n        switch (severity) {\n            case 1: return 30; // Errors.\n            case 2: return 20; // Warnings.\n            case 3: return 10; // Infos.\n            default: return 0;\n        }\n    }\n\n    /**\n     * Returns `true` if the diagnostic (`data`) of the marker argument has `Error`, `Warning`, or `Information` severity.\n     * Otherwise, returns `false`.\n     */\n    protected filterMarker(marker: Marker<Diagnostic>): boolean {\n        const { severity } = marker.data;\n        return severity === DiagnosticSeverity.Error\n            || severity === DiagnosticSeverity.Warning\n            || severity === DiagnosticSeverity.Information;\n    }\n\n    protected compare(left: Marker<Diagnostic>, right: Marker<Diagnostic>): number {\n        return ProblemDecorator.severityCompare(left, right);\n    }\n\n}\n\nexport namespace ProblemDecorator {\n\n    // Highest severities (errors) come first, then the others. Undefined severities treated as the last ones.\n    export const severityCompare = ProblemUtils.severityCompareMarker;\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport '../../../src/browser/style/index.css';\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { ProblemWidget, PROBLEMS_WIDGET_ID } from './problem-widget';\nimport { ProblemContribution } from './problem-contribution';\nimport { createProblemWidget } from './problem-container';\nimport { FrontendApplicationContribution, bindViewContribution, ApplicationShellLayoutMigration, LabelProviderContribution } from '@theia/core/lib/browser';\nimport { ProblemManager } from './problem-manager';\nimport { WidgetFactory } from '@theia/core/lib/browser/widget-manager';\nimport { NavigatorTreeDecorator } from '@theia/navigator/lib/browser/navigator-decorator-service';\nimport { ProblemDecorator } from './problem-decorator';\nimport { ProblemTabBarDecorator } from './problem-tabbar-decorator';\nimport { TabBarToolbarContribution } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { ProblemLayoutVersion3Migration } from './problem-layout-migrations';\nimport { TabBarDecorator } from '@theia/core/lib/browser/shell/tab-bar-decorator';\nimport { bindProblemPreferences } from './problem-preferences';\nimport { MarkerTreeLabelProvider } from '../marker-tree-label-provider';\nimport { ProblemWidgetTabBarDecorator } from './problem-widget-tab-bar-decorator';\nimport { OpenEditorsTreeDecorator } from '@theia/navigator/lib/browser/open-editors-widget/navigator-open-editors-decorator-service';\n\nexport default new ContainerModule(bind => {\n    bindProblemPreferences(bind);\n\n    bind(ProblemManager).toSelf().inSingletonScope();\n\n    bind(ProblemWidget).toDynamicValue(ctx =>\n        createProblemWidget(ctx.container)\n    );\n    bind(WidgetFactory).toDynamicValue(context => ({\n        id: PROBLEMS_WIDGET_ID,\n        createWidget: () => context.container.get<ProblemWidget>(ProblemWidget)\n    }));\n    bind(ApplicationShellLayoutMigration).to(ProblemLayoutVersion3Migration).inSingletonScope();\n\n    bindViewContribution(bind, ProblemContribution);\n    bind(FrontendApplicationContribution).toService(ProblemContribution);\n    bind(TabBarToolbarContribution).toService(ProblemContribution);\n\n    bind(ProblemDecorator).toSelf().inSingletonScope();\n    bind(NavigatorTreeDecorator).toService(ProblemDecorator);\n    bind(OpenEditorsTreeDecorator).toService(ProblemDecorator);\n    bind(ProblemTabBarDecorator).toSelf().inSingletonScope();\n    bind(TabBarDecorator).toService(ProblemTabBarDecorator);\n\n    bind(MarkerTreeLabelProvider).toSelf().inSingletonScope();\n    bind(LabelProviderContribution).toService(MarkerTreeLabelProvider);\n\n    bind(ProblemWidgetTabBarDecorator).toSelf().inSingletonScope();\n    bind(TabBarDecorator).toService(ProblemWidgetTabBarDecorator);\n});\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { ApplicationShellLayoutMigration, WidgetDescription } from '@theia/core/lib/browser/shell/shell-layout-restorer';\nimport { PROBLEM_KIND } from '../../common/problem-marker';\nimport { PROBLEMS_WIDGET_ID } from './problem-widget';\n\n@injectable()\nexport class ProblemLayoutVersion3Migration implements ApplicationShellLayoutMigration {\n    readonly layoutVersion = 3.0;\n    onWillInflateWidget(desc: WidgetDescription): WidgetDescription | undefined {\n        if (desc.constructionOptions.factoryId === PROBLEM_KIND) {\n            desc.constructionOptions.factoryId = PROBLEMS_WIDGET_ID;\n            return desc;\n        }\n        return undefined;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { Diagnostic, DiagnosticSeverity } from '@theia/core/shared/vscode-languageserver-protocol';\nimport { Event, Emitter } from '@theia/core/lib/common/event';\nimport { Title, Widget } from '@theia/core/shared/@phosphor/widgets';\nimport { WidgetDecoration } from '@theia/core/lib/browser/widget-decoration';\nimport { TabBarDecorator } from '@theia/core/lib/browser/shell/tab-bar-decorator';\nimport { Marker } from '../../common/marker';\nimport { ProblemManager } from './problem-manager';\nimport { ProblemPreferences, ProblemConfiguration } from './problem-preferences';\nimport { PreferenceChangeEvent, Navigatable } from '@theia/core/lib/browser';\n\n@injectable()\nexport class ProblemTabBarDecorator implements TabBarDecorator {\n\n    readonly id = 'theia-problem-tabbar-decorator';\n\n    protected readonly emitter = new Emitter<void>();\n\n    @inject(ProblemPreferences)\n    protected readonly preferences: ProblemPreferences;\n\n    @inject(ProblemManager)\n    protected readonly problemManager: ProblemManager;\n\n    @postConstruct()\n    protected init(): void {\n        this.problemManager.onDidChangeMarkers(() => this.fireDidChangeDecorations());\n        this.preferences.onPreferenceChanged(event => this.handlePreferenceChange(event));\n    }\n\n    decorate(title: Title<Widget>): WidgetDecoration.Data[] {\n        if (!this.preferences['problems.decorations.tabbar.enabled']) {\n            return [];\n        }\n        const widget = title.owner;\n        if (Navigatable.is(widget)) {\n            const resourceUri = widget.getResourceUri();\n            if (resourceUri) {\n                // Get the list of problem markers for the given resource URI.\n                const markers: Marker<Diagnostic>[] = this.problemManager.findMarkers({ uri: resourceUri });\n                // If no markers are available, return early.\n                if (markers.length === 0) {\n                    return [];\n                }\n                // Store the marker with the highest severity.\n                let maxSeverity: Marker<Diagnostic> | undefined;\n                // Iterate over available markers to determine that which has the highest severity.\n                // Only display a decoration if an error or warning marker is available.\n                for (const marker of markers) {\n                    // Break early if an error marker is present, since it represents the highest severity.\n                    if (marker.data.severity === DiagnosticSeverity.Error) {\n                        maxSeverity = marker;\n                        break;\n                    } else if (marker.data.severity === DiagnosticSeverity.Warning) {\n                        maxSeverity = marker;\n                    }\n                }\n                // Decorate the tabbar with the highest marker severity if available.\n                return maxSeverity ? [this.toDecorator(maxSeverity)] : [];\n            }\n        }\n        return [];\n    }\n\n    get onDidChangeDecorations(): Event<void> {\n        return this.emitter.event;\n    }\n\n    protected fireDidChangeDecorations(): void {\n        this.emitter.fire(undefined);\n    }\n\n    /**\n     * Handle changes in preference.\n     * @param {PreferenceChangeEvent<ProblemConfiguration>} event The event of the changes in preference.\n     */\n    protected async handlePreferenceChange(event: PreferenceChangeEvent<ProblemConfiguration>): Promise<void> {\n        const { preferenceName } = event;\n        if (preferenceName === 'problems.decorations.tabbar.enabled') {\n            this.fireDidChangeDecorations();\n        }\n    }\n\n    /**\n     * Convert a diagnostic marker to a decorator.\n     * @param {Marker<Diagnostic>} marker A diagnostic marker.\n     * @returns {WidgetDecoration.Data} The decoration data.\n     */\n    protected toDecorator(marker: Marker<Diagnostic>): WidgetDecoration.Data {\n        const position = WidgetDecoration.IconOverlayPosition.BOTTOM_RIGHT;\n        const icon = this.getOverlayIcon(marker);\n        const color = this.getOverlayIconColor(marker);\n        return {\n            iconOverlay: {\n                position,\n                icon,\n                color,\n                background: {\n                    shape: 'circle',\n                    color: 'transparent'\n                }\n            }\n        };\n    }\n\n    /**\n     * Get the appropriate overlay icon for decoration.\n     * @param {Marker<Diagnostic>} marker A diagnostic marker.\n     * @returns {string} A string representing the overlay icon class.\n     */\n    protected getOverlayIcon(marker: Marker<Diagnostic>): string {\n        const { severity } = marker.data;\n        switch (severity) {\n            case 1: return 'times-circle';\n            case 2: return 'exclamation-circle';\n            case 3: return 'info-circle';\n            default: return 'hand-o-up';\n        }\n    }\n\n    /**\n     * Get the appropriate overlay icon color for decoration.\n     * @param {Marker<Diagnostic>} marker A diagnostic marker.\n     * @returns {WidgetDecoration.Color} The decoration color.\n     */\n    protected getOverlayIconColor(marker: Marker<Diagnostic>): WidgetDecoration.Color {\n        const { severity } = marker.data;\n        switch (severity) {\n            case 1: return 'var(--theia-editorError-foreground)';\n            case 2: return 'var(--theia-editorWarning-foreground)';\n            case 3: return 'var(--theia-editorInfo-foreground)';\n            default: return 'var(--theia-successBackground)';\n        }\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { Event, Emitter } from '@theia/core/lib/common/event';\nimport { ProblemManager } from './problem-manager';\nimport { TabBarDecorator } from '@theia/core/lib/browser/shell/tab-bar-decorator';\nimport { Title, Widget } from '@theia/core/lib/browser';\nimport { WidgetDecoration } from '@theia/core/lib/browser/widget-decoration';\n\n@injectable()\nexport class ProblemWidgetTabBarDecorator implements TabBarDecorator {\n\n    readonly id = 'theia-problems-widget-tabbar-decorator';\n    protected readonly emitter = new Emitter<void>();\n\n    @inject(ProblemManager)\n    protected readonly problemManager: ProblemManager;\n\n    @postConstruct()\n    protected init(): void {\n        this.problemManager.onDidChangeMarkers(() => this.fireDidChangeDecorations());\n    }\n\n    decorate(title: Title<Widget>): WidgetDecoration.Data[] {\n        if (title.owner.id === 'problems') {\n            const { infos, warnings, errors } = this.problemManager.getProblemStat();\n            const markerCount = infos + warnings + errors;\n            return markerCount > 0 ? [{ badge: markerCount }] : [];\n        } else {\n            return [];\n        }\n    }\n\n    get onDidChangeDecorations(): Event<void> {\n        return this.emitter.event;\n    }\n\n    protected fireDidChangeDecorations(): void {\n        this.emitter.fire(undefined);\n    }\n}\n","import api from \"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":[],"sourceRoot":""}