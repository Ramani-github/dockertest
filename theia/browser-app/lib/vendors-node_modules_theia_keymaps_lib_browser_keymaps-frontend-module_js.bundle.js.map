{"version":3,"file":"vendors-node_modules_theia_keymaps_lib_browser_keymaps-frontend-module_js.bundle.js","mappings":"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","sources":["webpack:///../node_modules/@theia/keymaps/src/browser/style/index.css?../node_modules/css-loader/dist/cjs.js","webpack:///../node_modules/@theia/core/src/browser/widgets/alert-message.tsx?","webpack:///../node_modules/@theia/core/shared/fuzzy/index.js?","webpack:///../node_modules/@theia/core/shared/lodash.debounce/index.js?","webpack:///../node_modules/@theia/keymaps/src/browser/keybinding-schema-updater.ts?","webpack:///../node_modules/@theia/keymaps/src/browser/keybindings-widget.tsx?","webpack:///../node_modules/@theia/keymaps/src/browser/keymaps-frontend-contribution.ts?","webpack:///../node_modules/@theia/keymaps/src/browser/keymaps-frontend-module.ts?","webpack:///../node_modules/@theia/keymaps/src/browser/keymaps-monaco-contribution.ts?","webpack:///../node_modules/@theia/keymaps/src/browser/keymaps-service.ts?","webpack:///../node_modules/@theia/userstorage/src/browser/index.ts?","webpack:///../node_modules/@theia/userstorage/src/browser/user-storage-contribution.ts?","webpack:///../node_modules/@theia/userstorage/src/browser/user-storage-frontend-module.ts?","webpack:///../node_modules/@theia/userstorage/src/browser/user-storage-uri.ts?","webpack:///../node_modules/@theia/keymaps/src/browser/style/index.css?"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2018 Ericsson and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n#kb-main-container {\\n    display: flex;\\n    flex-direction: column;\\n    height: 100%;\\n}\\n\\n#kb-table-container {\\n    flex: 1;\\n    overflow: auto;\\n}\\n\\n.fuzzy-match {\\n    font-weight: 600;\\n    color: var(--theia-list-highlightForeground);\\n}\\n\\n.kb-actions {\\n    text-align: center;\\n    vertical-align: middle;\\n}\\n\\n.kb-action-item {\\n    visibility: hidden;\\n    padding-right: 5px;\\n}\\n\\n.kb table {\\n    border-spacing: 0;\\n    border-collapse: separate;\\n    background-color: var(--theia-editor-background);\\n    width: 100%;\\n    table-layout: fixed;\\n}\\n\\n.kb table tr {\\n    min-height: var(--theia-icon-size);\\n}\\n\\n.th-action, .th-keybinding,\\n.kb-actions, .kb-keybinding {\\n    min-height: 18px;\\n    overflow: hidden;\\n    vertical-align: middle;\\n    white-space: nowrap;\\n}\\n\\n.th-action,\\n.kb-actions {\\n    padding: 2px 0px 5px 0px;\\n}\\n\\n.th-keybinding,\\n.kb-keybinding {\\n    padding: 2px 10px 5px 10px;\\n}\\n\\n.th-label, .th-source, .th-context, .th-keybinding,\\n.kb-label, .kb-source, .kb-context {\\n    padding: 2px 10px 5px 10px;\\n    min-height: 18px;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    vertical-align: middle;\\n    white-space: nowrap;\\n}\\n\\n.kb table th {\\n    font-size: var(--theia-ui-font-size1);\\n}\\n\\n.kb table td code {\\n    font-size: 90%;\\n}\\n\\n.td-source {\\n    text-transform: lowercase;\\n}\\n\\n.kb table tr:nth-child(odd) {\\n    background-color: rgba(130, 130, 130, 0.04);\\n}\\n\\n.kb table tbody tr:hover {\\n    background-color: var(--theia-list-focusBackground);\\n}\\n\\n.kb table tbody tr:hover .kb-action-item {\\n    visibility: visible;\\n    color: var(--theia-icon-foreground);\\n    text-decoration: none;\\n}\\n\\n.kb table th {\\n    word-break: keep-all;\\n    padding-bottom: 5px;\\n    padding-top: 5px;\\n    text-align: left;\\n    vertical-align: middle;\\n    position: sticky;\\n    top: 0;\\n    background-color: var(--theia-editorWidget-background);\\n}\\n\\n.kb table .th-action {\\n    width: 4%;\\n}\\n\\n.kb table .th-label {\\n    width: 25%;\\n}\\n\\n.kb table .th-keybinding {\\n    width: 20%;\\n}\\n\\n.kb table .th-source {\\n    width: 10%;\\n}\\n\\n.kb table .th-context {\\n    width: 25%;\\n}\\n\\n.no-kb {\\n    border: 1px solid  var(--theia-editorWarning-foreground);\\n}\\n\\n#search-kb {\\n    height: 25px;\\n    flex: 1;\\n}\\n\\n.vs #search-kb {\\n    border: 1px solid #ddd;\\n}\\n\\n.search-kb-container {\\n    padding: 10px;\\n    display: flex;\\n}\\n\\n.kb-item-row td a,\\n.kb-item-row td a:active,\\n.kb-item-row td a:focus {\\n    outline: 0;\\n    border: none;\\n}\\n\\n.kb-actions-icons {\\n    display: block;\\n    width: 50%;\\n    margin-left: auto;\\n    margin-right: auto;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./../node_modules/@theia/keymaps/src/browser/style/index.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;IACI,aAAa;IACb,sBAAsB;IACtB,YAAY;AAChB;;AAEA;IACI,OAAO;IACP,cAAc;AAClB;;AAEA;IACI,gBAAgB;IAChB,4CAA4C;AAChD;;AAEA;IACI,kBAAkB;IAClB,sBAAsB;AAC1B;;AAEA;IACI,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,iBAAiB;IACjB,yBAAyB;IACzB,gDAAgD;IAChD,WAAW;IACX,mBAAmB;AACvB;;AAEA;IACI,kCAAkC;AACtC;;AAEA;;IAEI,gBAAgB;IAChB,gBAAgB;IAChB,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;;IAEI,wBAAwB;AAC5B;;AAEA;;IAEI,0BAA0B;AAC9B;;AAEA;;IAEI,0BAA0B;IAC1B,gBAAgB;IAChB,gBAAgB;IAChB,uBAAuB;IACvB,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI,qCAAqC;AACzC;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,2CAA2C;AAC/C;;AAEA;IACI,mDAAmD;AACvD;;AAEA;IACI,mBAAmB;IACnB,mCAAmC;IACnC,qBAAqB;AACzB;;AAEA;IACI,oBAAoB;IACpB,mBAAmB;IACnB,gBAAgB;IAChB,gBAAgB;IAChB,sBAAsB;IACtB,gBAAgB;IAChB,MAAM;IACN,sDAAsD;AAC1D;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,wDAAwD;AAC5D;;AAEA;IACI,YAAY;IACZ,OAAO;AACX;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,aAAa;AACjB;;AAEA;;;IAGI,UAAU;IACV,YAAY;AAChB;;AAEA;IACI,cAAc;IACd,UAAU;IACV,iBAAiB;IACjB,kBAAkB;AACtB\",\"sourcesContent\":[\"/********************************************************************************\\n * Copyright (C) 2018 Ericsson and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n#kb-main-container {\\n    display: flex;\\n    flex-direction: column;\\n    height: 100%;\\n}\\n\\n#kb-table-container {\\n    flex: 1;\\n    overflow: auto;\\n}\\n\\n.fuzzy-match {\\n    font-weight: 600;\\n    color: var(--theia-list-highlightForeground);\\n}\\n\\n.kb-actions {\\n    text-align: center;\\n    vertical-align: middle;\\n}\\n\\n.kb-action-item {\\n    visibility: hidden;\\n    padding-right: 5px;\\n}\\n\\n.kb table {\\n    border-spacing: 0;\\n    border-collapse: separate;\\n    background-color: var(--theia-editor-background);\\n    width: 100%;\\n    table-layout: fixed;\\n}\\n\\n.kb table tr {\\n    min-height: var(--theia-icon-size);\\n}\\n\\n.th-action, .th-keybinding,\\n.kb-actions, .kb-keybinding {\\n    min-height: 18px;\\n    overflow: hidden;\\n    vertical-align: middle;\\n    white-space: nowrap;\\n}\\n\\n.th-action,\\n.kb-actions {\\n    padding: 2px 0px 5px 0px;\\n}\\n\\n.th-keybinding,\\n.kb-keybinding {\\n    padding: 2px 10px 5px 10px;\\n}\\n\\n.th-label, .th-source, .th-context, .th-keybinding,\\n.kb-label, .kb-source, .kb-context {\\n    padding: 2px 10px 5px 10px;\\n    min-height: 18px;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    vertical-align: middle;\\n    white-space: nowrap;\\n}\\n\\n.kb table th {\\n    font-size: var(--theia-ui-font-size1);\\n}\\n\\n.kb table td code {\\n    font-size: 90%;\\n}\\n\\n.td-source {\\n    text-transform: lowercase;\\n}\\n\\n.kb table tr:nth-child(odd) {\\n    background-color: rgba(130, 130, 130, 0.04);\\n}\\n\\n.kb table tbody tr:hover {\\n    background-color: var(--theia-list-focusBackground);\\n}\\n\\n.kb table tbody tr:hover .kb-action-item {\\n    visibility: visible;\\n    color: var(--theia-icon-foreground);\\n    text-decoration: none;\\n}\\n\\n.kb table th {\\n    word-break: keep-all;\\n    padding-bottom: 5px;\\n    padding-top: 5px;\\n    text-align: left;\\n    vertical-align: middle;\\n    position: sticky;\\n    top: 0;\\n    background-color: var(--theia-editorWidget-background);\\n}\\n\\n.kb table .th-action {\\n    width: 4%;\\n}\\n\\n.kb table .th-label {\\n    width: 25%;\\n}\\n\\n.kb table .th-keybinding {\\n    width: 20%;\\n}\\n\\n.kb table .th-source {\\n    width: 10%;\\n}\\n\\n.kb table .th-context {\\n    width: 25%;\\n}\\n\\n.no-kb {\\n    border: 1px solid  var(--theia-editorWarning-foreground);\\n}\\n\\n#search-kb {\\n    height: 25px;\\n    flex: 1;\\n}\\n\\n.vs #search-kb {\\n    border: 1px solid #ddd;\\n}\\n\\n.search-kb-container {\\n    padding: 10px;\\n    display: flex;\\n}\\n\\n.kb-item-row td a,\\n.kb-item-row td a:active,\\n.kb-item-row td a:focus {\\n    outline: 0;\\n    border: none;\\n}\\n\\n.kb-actions-icons {\\n    display: block;\\n    width: 50%;\\n    margin-left: auto;\\n    margin-right: auto;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport React = require('react');\nimport { codicon } from './widget';\n\nexport type MessageType = keyof AlertMessageIcon;\n\ninterface AlertMessageIcon {\n    INFO: string;\n    SUCCESS: string;\n    WARNING: string;\n    ERROR: string;\n}\n\nconst AlertMessageIcon = {\n    INFO: codicon('info'),\n    SUCCESS: codicon('pass'),\n    WARNING: codicon('warning'),\n    ERROR: codicon('error')\n};\n\nexport interface AlertMessageProps {\n    type: MessageType;\n    header: string;\n}\n\nexport class AlertMessage extends React.Component<AlertMessageProps> {\n\n    render(): React.ReactNode {\n        return <div className='theia-alert-message-container'>\n            <div className={`theia-${this.props.type.toLowerCase()}-alert`}>\n                <div className='theia-message-header'>\n                    <i className={AlertMessageIcon[this.props.type]}></i>&nbsp;\n                    {this.props.header}\n                </div>\n                <div className='theia-message-content'>{this.props.children}</div>\n            </div>\n        </div>;\n    }\n\n}\n","module.exports = require('fuzzy');\n","module.exports = require('lodash.debounce');\n","/********************************************************************************\n * Copyright (C) 2022 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { nls, CommandRegistry, InMemoryResources, deepClone } from '@theia/core/lib/common';\nimport { JsonSchemaContribution, JsonSchemaRegisterContext } from '@theia/core/lib/browser/json-schema-store';\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\n\n@injectable()\nexport class KeybindingSchemaUpdater implements JsonSchemaContribution {\n    protected readonly uri = new URI(keybindingSchemaId);\n    @inject(CommandRegistry) protected readonly commandRegistry: CommandRegistry;\n    @inject(InMemoryResources) protected readonly inMemoryResources: InMemoryResources;\n\n    @postConstruct()\n    protected init(): void {\n        this.inMemoryResources.add(new URI(keybindingSchemaId), '');\n        this.updateSchema();\n        this.commandRegistry.onCommandsChanged(() => this.updateSchema());\n    }\n\n    registerSchemas(store: JsonSchemaRegisterContext): void {\n        store.registerSchema({\n            fileMatch: ['keybindings.json', 'keymaps.json'],\n            url: this.uri.toString(),\n        });\n    }\n\n    protected updateSchema(): void {\n        const schema = deepClone(keybindingSchema);\n        const enumValues = schema.items.allOf[0].properties!.command.anyOf[1].enum!;\n        const enumDescriptions = schema.items.allOf[0].properties!.command.anyOf[1].enumDescriptions!;\n        for (const command of this.commandRegistry.getAllCommands()) {\n            if (command.handlers.length > 0 && !command.id.startsWith('_')) {\n                enumValues.push(command.id);\n                enumDescriptions.push(command.label ?? '');\n            }\n        }\n        this.inMemoryResources.update(this.uri, JSON.stringify(schema));\n    }\n}\n\nconst keybindingSchemaId = 'vscode://schemas/keybindings';\nexport const keybindingSchema = {\n    $id: keybindingSchemaId,\n    type: 'array',\n    title: 'Keybinding Configuration File',\n    default: [],\n    definitions: {\n        key: { type: 'string', description: nls.localizeByDefault('Key or key sequence (separated by space)') },\n    },\n    items: {\n        type: 'object',\n        defaultSnippets: [{ body: { key: '$1', command: '$2', when: '$3' } }],\n        allOf: [\n            {\n                required: ['command'],\n                properties: {\n                    command: {\n                        anyOf: [{ type: 'string' }, { enum: <string[]>[], enumDescriptions: <string[]>[] }], description: nls.localizeByDefault('Name of the command to execute')\n                    },\n                    when: { type: 'string', description: nls.localizeByDefault('Condition when the key is active.') },\n                    args: { description: nls.localizeByDefault('Arguments to pass to the command to execute.') },\n                    context: {\n                        type: 'string',\n                        description: nls.localizeByDefault('Condition when the key is active.'),\n                        deprecationMessage: nls.localize('theia/keybinding-schema-updater/deprecation', 'Use `when` clause instead.')\n                    }\n                }\n            },\n            {\n                anyOf: [\n                    { required: ['key'], properties: { key: { $ref: '#/definitions/key' }, } },\n                    { required: ['keybinding'], properties: { keybinding: { $ref: '#/definitions/key' } } }\n                ]\n            }\n        ]\n    },\n    allowComments: true,\n    allowTrailingCommas: true,\n};\n\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport React = require('@theia/core/shared/react');\nimport debounce = require('@theia/core/shared/lodash.debounce');\nimport * as fuzzy from '@theia/core/shared/fuzzy';\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport { CommandRegistry, Command } from '@theia/core/lib/common/command';\nimport { ReactWidget } from '@theia/core/lib/browser/widgets/react-widget';\nimport {\n    KeybindingRegistry, SingleTextInputDialog, KeySequence, ConfirmDialog, Message, KeybindingScope, SingleTextInputDialogProps, Key, ScopedKeybinding, codicon\n} from '@theia/core/lib/browser';\nimport { KeymapsService } from './keymaps-service';\nimport { AlertMessage } from '@theia/core/lib/browser/widgets/alert-message';\n\n/**\n * Representation of a keybinding item for the view.\n */\nexport interface KeybindingItem {\n    command: Command\n    keybinding?: ScopedKeybinding\n    /** human-readable labels can contain highlighting */\n    labels: {\n        id: string\n        command: string\n        keybinding: string\n        context: string\n        source: string\n    }\n}\n\n/**\n * Representation of an individual table cell.\n */\nexport interface CellData {\n    /**\n     * The cell value.\n     */\n    value: string,\n    /**\n     * Indicates if a cell's value is currently highlighted.\n     */\n    highlighted: boolean,\n}\n\n@injectable()\nexport class KeybindingWidget extends ReactWidget {\n\n    @inject(CommandRegistry)\n    protected readonly commandRegistry: CommandRegistry;\n\n    @inject(KeybindingRegistry)\n    protected readonly keybindingRegistry: KeybindingRegistry;\n\n    @inject(KeymapsService)\n    protected readonly keymapsService: KeymapsService;\n\n    static readonly ID = 'keybindings.view.widget';\n    static readonly LABEL = 'Keyboard Shortcuts';\n\n    /**\n     * The list of all available keybindings.\n     */\n    protected items: KeybindingItem[] = [];\n\n    /**\n     * The current user search query.\n     */\n    protected query: string = '';\n\n    /**\n     * The regular expression used to extract values between fuzzy results.\n     */\n    protected readonly regexp = /<match>(.*?)<\\/match>/g;\n    /**\n     * The regular expression used to extract values between the keybinding separator.\n     */\n    protected readonly keybindingSeparator = /<match>\\+<\\/match>/g;\n\n    /**\n     * The fuzzy search options.\n     * The `pre` and `post` options are used to wrap fuzzy matches.\n     */\n    protected readonly fuzzyOptions = {\n        pre: '<match>',\n        post: '</match>',\n    };\n\n    protected readonly onDidUpdateEmitter = new Emitter<void>();\n    readonly onDidUpdate: Event<void> = this.onDidUpdateEmitter.event;\n\n    /**\n     * Search keybindings.\n     */\n    protected readonly searchKeybindings: () => void = debounce(() => this.doSearchKeybindings(), 50);\n\n    /**\n     * Initialize the widget.\n     */\n    @postConstruct()\n    protected init(): void {\n        this.id = KeybindingWidget.ID;\n        this.title.label = KeybindingWidget.LABEL;\n        this.title.caption = KeybindingWidget.LABEL;\n        this.title.iconClass = codicon('three-bars');\n        this.title.closable = true;\n        this.update();\n\n        // Initialize the list of keybinding items.\n        this.items = this.getItems();\n\n        // Listen to changes made in the `keymaps.json` and update the view accordingly.\n        if (this.keymapsService.onDidChangeKeymaps) {\n            this.toDispose.push(this.keymapsService.onDidChangeKeymaps(() => {\n                this.doSearchKeybindings();\n                this.update();\n            }));\n        }\n    }\n\n    /**\n     * Determine if there currently is a search term.\n     * @returns `true` if a search term is present.\n     */\n    public hasSearch(): boolean {\n        return !!this.query.length;\n    }\n\n    /**\n     * Clear the search and reset the view.\n     */\n    public clearSearch(): void {\n        const search = this.findSearchField();\n        if (search) {\n            search.value = '';\n            this.query = '';\n            this.doSearchKeybindings();\n        }\n    }\n\n    protected onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.focusInputField();\n    }\n\n    /**\n     * Perform a search based on the user's search query.\n     */\n    protected doSearchKeybindings(): void {\n        this.onDidUpdateEmitter.fire(undefined);\n        this.items = [];\n        const searchField = this.findSearchField();\n        this.query = searchField ? searchField.value.trim().toLocaleLowerCase() : '';\n        const items = this.getItems();\n        items.forEach(item => {\n            const keys: (keyof KeybindingItem['labels'])[] = ['command', 'keybinding', 'context', 'source'];\n            let matched = false;\n            for (const key of keys) {\n                const string = item.labels[key];\n                if (string) {\n                    const fuzzyMatch = fuzzy.match(this.query, string, this.fuzzyOptions);\n                    if (fuzzyMatch) {\n                        item.labels[key] = fuzzyMatch.rendered;\n                        matched = true;\n                    } else {\n                        // Match identical keybindings that have different orders.\n                        if (key === 'keybinding') {\n                            const queryItems = this.query.split('+');\n\n                            // Handle key chords.\n                            const tempItems = string.split(' ');\n                            // Store positions of `space` in the keybinding string.\n                            const spaceIndexArr = [0];\n                            let bindingItems: string[] = [];\n                            if (tempItems.length > 1) {\n                                tempItems.forEach(tItem => {\n                                    const tKeys = tItem.split('+');\n                                    spaceIndexArr.push(tKeys.length + spaceIndexArr[-1]);\n                                    bindingItems.push(...tKeys);\n                                });\n                            } else {\n                                bindingItems = string.split('+');\n                            }\n                            spaceIndexArr.shift();\n\n                            const renderedResult = [...bindingItems];\n                            let matchCounter = 0;\n\n                            queryItems.forEach(queryItem => {\n                                let keyFuzzyMatch: fuzzy.MatchResult = { rendered: '', score: 0 };\n                                let keyIndex = -1;\n                                if (string) {\n                                    bindingItems.forEach((bindingItem: string) => {\n                                        // Match every key in user query with every key in keybinding string.\n                                        const tempFuzzyMatch = fuzzy.match(queryItem, bindingItem, this.fuzzyOptions);\n                                        // Select the match with the highest matching score.\n                                        if (tempFuzzyMatch && tempFuzzyMatch.score > keyFuzzyMatch.score) {\n                                            keyFuzzyMatch = tempFuzzyMatch;\n                                            // Get index in the keybinding array.\n                                            keyIndex = renderedResult.indexOf(bindingItem);\n                                        }\n                                    });\n\n                                    const keyRendered = keyFuzzyMatch.rendered;\n                                    if (keyRendered) {\n                                        if (keyIndex > -1) {\n                                            renderedResult[keyIndex] = keyRendered;\n                                        }\n                                        // Remove key from keybinding items if it is matched.\n                                        bindingItems.splice(keyIndex, 1, '');\n                                        matchCounter += 1;\n                                    }\n                                }\n                            });\n                            if (matchCounter === queryItems.length) {\n                                // Handle rendering of key chords.\n                                if (spaceIndexArr.length > 0) {\n                                    const chordRenderedResult = '';\n                                    renderedResult.forEach((resultKey, index) => {\n                                        if (index === 0) {\n                                            chordRenderedResult.concat(resultKey);\n                                        } else if (spaceIndexArr.indexOf(index) !== -1) {\n                                            chordRenderedResult.concat(' ' + resultKey);\n                                        } else {\n                                            chordRenderedResult.concat('+' + resultKey);\n                                        }\n                                    });\n                                    item.labels[key] = chordRenderedResult;\n                                }\n\n                                item.labels[key] = renderedResult.join('+');\n                                matched = true;\n                            }\n                        }\n                    }\n                }\n            }\n\n            if (matched) {\n                this.items.push(item);\n            }\n        });\n        this.update();\n    }\n\n    /**\n     * Get the search input if available.\n     * @returns the search input if available.\n     */\n    protected findSearchField(): HTMLInputElement | null {\n        return document.getElementById('search-kb') as HTMLInputElement;\n    }\n\n    /**\n     * Set the focus the search input field if available.\n     */\n    protected focusInputField(): void {\n        const input = document.getElementById('search-kb');\n        if (input) {\n            (input as HTMLInputElement).focus();\n            (input as HTMLInputElement).select();\n        }\n    }\n\n    /**\n     * Render the view.\n     */\n    protected render(): React.ReactNode {\n        return <div id='kb-main-container'>\n            {this.renderSearch()}\n            {(this.items.length > 0) ? this.renderTable() : this.renderMessage()}\n        </div>;\n    }\n\n    /**\n     * Render the search container with the search input.\n     */\n    protected renderSearch(): React.ReactNode {\n        return <div>\n            <div className='search-kb-container'>\n                <input\n                    id='search-kb'\n                    className={`theia-input${(this.items.length > 0) ? '' : ' no-kb'}`}\n                    type='text'\n                    spellCheck={false}\n                    placeholder='Search keybindings'\n                    autoComplete='off'\n                    onKeyUp={this.searchKeybindings}\n                />\n            </div>\n        </div>;\n    }\n\n    /**\n     * Render the warning message when no search results are found.\n     */\n    protected renderMessage(): React.ReactNode {\n        return <AlertMessage\n            type='WARNING'\n            header='No results found!'\n        />;\n    }\n\n    /**\n     * Render the keybindings table.\n     */\n    protected renderTable(): React.ReactNode {\n        return <div id='kb-table-container'>\n            <div className='kb'>\n                <table>\n                    <thead>\n                        <tr>\n                            <th className='th-action'></th>\n                            <th className='th-label'>Command</th>\n                            <th className='th-keybinding'>Keybinding</th>\n                            <th className='th-context'>Context / When</th>\n                            <th className='th-source'>Source</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        </div>;\n    }\n\n    /**\n     * Render the table rows.\n     */\n    protected renderRows(): React.ReactNode {\n        return <React.Fragment>\n            {this.items.map((item, index) => this.renderRow(item, index))}\n        </React.Fragment>;\n    }\n\n    protected renderRow(item: KeybindingItem, index: number): React.ReactNode {\n        const { command, keybinding } = item;\n        // TODO get rid of array functions in event handlers\n        return <tr className='kb-item-row' key={index} onDoubleClick={() => this.editKeybinding(item)}>\n            <td className='kb-actions'>\n                {this.renderActions(item)}\n            </td>\n            <td className='kb-label' title={this.getCommandLabel(command)}>\n                {this.renderMatchedData(item.labels.command)}\n            </td>\n            <td title={this.getKeybindingLabel(keybinding)} className='kb-keybinding monaco-keybinding'>\n                {this.renderKeybinding(item.labels.keybinding)}\n            </td>\n            <td className='kb-context' title={this.getContextLabel(keybinding)}>\n                <code>{this.renderMatchedData(item.labels.context)}</code>\n            </td>\n            <td className='kb-source' title={this.getScopeLabel(keybinding)}>\n                <code className='td-source'>{this.renderMatchedData(item.labels.source)}</code>\n            </td>\n        </tr>;\n    }\n\n    /**\n     * Render the actions container with action icons.\n     * @param item the keybinding item for the row.\n     */\n    protected renderActions(item: KeybindingItem): React.ReactNode {\n        return <span className='kb-actions-icons'>{this.renderEdit(item)}{this.renderReset(item)}</span>;\n    }\n\n    /**\n     * Render the edit action used to update a keybinding.\n     * @param item the keybinding item for the row.\n     */\n    protected renderEdit(item: KeybindingItem): React.ReactNode {\n        return <a title='Edit Keybinding' href='#' onClick={e => {\n            e.preventDefault();\n            this.editKeybinding(item);\n        }}><i className={`${codicon('edit')} kb-action-item`}></i></a>;\n    }\n\n    /**\n     * Render the reset action to reset the custom keybinding.\n     * Only visible if a keybinding has a `user` scope.\n     * @param item the keybinding item for the row.\n     */\n    protected renderReset(item: KeybindingItem): React.ReactNode {\n        return (item.keybinding && item.keybinding.scope === KeybindingScope.USER)\n            ? <a title='Reset Keybinding' href='#' onClick={e => {\n                e.preventDefault();\n                this.resetKeybinding(item);\n            }}><i className={`${codicon('discard')} kb-action-item`}></i></a> : '';\n    }\n\n    /**\n     * Render the keybinding.\n     * @param keybinding the keybinding value.\n     */\n    protected renderKeybinding(keybinding: string): React.ReactNode {\n        if (!keybinding.length) {\n            return undefined;\n        }\n        const regex = new RegExp(this.keybindingSeparator);\n        keybinding = keybinding.replace(regex, '+');\n        const keys = keybinding.split('+');\n\n        return <React.Fragment>\n            {\n                keys.map((key, index) => {\n                    if (index === 0) {\n                        return <span key={index} className='monaco-keybinding-key'>\n                            {this.renderMatchedData(key)}\n                        </span>;\n                    } else if (key.includes(' ')) {\n                        // Handle key chords, which have space as the separator\n                        // Example: `k Ctrl` in key chords `Ctrl+k Ctrl+p`\n                        let chordKeys = key.split('<match> </match>');\n                        if (chordKeys.length === 1) {\n                            chordKeys = key.split(' ');\n                        }\n                        return <React.Fragment key={index}>\n                            <span className='monaco-keybinding-separator'>+</span>\n                            <span className='monaco-keybinding-key'>{this.renderKeybinding(chordKeys[0])}</span>\n                            <span className='monaco-keybinding-separator'>&nbsp;&nbsp;</span>\n                            <span className='monaco-keybinding-key'>{this.renderKeybinding(chordKeys[1])}</span>\n                        </React.Fragment>;\n                    } else {\n                        return <React.Fragment key={index}>\n                            <span className='monaco-keybinding-separator'>+</span>\n                            <span className='monaco-keybinding-key'>{this.renderKeybinding(key)}</span>\n                        </React.Fragment>;\n                    }\n                })\n            }\n        </React.Fragment>;\n    }\n\n    /**\n     * Get the list of keybinding items.\n     *\n     * @returns the list of keybinding items.\n     */\n    protected getItems(): KeybindingItem[] {\n        // Sort the commands alphabetically.\n        const commands = this.commandRegistry.commands;\n        const items: KeybindingItem[] = [];\n        // Build the keybinding items.\n        for (let i = 0; i < commands.length; i++) {\n            const command = commands[i];\n            // Skip internal commands prefixed by `_`.\n            if (command.id.startsWith('_')) {\n                continue;\n            }\n            const keybinding = this.keybindingRegistry.getKeybindingsForCommand(command.id)[0];\n            items.push({\n                command,\n                keybinding,\n                labels: {\n                    id: command.id,\n                    command: this.getCommandLabel(command),\n                    keybinding: this.getKeybindingLabel(keybinding) || '',\n                    context: this.getContextLabel(keybinding) || '',\n                    source: this.getScopeLabel(keybinding) || ''\n                }\n            });\n        }\n        // Sort the keybinding item by label.\n        const sorted: KeybindingItem[] = items.sort((a, b) => this.compareItem(a.command, b.command));\n        // Get the list of keybinding item with keybindings (visually put them at the top of the table).\n        const keyItems: KeybindingItem[] = sorted.filter(a => !!a.labels.keybinding);\n        // Get the remaining keybinding items (without keybindings).\n        const otherItems: KeybindingItem[] = sorted.filter(a => !a.labels.keybinding);\n\n        // Return the list of keybinding items prioritizing those with a defined keybinding.\n        return [...keyItems, ...otherItems];\n    }\n\n    /**\n     * Get the human-readable label for a given command.\n     * @param command the command.\n     *\n     * @returns a human-readable label for the given command.\n     */\n    protected getCommandLabel(command: Command): string {\n        if (command.label) {\n            // Prefix the command label with the category if it exists, else return the simple label.\n            return command.category ? `${command.category}: ${command.label}` : command.label;\n        }\n        return command.id;\n    }\n\n    protected getKeybindingLabel(keybinding: ScopedKeybinding | undefined): string | undefined {\n        return keybinding && keybinding.keybinding;\n    }\n\n    protected getContextLabel(keybinding: ScopedKeybinding | undefined): string | undefined {\n        return keybinding ? keybinding.context || keybinding.when : undefined;\n    }\n\n    protected getScopeLabel(keybinding: ScopedKeybinding | undefined): string | undefined {\n        let scope = keybinding && keybinding.scope;\n        if (scope !== undefined) {\n            if (scope < KeybindingScope.USER) {\n                scope = KeybindingScope.DEFAULT;\n            }\n            return KeybindingScope[scope].toLocaleLowerCase();\n        }\n        return undefined;\n    }\n\n    /**\n     * Compare two commands.\n     * - Commands with a label should be prioritized and alphabetically sorted.\n     * - Commands without a label (id) should be placed at the bottom.\n     * @param a the first command.\n     * @param b the second command.\n     *\n     * @returns an integer indicating whether `a` comes before, after or is equivalent to `b`.\n     * - returns `-1` if `a` occurs before `b`.\n     * - returns `1` if `a` occurs after `b`.\n     * - returns `0` if they are equivalent.\n     */\n    protected compareItem(a: Command, b: Command): number {\n        const labelA = this.getCommandLabel(a);\n        const labelB = this.getCommandLabel(b);\n        if (labelA === a.id && labelB === b.id) {\n            return labelA.toLowerCase().localeCompare(labelB.toLowerCase());\n        }\n        if (labelA === a.id) {\n            return 1;\n        }\n        if (labelB === b.id) {\n            return -1;\n        }\n        return labelA.toLowerCase().localeCompare(labelB.toLowerCase());\n    }\n\n    /**\n     * Prompt users to update the keybinding for the given command.\n     * @param item the keybinding item.\n     */\n    protected editKeybinding(item: KeybindingItem): void {\n        const command = item.command.id;\n        const oldKeybinding = item.keybinding && item.keybinding.keybinding;\n        const dialog = new EditKeybindingDialog({\n            title: `Edit Keybinding for ${command}`,\n            initialValue: oldKeybinding,\n            validate: newKeybinding => this.validateKeybinding(command, oldKeybinding, newKeybinding),\n        }, this.keymapsService, item);\n        dialog.open().then(async keybinding => {\n            if (keybinding) {\n                await this.keymapsService.setKeybinding({\n                    ...item.keybinding,\n                    command,\n                    keybinding\n                }, oldKeybinding);\n            }\n        });\n    }\n\n    /**\n     * Prompt users for confirmation before resetting.\n     * @param command the command label.\n     *\n     * @returns a Promise which resolves to `true` if a user accepts resetting.\n     */\n    protected async confirmResetKeybinding(item: KeybindingItem): Promise<boolean> {\n        const dialog = new ConfirmDialog({\n            title: `Reset keybinding for '${this.getCommandLabel(item.command)}'`,\n            msg: 'Do you really want to reset this keybinding to its default value?'\n        });\n        return !!await dialog.open();\n    }\n\n    /**\n     * Reset the keybinding to its default value.\n     * @param item the keybinding item.\n     */\n    protected async resetKeybinding(item: KeybindingItem): Promise<void> {\n        const confirmed = await this.confirmResetKeybinding(item);\n        if (confirmed) {\n            this.keymapsService.removeKeybinding(item.command.id);\n        }\n    }\n\n    /**\n     * Validate the provided keybinding value against its previous value.\n     * @param command the command label.\n     * @param oldKeybinding the old keybinding value.\n     * @param keybinding the new keybinding value.\n     *\n     * @returns the end user message to display.\n     */\n    protected validateKeybinding(command: string, oldKeybinding: string | undefined, keybinding: string): string {\n        if (!keybinding) {\n            return 'keybinding value is required';\n        }\n        try {\n            const binding = { command, keybinding };\n            KeySequence.parse(keybinding);\n            if (oldKeybinding === keybinding) {\n                return ' '; // if old and new keybindings match, quietly reject update\n            }\n            if (this.keybindingRegistry.containsKeybindingInScope(binding)) {\n                return 'keybinding currently collides';\n            }\n            return '';\n        } catch (error) {\n            return error;\n        }\n    }\n\n    /**\n     * Build the cell data with highlights if applicable.\n     * @param raw the raw cell value.\n     *\n     * @returns the list of cell data.\n     */\n    protected buildCellData(raw: string): CellData[] {\n        const data: CellData[] = [];\n\n        if (this.query === '') {\n            return data;\n        }\n\n        let following = raw;\n        let leading;\n        let result;\n\n        const regexp = new RegExp(this.regexp);\n\n        while (result = regexp.exec(raw)) {\n            const splitLeftIndex = following.indexOf(result[0]);\n            const splitRightIndex = splitLeftIndex + result[0].length;\n\n            leading = following.slice(0, splitLeftIndex);\n            following = following.slice(splitRightIndex);\n\n            if (leading) {\n                data.push({ value: leading, highlighted: false });\n            }\n            data.push({ value: result[1], highlighted: true });\n        }\n\n        if (following) {\n            data.push({ value: following, highlighted: false });\n        }\n\n        return data;\n    }\n\n    /**\n     * Render the fuzzy representation of a matched result.\n     * @param property one of the `KeybindingItem` properties.\n     */\n    protected renderMatchedData(property: string): React.ReactNode {\n        if (this.query !== '') {\n            const cellData = this.buildCellData(property);\n            return <React.Fragment>\n                {\n                    cellData.map((data, index) => (data.highlighted) ? <span key={index} className='fuzzy-match'>{data.value}</span> : <span key={index}>{data.value}</span>)\n                }\n            </React.Fragment>;\n        } else {\n            return property;\n        }\n    }\n\n}\n/**\n * Dialog used to edit keybindings, and reset custom keybindings.\n */\nclass EditKeybindingDialog extends SingleTextInputDialog {\n\n    /**\n     * The keybinding item in question.\n     */\n    protected item: KeybindingItem;\n\n    /**\n     * HTMLButtonElement used to reset custom keybindings.\n     * Custom keybindings have a `User` scope (exist in `keymaps.json`).\n     */\n    protected resetButton: HTMLButtonElement | undefined;\n\n    constructor(\n        @inject(SingleTextInputDialogProps) protected readonly props: SingleTextInputDialogProps,\n        @inject(KeymapsService) protected readonly keymapsService: KeymapsService,\n        item: KeybindingItem\n    ) {\n        super(props);\n        this.item = item;\n        // Add the `Reset` button if the command currently has a custom keybinding.\n        if (this.item.keybinding && this.item.keybinding.scope === KeybindingScope.USER) {\n            this.appendResetButton();\n        }\n    }\n\n    protected onAfterAttach(msg: Message): void {\n        super.onAfterAttach(msg);\n        if (this.resetButton) {\n            this.addResetAction(this.resetButton, 'click');\n        }\n    }\n\n    /**\n     * Add `Reset` action used to reset a custom keybinding, and close the dialog.\n     * @param element the HTML element in question.\n     * @param additionalEventTypes additional event types.\n     */\n    protected addResetAction<K extends keyof HTMLElementEventMap>(element: HTMLElement, ...additionalEventTypes: K[]): void {\n        this.addKeyListener(element, Key.ENTER, () => {\n            this.reset();\n            this.close();\n        }, ...additionalEventTypes);\n    }\n\n    /**\n     * Create the `Reset` button, and append it to the dialog.\n     *\n     * @returns the `Reset` button.\n     */\n    protected appendResetButton(): HTMLButtonElement {\n        // Create the `Reset` button.\n        this.resetButton = this.createButton('Reset');\n        // Add the `Reset` button to the dialog control panel, before the `Accept` button.\n        this.controlPanel.insertBefore(this.resetButton, this.acceptButton!);\n        this.resetButton.title = 'Reset Keybinding';\n        this.resetButton.classList.add('secondary');\n        return this.resetButton;\n    }\n\n    /**\n     * Perform keybinding reset.\n     */\n    protected reset(): void {\n        this.keymapsService.removeKeybinding(this.item.command.id);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport {\n    CommandContribution,\n    Command,\n    CommandRegistry,\n    MenuContribution,\n    MenuModelRegistry\n} from '@theia/core/lib/common';\nimport { AbstractViewContribution, codicon, Widget } from '@theia/core/lib/browser';\nimport { CommonCommands, CommonMenus } from '@theia/core/lib/browser/common-frontend-contribution';\nimport { KeymapsService } from './keymaps-service';\nimport { KeybindingRegistry } from '@theia/core/lib/browser/keybinding';\nimport { KeybindingWidget } from './keybindings-widget';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport namespace KeymapsCommands {\n    export const OPEN_KEYMAPS = Command.toDefaultLocalizedCommand({\n        id: 'keymaps:open',\n        category: CommonCommands.PREFERENCES_CATEGORY,\n        label: 'Open Keyboard Shortcuts',\n    });\n    export const OPEN_KEYMAPS_JSON = Command.toDefaultLocalizedCommand({\n        id: 'keymaps:openJson',\n        category: CommonCommands.PREFERENCES_CATEGORY,\n        label: 'Open Keyboard Shortcuts (JSON)',\n    });\n    export const OPEN_KEYMAPS_JSON_TOOLBAR: Command = {\n        id: 'keymaps:openJson.toolbar',\n        iconClass: codicon('json')\n    };\n    export const CLEAR_KEYBINDINGS_SEARCH: Command = {\n        id: 'keymaps.clearSearch',\n        iconClass: codicon('clear-all')\n    };\n}\n\n@injectable()\nexport class KeymapsFrontendContribution extends AbstractViewContribution<KeybindingWidget> implements CommandContribution, MenuContribution, TabBarToolbarContribution {\n\n    @inject(KeymapsService)\n    protected readonly keymaps: KeymapsService;\n\n    constructor() {\n        super({\n            widgetId: KeybindingWidget.ID,\n            widgetName: KeybindingWidget.LABEL,\n            defaultWidgetOptions: {\n                area: 'main'\n            },\n        });\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(KeymapsCommands.OPEN_KEYMAPS, {\n            isEnabled: () => true,\n            execute: () => this.openView({ activate: true })\n        });\n        commands.registerCommand(KeymapsCommands.OPEN_KEYMAPS_JSON, {\n            isEnabled: () => true,\n            execute: () => this.keymaps.open()\n        });\n        commands.registerCommand(KeymapsCommands.OPEN_KEYMAPS_JSON_TOOLBAR, {\n            isEnabled: w => this.withWidget(w, () => true),\n            isVisible: w => this.withWidget(w, () => true),\n            execute: w => this.withWidget(w, widget => this.keymaps.open(widget)),\n        });\n        commands.registerCommand(KeymapsCommands.CLEAR_KEYBINDINGS_SEARCH, {\n            isEnabled: w => this.withWidget(w, widget => widget.hasSearch()),\n            isVisible: w => this.withWidget(w, () => true),\n            execute: w => this.withWidget(w, widget => widget.clearSearch()),\n        });\n    }\n\n    registerMenus(menus: MenuModelRegistry): void {\n        menus.registerMenuAction(CommonMenus.FILE_SETTINGS_SUBMENU_OPEN, {\n            commandId: KeymapsCommands.OPEN_KEYMAPS.id,\n            order: 'a20'\n        });\n        menus.registerMenuAction(CommonMenus.SETTINGS_OPEN, {\n            commandId: KeymapsCommands.OPEN_KEYMAPS.id,\n            order: 'a20'\n        });\n    }\n\n    registerKeybindings(keybindings: KeybindingRegistry): void {\n        keybindings.registerKeybinding({\n            command: KeymapsCommands.OPEN_KEYMAPS.id,\n            keybinding: 'ctrl+alt+,'\n        });\n    }\n\n    async registerToolbarItems(toolbar: TabBarToolbarRegistry): Promise<void> {\n        const widget = await this.widget;\n        const onDidChange = widget.onDidUpdate;\n        toolbar.registerItem({\n            id: KeymapsCommands.OPEN_KEYMAPS_JSON_TOOLBAR.id,\n            command: KeymapsCommands.OPEN_KEYMAPS_JSON_TOOLBAR.id,\n            tooltip: nls.localizeByDefault('Open Keyboard Shortcuts (JSON)'),\n            priority: 0,\n        });\n        toolbar.registerItem({\n            id: KeymapsCommands.CLEAR_KEYBINDINGS_SEARCH.id,\n            command: KeymapsCommands.CLEAR_KEYBINDINGS_SEARCH.id,\n            tooltip: nls.localizeByDefault('Clear Keybindings Search Input'),\n            priority: 1,\n            onDidChange,\n        });\n    }\n\n    /**\n     * Determine if the current widget is the keybindings widget.\n     */\n    protected withWidget<T>(widget: Widget | undefined = this.tryGetWidget(), fn: (widget: KeybindingWidget) => T): T | false {\n        if (widget instanceof KeybindingWidget && widget.id === KeybindingWidget.ID) {\n            return fn(widget);\n        }\n        return false;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport './keymaps-monaco-contribution';\nimport '../../src/browser/style/index.css';\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { KeymapsService } from './keymaps-service';\nimport { KeymapsFrontendContribution } from './keymaps-frontend-contribution';\nimport { CommandContribution, MenuContribution } from '@theia/core/lib/common';\nimport { KeybindingContribution } from '@theia/core/lib/browser/keybinding';\nimport { TabBarToolbarContribution } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { WidgetFactory } from '@theia/core/lib/browser';\nimport { KeybindingWidget } from './keybindings-widget';\nimport { KeybindingSchemaUpdater } from './keybinding-schema-updater';\nimport { JsonSchemaContribution } from '@theia/core/lib/browser/json-schema-store';\n\nexport default new ContainerModule(bind => {\n    bind(KeymapsService).toSelf().inSingletonScope();\n    bind(KeymapsFrontendContribution).toSelf().inSingletonScope();\n    bind(CommandContribution).toService(KeymapsFrontendContribution);\n    bind(KeybindingContribution).toService(KeymapsFrontendContribution);\n    bind(MenuContribution).toService(KeymapsFrontendContribution);\n    bind(KeybindingWidget).toSelf();\n    bind(TabBarToolbarContribution).toService(KeymapsFrontendContribution);\n    bind(WidgetFactory).toDynamicValue(context => ({\n        id: KeybindingWidget.ID,\n        createWidget: () => context.container.get<KeybindingWidget>(KeybindingWidget),\n    })).inSingletonScope();\n    bind(KeybindingSchemaUpdater).toSelf().inSingletonScope();\n    bind(JsonSchemaContribution).toService(KeybindingSchemaUpdater);\n});\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nmonaco.languages.register({\n    id: 'jsonc',\n    'aliases': [\n        'JSON with Comments'\n    ],\n    'filenames': [\n        'keymaps.json'\n    ]\n});\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { OpenerService, open, WidgetOpenerOptions, Widget } from '@theia/core/lib/browser';\nimport { KeybindingRegistry, KeybindingScope } from '@theia/core/lib/browser/keybinding';\nimport { Keybinding, RawKeybinding } from '@theia/core/lib/common/keybinding';\nimport { UserStorageUri } from '@theia/userstorage/lib/browser';\nimport * as jsoncparser from 'jsonc-parser';\nimport { Emitter } from '@theia/core/lib/common/event';\nimport { MonacoTextModelService } from '@theia/monaco/lib/browser/monaco-text-model-service';\nimport { MonacoEditorModel } from '@theia/monaco/lib/browser/monaco-editor-model';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport URI from '@theia/core/lib/common/uri';\nimport { MonacoWorkspace } from '@theia/monaco/lib/browser/monaco-workspace';\nimport { MessageService } from '@theia/core/lib/common/message-service';\n\n@injectable()\nexport class KeymapsService {\n\n    @inject(MonacoWorkspace)\n    protected readonly workspace: MonacoWorkspace;\n\n    @inject(MonacoTextModelService)\n    protected readonly textModelService: MonacoTextModelService;\n\n    @inject(KeybindingRegistry)\n    protected readonly keybindingRegistry: KeybindingRegistry;\n\n    @inject(OpenerService)\n    protected readonly opener: OpenerService;\n\n    @inject(MessageService)\n    protected readonly messageService: MessageService;\n\n    protected readonly changeKeymapEmitter = new Emitter<void>();\n    readonly onDidChangeKeymaps = this.changeKeymapEmitter.event;\n\n    protected model: MonacoEditorModel | undefined;\n    protected readonly deferredModel = new Deferred<MonacoEditorModel>();\n\n    /**\n     * Initialize the keybinding service.\n     */\n    @postConstruct()\n    protected async init(): Promise<void> {\n        const reference = await this.textModelService.createModelReference(UserStorageUri.resolve('keymaps.json'));\n        this.model = reference.object;\n        this.deferredModel.resolve(this.model);\n\n        this.reconcile();\n        this.model.onDidChangeContent(() => this.reconcile());\n        this.model.onDirtyChanged(() => this.reconcile());\n        this.model.onDidChangeValid(() => this.reconcile());\n        this.keybindingRegistry.onKeybindingsChanged(() => this.changeKeymapEmitter.fire(undefined));\n    }\n\n    /**\n     * Reconcile all the keybindings, registering them to the registry.\n     */\n    protected reconcile(): void {\n        const model = this.model;\n        if (!model || model.dirty) {\n            return;\n        }\n        try {\n            const keybindings: Keybinding[] = [];\n            if (model.valid) {\n                const content = model.getText();\n                const json = jsoncparser.parse(content, undefined, { disallowComments: false });\n                if (Array.isArray(json)) {\n                    for (const value of json) {\n                        if (Keybinding.is(value)) {\n                            keybindings.push(value);\n                        } else if (RawKeybinding.is(value)) {\n                            keybindings.push(Keybinding.apiObjectify(value));\n                        }\n                    }\n                }\n            }\n            this.keybindingRegistry.setKeymap(KeybindingScope.USER, keybindings);\n        } catch (e) {\n            console.error(`Failed to load keymaps from '${model.uri}'.`, e);\n        }\n    }\n\n    /**\n     * Open the keybindings widget.\n     * @param ref the optional reference for opening the widget.\n     */\n    async open(ref?: Widget): Promise<void> {\n        const model = await this.deferredModel.promise;\n        const options: WidgetOpenerOptions = {\n            widgetOptions: ref ? { area: 'main', mode: 'split-right', ref } : { area: 'main' },\n            mode: 'activate'\n        };\n        if (!model.valid) {\n            await model.save();\n        }\n        await open(this.opener, new URI(model.uri), options);\n    }\n\n    /**\n     * Set the keybinding in the JSON.\n     * @param newKeybinding the JSON keybindings.\n     */\n    async setKeybinding(newKeybinding: Keybinding, oldKeybinding: string | undefined): Promise<void> {\n        return this.updateKeymap(() => {\n            let newAdded = false;\n            let oldRemoved = false;\n            const keybindings = [];\n            for (let keybinding of this.keybindingRegistry.getKeybindingsByScope(KeybindingScope.USER)) {\n                if (Keybinding.equals(keybinding, newKeybinding, true, true)) {\n                    newAdded = true;\n                    keybinding = {\n                        ...keybinding,\n                        keybinding: newKeybinding.keybinding\n                    };\n                }\n                if (oldKeybinding && Keybinding.equals(keybinding, { ...newKeybinding, keybinding: oldKeybinding, command: '-' + newKeybinding.command }, false, true)) {\n                    oldRemoved = true;\n                }\n                keybindings.push(keybinding);\n            }\n            if (!newAdded) {\n                keybindings.push({\n                    command: newKeybinding.command,\n                    keybinding: newKeybinding.keybinding,\n                    context: newKeybinding.context,\n                    when: newKeybinding.when,\n                    args: newKeybinding.args\n                });\n                newAdded = true;\n            }\n            if (!oldRemoved && oldKeybinding) {\n                const disabledBinding = {\n                    command: '-' + newKeybinding.command,\n                    // TODO key: oldKeybinding, see https://github.com/eclipse-theia/theia/issues/6879\n                    keybinding: oldKeybinding,\n                    context: newKeybinding.context,\n                    when: newKeybinding.when,\n                    args: newKeybinding.args\n                };\n                // Add disablement of the old keybinding if it isn't already disabled in the list to avoid duplicate disabled entries\n                if (!keybindings.some(binding => Keybinding.equals(binding, disabledBinding, true, true))) {\n                    keybindings.push(disabledBinding);\n                }\n                oldRemoved = true;\n            }\n            if (newAdded || oldRemoved) {\n                return keybindings;\n            }\n        });\n    }\n\n    /**\n     * Remove the given keybinding with the given command id from the JSON.\n     * @param commandId the keybinding command id.\n     */\n    removeKeybinding(commandId: string): Promise<void> {\n        return this.updateKeymap(() => {\n            const keybindings = this.keybindingRegistry.getKeybindingsByScope(KeybindingScope.USER);\n            const removedCommand = '-' + commandId;\n            const filtered = keybindings.filter(a => a.command !== commandId && a.command !== removedCommand);\n            if (filtered.length !== keybindings.length) {\n                return filtered;\n            }\n        });\n    }\n\n    protected async updateKeymap(op: () => Keybinding[] | void): Promise<void> {\n        const model = await this.deferredModel.promise;\n        try {\n            const keybindings = op();\n            if (keybindings) {\n                const content = model.getText().trim();\n                const textModel = model.textEditorModel;\n                const { insertSpaces, tabSize, defaultEOL } = textModel.getOptions();\n                const editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [];\n                for (const edit of jsoncparser.modify(content, [], keybindings.map(binding => Keybinding.apiObjectify(binding)), {\n                    formattingOptions: {\n                        insertSpaces,\n                        tabSize,\n                        eol: defaultEOL === monaco.editor.DefaultEndOfLine.LF ? '\\n' : '\\r\\n'\n                    }\n                })) {\n                    const start = textModel.getPositionAt(edit.offset);\n                    const end = textModel.getPositionAt(edit.offset + edit.length);\n                    editOperations.push({\n                        range: monaco.Range.fromPositions(start, end),\n                        text: edit.content,\n                        forceMoveMarkers: false\n                    });\n                }\n                await this.workspace.applyBackgroundEdit(model, editOperations);\n            }\n        } catch (e) {\n            const message = `Failed to update a keymap in '${model.uri}'.`;\n            this.messageService.error(`${message} Please check if it is corrupted.`);\n            console.error(`${message}`, e);\n        }\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './user-storage-uri';\nexport * from './user-storage-frontend-module';\n","/********************************************************************************\n * Copyright (C) 2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { EnvVariablesServer } from '@theia/core/lib/common/env-variables';\nimport { FileSystemProvider } from '@theia/filesystem/lib/common/files';\nimport { FileService, FileServiceContribution } from '@theia/filesystem/lib/browser/file-service';\nimport { DelegatingFileSystemProvider } from '@theia/filesystem/lib/common/delegating-file-system-provider';\nimport { UserStorageUri } from './user-storage-uri';\n\n@injectable()\nexport class UserStorageContribution implements FileServiceContribution {\n\n    @inject(EnvVariablesServer)\n    protected readonly environments: EnvVariablesServer;\n\n    registerFileSystemProviders(service: FileService): void {\n        service.onWillActivateFileSystemProvider(event => {\n            if (event.scheme === UserStorageUri.scheme) {\n                event.waitUntil((async () => {\n                    const provider = await this.createProvider(service);\n                    service.registerProvider(UserStorageUri.scheme, provider);\n                })());\n            }\n        });\n    }\n\n    protected async createProvider(service: FileService): Promise<FileSystemProvider> {\n        const delegate = await service.activateProvider('file');\n        const configDirUri = new URI(await this.environments.getConfigDirUri());\n        return new DelegatingFileSystemProvider(delegate, {\n            uriConverter: {\n                to: resource => {\n                    const relativePath = UserStorageUri.relative(resource);\n                    if (relativePath) {\n                        return configDirUri.resolve(relativePath).normalizePath();\n                    }\n                    return undefined;\n                },\n                from: resource => {\n                    const relativePath = configDirUri.relative(resource);\n                    if (relativePath) {\n                        return UserStorageUri.resolve(relativePath);\n                    }\n                    return undefined;\n                }\n            }\n        }, new DisposableCollection(\n            delegate.watch(configDirUri, { excludes: [], recursive: true })\n        ));\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { FileServiceContribution } from '@theia/filesystem/lib/browser/file-service';\nimport { UserStorageContribution } from './user-storage-contribution';\n\nexport default new ContainerModule(bind => {\n    bind(UserStorageContribution).toSelf().inSingletonScope();\n    bind(FileServiceContribution).toService(UserStorageContribution);\n});\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport URI from '@theia/core/lib/common/uri';\n\nexport const UserStorageUri = new URI('user-storage:/user');\n","import api from \"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":[],"sourceRoot":""}